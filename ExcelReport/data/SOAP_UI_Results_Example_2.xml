<?xml version="1.0" encoding="UTF-8"?>
<testSuiteResults>
  <testSuite>
    <startTime>13:56:05</startTime>
    <status>FINISHED</status>
    <testSuiteName>Assumptions</testSuiteName>
    <timeTaken>139169</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>13:56:05</startTime>
        <status>FINISHED</status>
        <testCaseId>0dac77ea-88b2-486a-903c-1778d1121458</testCaseId>
        <testCaseName>HO Building Construction assumptions</testCaseName>
        <timeTaken>3088</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 10 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:56:05.092</started>
            <status>OK</status>
            <timeTaken>10</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3077 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>13:56:05.369</started>
            <status>UNKNOWN</status>
            <timeTaken>3077</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 1 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:56:08.452</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>13:56:08.454</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that Building Construction material is Vynil and Brick] OK: took 0 ms</message>
            <name>Then : Verify that Building Construction material is Vynil and Brick</name>
            <order>6</order>
            <started>13:56:08.456</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that Building Construction material is Vynil and Brick</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:56:08</startTime>
        <status>FINISHED</status>
        <testCaseId>3164553c-33ec-460c-97ad-54301450e0cc</testCaseId>
        <testCaseName>HO RoofType assumptions</testCaseName>
        <timeTaken>4249</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:56:08.463</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 4249 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>13:56:08.466</started>
            <status>UNKNOWN</status>
            <timeTaken>4249</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:56:12.723</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>13:56:12.724</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify the roofType assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : The roofMaterial assumption is correct ( A ).</message>
            <name>Then : Verify the roofType assumption</name>
            <order>6</order>
            <started>13:56:12.725</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofType assumption</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:56:12</startTime>
        <status>FINISHED</status>
        <testCaseId>5d51f26a-4170-4bfb-87e2-2222ced9a123</testCaseId>
        <testCaseName>HO RoofYear assumptions</testCaseName>
        <timeTaken>17478</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RoofYearAssumptions] OK: took 36 ms</message>
            <name>DataSource : RoofYearAssumptions</name>
            <order>2</order>
            <started>13:56:12.729</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:56:12.766</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3345 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:56:12.769</started>
            <status>UNKNOWN</status>
            <timeTaken>3345</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:56:16.120</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:56:16.121</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the roofInstallation date assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1980 ) the default roofInstallationYear ( 2000 ) is correct.</message>
            <name>Then : Verify the roofInstallation date assumption</name>
            <order>7</order>
            <started>13:56:16.122</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : RoofYearAssumptions] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RoofYearAssumptions</name>
            <order>8</order>
            <started>13:56:16.123</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:56:16.124</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3125 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:56:16.125</started>
            <status>UNKNOWN</status>
            <timeTaken>3125</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:56:19.256</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:56:19.257</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify the roofInstallation date assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 2017 ) the default roofInstallationYear ( 2017 ) is correct.</message>
            <name>Then : Verify the roofInstallation date assumption</name>
            <order>13</order>
            <started>13:56:19.257</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : RoofYearAssumptions] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RoofYearAssumptions</name>
            <order>14</order>
            <started>13:56:19.258</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:56:19.259</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3110 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:56:19.261</started>
            <status>UNKNOWN</status>
            <timeTaken>3110</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:56:22.377</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:56:22.377</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify the roofInstallation date assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1918 ) the default roofInstallationYear ( 1998 ) is correct.</message>
            <name>Then : Verify the roofInstallation date assumption</name>
            <order>19</order>
            <started>13:56:22.377</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : RoofYearAssumptions] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RoofYearAssumptions</name>
            <order>20</order>
            <started>13:56:22.379</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>13:56:22.380</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2464 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>13:56:22.380</started>
            <status>UNKNOWN</status>
            <timeTaken>2464</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>23</order>
            <started>13:56:24.851</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>24</order>
            <started>13:56:24.852</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify the roofInstallation date assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1917 ) the default roofInstallationYear ( 2017 ) is correct.</message>
            <name>Then : Verify the roofInstallation date assumption</name>
            <order>25</order>
            <started>13:56:24.853</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : RoofYearAssumptions] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : RoofYearAssumptions</name>
            <order>26</order>
            <started>13:56:24.853</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>13:56:24.854</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2659 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>13:56:24.855</started>
            <status>UNKNOWN</status>
            <timeTaken>2659</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>29</order>
            <started>13:56:27.521</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>30</order>
            <started>13:56:27.522</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify the roofInstallation date assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1967 ) the default roofInstallationYear ( 2007 ) is correct.</message>
            <name>Then : Verify the roofInstallation date assumption</name>
            <order>31</order>
            <started>13:56:27.522</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RoofYearAssumptions] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : RoofYearAssumptions</name>
            <order>32</order>
            <started>13:56:27.523</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>13:56:27.524</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2737 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>13:56:27.526</started>
            <status>UNKNOWN</status>
            <timeTaken>2737</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>35</order>
            <started>13:56:30.268</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>36</order>
            <started>13:56:30.269</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Verify the roofInstallation date assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 2016 ) the default roofInstallationYear ( 2016 ) is correct.</message>
            <name>Then : Verify the roofInstallation date assumption</name>
            <order>37</order>
            <started>13:56:30.270</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : RoofYearAssumptions] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : RoofYearAssumptions</name>
            <order>38</order>
            <started>13:56:30.270</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RoofYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofInstallation date assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RoofYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofInstallation date assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RoofYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofInstallation date assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RoofYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofInstallation date assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RoofYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofInstallation date assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RoofYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the roofInstallation date assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RoofYearAssumptions</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:56:30</startTime>
        <status>FINISHED</status>
        <testCaseId>cc1a40a3-540a-475d-ba81-cbe9d2089e9e</testCaseId>
        <testCaseName>HO HeatingSystem assumptions</testCaseName>
        <timeTaken>8855</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : primaryHeatingMethod] OK: took 0 ms</message>
            <name>DataSource : primaryHeatingMethod</name>
            <order>2</order>
            <started>13:56:30.275</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:56:30.276</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2909 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:56:30.277</started>
            <status>UNKNOWN</status>
            <timeTaken>2909</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:56:33.192</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:56:33.193</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the heating assumption is Electrical] OK: took 0 ms</message>
            <name>Then : Verify that the heating assumption is Electrical</name>
            <order>7</order>
            <started>13:56:33.194</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:56:33.195</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and changed heating system] UNKNOWN: took 2984 ms</message>
            <name>Given : I have send Recalculate request and changed heating system</name>
            <order>9</order>
            <started>13:56:33.197</started>
            <status>UNKNOWN</status>
            <timeTaken>2984</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:56:36.188</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify that the heating system is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The primaryHeatingMethod was modified to G</message>
            <name>Then : Verify that the heating system is modified</name>
            <order>11</order>
            <started>13:56:36.189</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : primaryHeatingMethod] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : primaryHeatingMethod</name>
            <order>12</order>
            <started>13:56:36.191</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>13:56:36.191</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and changed heating system] UNKNOWN: took 2961 ms</message>
            <name>Given : I have send Recalculate request and changed heating system</name>
            <order>14</order>
            <started>13:56:36.193</started>
            <status>UNKNOWN</status>
            <timeTaken>2961</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>13:56:39.160</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that the heating system is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The primaryHeatingMethod was modified to O</message>
            <name>Then : Verify that the heating system is modified</name>
            <order>16</order>
            <started>13:56:39.161</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : primaryHeatingMethod] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : primaryHeatingMethod</name>
            <order>17</order>
            <started>13:56:39.162</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating assumption is Electrical</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : primaryHeatingMethod</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:56:39</startTime>
        <status>FINISHED</status>
        <testCaseId>470a7fb2-b4ab-4f32-8d84-ab3c60fa2295</testCaseId>
        <testCaseName>HO BackWaterValve assumptions</testCaseName>
        <timeTaken>17752</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : BackWaterValve] OK: took 35 ms</message>
            <name>DataSource : BackWaterValve</name>
            <order>2</order>
            <started>13:56:39.166</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:56:39.203</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2559 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:56:39.204</started>
            <status>UNKNOWN</status>
            <timeTaken>2559</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:56:41.771</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:56:41.772</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the backWaterValve assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : For homeConstructionYear ( 1967 ), the backWaterValve assumption was correct ( false )</message>
            <name>Then : Verify that the backWaterValve assumption</name>
            <order>7</order>
            <started>13:56:41.772</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>8</order>
            <started>13:56:41.773</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:56:41.774</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3499 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:56:41.775</started>
            <status>UNKNOWN</status>
            <timeTaken>3499</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:56:45.281</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:56:45.282</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify that the backWaterValve assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : For homeConstructionYear ( 1974 ), the backWaterValve assumption was correct ( false )</message>
            <name>Then : Verify that the backWaterValve assumption</name>
            <order>13</order>
            <started>13:56:45.282</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>14</order>
            <started>13:56:45.283</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:56:45.284</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2596 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:56:45.286</started>
            <status>UNKNOWN</status>
            <timeTaken>2596</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:56:47.887</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:56:47.888</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify that the backWaterValve assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : For homeConstructionYear ( 1975 ), the backWaterValve assumption was correct ( false )</message>
            <name>Then : Verify that the backWaterValve assumption</name>
            <order>19</order>
            <started>13:56:47.888</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>20</order>
            <started>13:56:47.889</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>13:56:47.890</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2589 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>13:56:47.892</started>
            <status>UNKNOWN</status>
            <timeTaken>2589</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>23</order>
            <started>13:56:50.487</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>24</order>
            <started>13:56:50.487</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify that the backWaterValve assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : For homeConstructionYear ( 1976 ), the backWaterValve assumption was correct ( true )</message>
            <name>Then : Verify that the backWaterValve assumption</name>
            <order>25</order>
            <started>13:56:50.488</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>26</order>
            <started>13:56:50.489</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>13:56:50.490</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3000 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>13:56:50.491</started>
            <status>UNKNOWN</status>
            <timeTaken>3000</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>29</order>
            <started>13:56:53.497</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>30</order>
            <started>13:56:53.498</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify that the backWaterValve assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : For homeConstructionYear ( 1977 ), the backWaterValve assumption was correct ( true )</message>
            <name>Then : Verify that the backWaterValve assumption</name>
            <order>31</order>
            <started>13:56:53.499</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>32</order>
            <started>13:56:53.499</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>13:56:53.500</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3474 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>13:56:53.502</started>
            <status>UNKNOWN</status>
            <timeTaken>3474</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>35</order>
            <started>13:56:56.981</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>36</order>
            <started>13:56:56.982</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Verify that the backWaterValve assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : For homeConstructionYear ( 2007 ), the backWaterValve assumption was correct ( true )</message>
            <name>Then : Verify that the backWaterValve assumption</name>
            <order>37</order>
            <started>13:56:56.982</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>38</order>
            <started>13:56:56.983</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the backWaterValve assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the backWaterValve assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the backWaterValve assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the backWaterValve assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the backWaterValve assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the backWaterValve assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:56:56</startTime>
        <status>FINISHED</status>
        <testCaseId>59132d2d-57d0-4409-9c3b-d6ed96b325c7</testCaseId>
        <testCaseName>CO Fire Resistant assumptions</testCaseName>
        <timeTaken>18937</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : NumberOfUnits] OK: took 38 ms</message>
            <name>DataSource : NumberOfUnits</name>
            <order>2</order>
            <started>13:56:56.988</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:56:57.027</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2101 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:56:57.029</started>
            <status>UNKNOWN</status>
            <timeTaken>2101</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:56:59.137</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:56:59.138</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 10 ) description ( 1 to 8 ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>7</order>
            <started>13:56:59.138</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:56:59.139</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request] UNKNOWN: took 3547 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>9</order>
            <started>13:56:59.142</started>
            <status>UNKNOWN</status>
            <timeTaken>3547</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:57:02.696</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Re-Validate fire resistant assumption : DEV] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 10 ) description ( 1 to 8 ) )</message>
            <name>Then : Re-Validate fire resistant assumption : DEV</name>
            <order>11</order>
            <started>13:57:02.697</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>12</order>
            <started>13:57:02.699</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>13:57:02.700</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2940 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>13:57:02.702</started>
            <status>UNKNOWN</status>
            <timeTaken>2940</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>13:57:05.649</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>13:57:05.650</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 11 ) description ( 9 to 23 ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>17</order>
            <started>13:57:05.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>13:57:05.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request] UNKNOWN: took 2770 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>19</order>
            <started>13:57:05.653</started>
            <status>UNKNOWN</status>
            <timeTaken>2770</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>13:57:08.430</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Re-Validate fire resistant assumption : DEV] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 11 ) description ( 9 to 23 ) )</message>
            <name>Then : Re-Validate fire resistant assumption : DEV</name>
            <order>21</order>
            <started>13:57:08.431</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>22</order>
            <started>13:57:08.432</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>13:57:08.433</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2104 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>13:57:08.434</started>
            <status>UNKNOWN</status>
            <timeTaken>2104</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>13:57:10.544</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>13:57:10.545</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 24 ) description ( 24 or more ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>27</order>
            <started>13:57:10.545</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>13:57:10.546</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate request] UNKNOWN: took 5436 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>29</order>
            <started>13:57:10.548</started>
            <status>UNKNOWN</status>
            <timeTaken>5436</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>30</order>
            <started>13:57:15.990</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Re-Validate fire resistant assumption : DEV] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 24 ) description ( 24 or more ) )</message>
            <name>Then : Re-Validate fire resistant assumption : DEV</name>
            <order>31</order>
            <started>13:57:15.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>32</order>
            <started>13:57:15.992</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption : DEV</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption : DEV</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption : DEV</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:57:15</startTime>
        <status>FINISHED</status>
        <testCaseId>c0671289-793f-4eb9-8138-5d8a4c8651ce</testCaseId>
        <testCaseName>CO HeatingSystem assumptions</testCaseName>
        <timeTaken>6945</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : primaryHeatingMethod] OK: took 0 ms</message>
            <name>DataSource : primaryHeatingMethod</name>
            <order>2</order>
            <started>13:57:15.996</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:57:15.997</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1870 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:57:15.998</started>
            <status>UNKNOWN</status>
            <timeTaken>1870</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:57:17.876</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:57:17.877</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the heating assumption is Electrical] OK: took 0 ms</message>
            <name>Then : Verify that the heating assumption is Electrical</name>
            <order>7</order>
            <started>13:57:17.878</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:57:17.879</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and changed heating system] UNKNOWN: took 2495 ms</message>
            <name>Given : I have send Recalculate request and changed heating system</name>
            <order>9</order>
            <started>13:57:17.881</started>
            <status>UNKNOWN</status>
            <timeTaken>2495</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:57:20.383</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify that the heating system is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The primaryHeatingMethod was modified to G</message>
            <name>Then : Verify that the heating system is modified</name>
            <order>11</order>
            <started>13:57:20.384</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : primaryHeatingMethod] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : primaryHeatingMethod</name>
            <order>12</order>
            <started>13:57:20.385</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>13:57:20.386</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and changed heating system] UNKNOWN: took 2579 ms</message>
            <name>Given : I have send Recalculate request and changed heating system</name>
            <order>14</order>
            <started>13:57:20.387</started>
            <status>UNKNOWN</status>
            <timeTaken>2579</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>13:57:22.972</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that the heating system is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The primaryHeatingMethod was modified to O</message>
            <name>Then : Verify that the heating system is modified</name>
            <order>16</order>
            <started>13:57:22.973</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : primaryHeatingMethod] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : primaryHeatingMethod</name>
            <order>17</order>
            <started>13:57:22.974</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating assumption is Electrical</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : primaryHeatingMethod</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:57:22</startTime>
        <status>FINISHED</status>
        <testCaseId>4d97d38c-1451-47e9-8cd9-d6befaceba1b</testCaseId>
        <testCaseName>TE Fire Resistant assumptions</testCaseName>
        <timeTaken>22685</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : NumberOfUnits] OK: took 37 ms</message>
            <name>DataSource : NumberOfUnits</name>
            <order>2</order>
            <started>13:57:22.982</started>
            <status>OK</status>
            <timeTaken>37</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:57:23.020</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2230 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:57:23.021</started>
            <status>UNKNOWN</status>
            <timeTaken>2230</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:57:25.258</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:57:25.259</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 1 ) description ( 1 ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>7</order>
            <started>13:57:25.260</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:57:25.260</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request] UNKNOWN: took 2628 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>9</order>
            <started>13:57:25.262</started>
            <status>UNKNOWN</status>
            <timeTaken>2628</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:57:27.895</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Re-Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 1 ) description ( 1 ) )</message>
            <name>Then : Re-Validate fire resistant assumption</name>
            <order>11</order>
            <started>13:57:27.896</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>12</order>
            <started>13:57:27.897</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>13:57:27.898</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2481 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>13:57:27.899</started>
            <status>UNKNOWN</status>
            <timeTaken>2481</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>13:57:30.386</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>13:57:30.387</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 5 ) description ( 2 to 7 ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>17</order>
            <started>13:57:30.388</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>13:57:30.388</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request] UNKNOWN: took 2564 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>19</order>
            <started>13:57:30.390</started>
            <status>UNKNOWN</status>
            <timeTaken>2564</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>13:57:32.959</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Re-Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 5 ) description ( 2 to 7 ) )</message>
            <name>Then : Re-Validate fire resistant assumption</name>
            <order>21</order>
            <started>13:57:32.959</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>22</order>
            <started>13:57:32.960</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>13:57:32.961</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2211 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>13:57:32.962</started>
            <status>UNKNOWN</status>
            <timeTaken>2211</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>13:57:35.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>13:57:35.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 9 ) description ( 8 to 23 ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>27</order>
            <started>13:57:35.180</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>13:57:35.181</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate request] UNKNOWN: took 3318 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>29</order>
            <started>13:57:35.182</started>
            <status>UNKNOWN</status>
            <timeTaken>3318</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>30</order>
            <started>13:57:38.507</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Re-Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 9 ) description ( 8 to 23 ) )</message>
            <name>Then : Re-Validate fire resistant assumption</name>
            <order>31</order>
            <started>13:57:38.508</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>32</order>
            <started>13:57:38.509</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>13:57:38.509</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2529 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>13:57:38.511</started>
            <status>UNKNOWN</status>
            <timeTaken>2529</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>35</order>
            <started>13:57:41.046</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>36</order>
            <started>13:57:41.046</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 24 ) description ( 24 or more ) )</message>
            <name>Then : Validate fire resistant assumption</name>
            <order>37</order>
            <started>13:57:41.047</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>38</order>
            <started>13:57:41.048</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Given : I have send Recalculate request] UNKNOWN: took 4687 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>39</order>
            <started>13:57:41.049</started>
            <status>UNKNOWN</status>
            <timeTaken>4687</timeTaken>
          </result>
          <result>
            <message>Step 39 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>40</order>
            <started>13:57:45.742</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [Then : Re-Validate fire resistant assumption] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : Fire resistance assumptions were as expected for this numberOfParts ( value ( 24 ) description ( 24 or more ) )</message>
            <name>Then : Re-Validate fire resistant assumption</name>
            <order>41</order>
            <started>13:57:45.742</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>42</order>
            <started>13:57:45.743</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Validate fire resistant assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:57:45</startTime>
        <status>FINISHED</status>
        <testCaseId>36b94335-622f-4f3d-80af-c557c51dcef7</testCaseId>
        <testCaseName>TE HeatingSystem assumptions</testCaseName>
        <timeTaken>7280</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : primaryHeatingMethod] OK: took 0 ms</message>
            <name>DataSource : primaryHeatingMethod</name>
            <order>2</order>
            <started>13:57:45.748</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:57:45.750</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2262 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:57:45.751</started>
            <status>UNKNOWN</status>
            <timeTaken>2262</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:57:48.019</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:57:48.020</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the heating assumption is Electrical] OK: took 0 ms</message>
            <name>Then : Verify that the heating assumption is Electrical</name>
            <order>7</order>
            <started>13:57:48.021</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:57:48.022</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and changed heating system] UNKNOWN: took 2491 ms</message>
            <name>Given : I have send Recalculate request and changed heating system</name>
            <order>9</order>
            <started>13:57:48.023</started>
            <status>UNKNOWN</status>
            <timeTaken>2491</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:57:50.521</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify that the heating system is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The primaryHeatingMethod was modified to G</message>
            <name>Then : Verify that the heating system is modified</name>
            <order>11</order>
            <started>13:57:50.522</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : primaryHeatingMethod] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : primaryHeatingMethod</name>
            <order>12</order>
            <started>13:57:50.523</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>13:57:50.524</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and changed heating system] UNKNOWN: took 2527 ms</message>
            <name>Given : I have send Recalculate request and changed heating system</name>
            <order>14</order>
            <started>13:57:50.525</started>
            <status>UNKNOWN</status>
            <timeTaken>2527</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>13:57:53.057</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that the heating system is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The primaryHeatingMethod was modified to O</message>
            <name>Then : Verify that the heating system is modified</name>
            <order>16</order>
            <started>13:57:53.058</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : primaryHeatingMethod] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : primaryHeatingMethod</name>
            <order>17</order>
            <started>13:57:53.059</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating assumption is Electrical</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : primaryHeatingMethod</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:57:53</startTime>
        <status>FINISHED</status>
        <testCaseId>670c4d78-8814-4ede-9759-87861ef55abb</testCaseId>
        <testCaseName>HO/CO/TE Claims assumptions</testCaseName>
        <timeTaken>6956</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 106 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>13:57:53.064</started>
            <status>OK</status>
            <timeTaken>106</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:57:53.172</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2390 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:57:53.173</started>
            <status>UNKNOWN</status>
            <timeTaken>2390</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:57:55.568</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:57:55.569</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the claims assumption is No] OK: took 0 ms</message>
            <name>Then : Verify that the claims assumption is No</name>
            <order>7</order>
            <started>13:57:55.570</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>8</order>
            <started>13:57:55.571</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:57:55.572</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1797 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:57:55.573</started>
            <status>UNKNOWN</status>
            <timeTaken>1797</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:57:57.388</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:57:57.389</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify that the claims assumption is No] OK: took 0 ms</message>
            <name>Then : Verify that the claims assumption is No</name>
            <order>13</order>
            <started>13:57:57.389</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>14</order>
            <started>13:57:57.390</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:57:57.391</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2663 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:57:57.392</started>
            <status>UNKNOWN</status>
            <timeTaken>2663</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:58:00.060</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:58:00.061</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify that the claims assumption is No] OK: took 0 ms</message>
            <name>Then : Verify that the claims assumption is No</name>
            <order>19</order>
            <started>13:58:00.061</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>20</order>
            <started>13:58:00.062</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claims assumption is No</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claims assumption is No</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claims assumption is No</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:00</startTime>
        <status>FINISHED</status>
        <testCaseId>b900b198-6171-4aea-b063-8df6c77d8ac4</testCaseId>
        <testCaseName>HO/CO/TE Alarms assumptions</testCaseName>
        <timeTaken>8074</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 36 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>13:58:00.071</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:58:00.109</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3170 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:58:00.110</started>
            <status>UNKNOWN</status>
            <timeTaken>3170</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:58:03.288</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:58:03.289</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>7</order>
            <started>13:58:03.290</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>8</order>
            <started>13:58:03.291</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:58:03.292</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2505 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:58:03.293</started>
            <status>UNKNOWN</status>
            <timeTaken>2505</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:58:05.804</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:58:05.804</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>13</order>
            <started>13:58:05.805</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>14</order>
            <started>13:58:05.806</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:58:05.807</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2363 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:58:05.808</started>
            <status>UNKNOWN</status>
            <timeTaken>2363</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:58:08.177</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:58:08.178</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>19</order>
            <started>13:58:08.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>20</order>
            <started>13:58:08.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:08</startTime>
        <status>FINISHED</status>
        <testCaseId>b7cf5519-fa28-4ce5-9ae7-c56968cc79dc</testCaseId>
        <testCaseName>HO/CO/TE FireHydrant and FireStation assumptions</testCaseName>
        <timeTaken>6854</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 33 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>13:58:08.184</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:58:08.220</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2834 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:58:08.221</started>
            <status>UNKNOWN</status>
            <timeTaken>2834</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:58:11.062</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:58:11.063</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate fire hydrant and station assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : FireStation protected ( true ) and firehydrant protection ( true ) assumption were correct</message>
            <name>Then : Validate fire hydrant and station assumption</name>
            <order>7</order>
            <started>13:58:11.063</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>8</order>
            <started>13:58:11.064</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:58:11.065</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2049 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:58:11.066</started>
            <status>UNKNOWN</status>
            <timeTaken>2049</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:58:13.121</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:58:13.122</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate fire hydrant and station assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : FireStation protected ( true ) and firehydrant protection ( true ) assumption were correct</message>
            <name>Then : Validate fire hydrant and station assumption</name>
            <order>13</order>
            <started>13:58:13.122</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>14</order>
            <started>13:58:13.123</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:58:13.124</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1937 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:58:13.125</started>
            <status>UNKNOWN</status>
            <timeTaken>1937</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:58:15.068</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:58:15.070</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate fire hydrant and station assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : FireStation protected ( true ) and firehydrant protection ( true ) assumption were correct</message>
            <name>Then : Validate fire hydrant and station assumption</name>
            <order>19</order>
            <started>13:58:15.071</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>20</order>
            <started>13:58:15.072</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and station assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and station assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and station assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:15</startTime>
        <status>FINISHED</status>
        <testCaseId>2a58e1f5-b5ca-409c-b5c4-99ed40260ff4</testCaseId>
        <testCaseName>HO/CO/TE AuxiliaryHeatingSystem assumptions</testCaseName>
        <timeTaken>9063</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 38 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>13:58:15.078</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:58:15.118</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2765 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:58:15.120</started>
            <status>UNKNOWN</status>
            <timeTaken>2765</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:58:17.891</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:58:17.892</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>7</order>
            <started>13:58:17.893</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>8</order>
            <started>13:58:17.894</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:58:17.894</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3910 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:58:17.896</started>
            <status>UNKNOWN</status>
            <timeTaken>3910</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:58:21.812</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:58:21.813</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>13</order>
            <started>13:58:21.814</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>14</order>
            <started>13:58:21.815</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:58:21.815</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2350 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:58:21.817</started>
            <status>UNKNOWN</status>
            <timeTaken>2350</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:58:24.244</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:58:24.245</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>19</order>
            <started>13:58:24.246</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>20</order>
            <started>13:58:24.247</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>13:58:24</startTime>
    <status>FINISHED</status>
    <testSuiteName>Calculate_and_Recalculate</testSuiteName>
    <timeTaken>346898</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>13:58:24</startTime>
        <status>FINISHED</status>
        <testCaseId>cf35b317-b8c0-43a5-976c-af38db243055</testCaseId>
        <testCaseName>HO Calculate and Recalculate Hit</testCaseName>
        <timeTaken>5876</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:58:24.264</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2890 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>13:58:24.266</started>
            <status>UNKNOWN</status>
            <timeTaken>2890</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:58:27.162</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>13:58:27.163</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>6</order>
            <started>13:58:27.164</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Given : I have send Recalculate request] UNKNOWN: took 2986 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>7</order>
            <started>13:58:27.166</started>
            <status>UNKNOWN</status>
            <timeTaken>2986</timeTaken>
          </result>
          <result>
            <message>Step 7 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>8</order>
            <started>13:58:30.157</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify Calculate and Recalculate info are matching : TODO Refactor] OK: took 0 ms
 -> Script-result:    SUCCESS : test [ HO Calculate and Recalculate Hit ] was properly executed.</message>
            <name>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</name>
            <order>9</order>
            <started>13:58:30.159</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:30</startTime>
        <status>FINISHED</status>
        <testCaseId>f89a7ee0-5b4f-482c-970f-5aeef5439dc1</testCaseId>
        <testCaseName>HO Calculate and Recalculate No Hit</testCaseName>
        <timeTaken>10907</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:58:30.164</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price] UNKNOWN: took 7245 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>3</order>
            <started>13:58:30.166</started>
            <status>UNKNOWN</status>
            <timeTaken>7245</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:58:37.416</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify no hit informations] OK: took 0 ms</message>
            <name>Then : Verify no hit informations</name>
            <order>5</order>
            <started>13:58:37.417</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a quote number and no price] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a quote number and no price</name>
            <order>6</order>
            <started>13:58:37.418</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>7</order>
            <started>13:58:37.418</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request] UNKNOWN: took 3662 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>8</order>
            <started>13:58:37.419</started>
            <status>UNKNOWN</status>
            <timeTaken>3662</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>13:58:41.087</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify Calculate and Recalculate info are matching : TODO Refactor] OK: took 0 ms
 -> Script-result:    SUCCESS : test [ HO Calculate and Recalculate No Hit ] was properly executed.</message>
            <name>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</name>
            <order>10</order>
            <started>13:58:41.088</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify no hit informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a quote number and no price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:41</startTime>
        <status>FINISHED</status>
        <testCaseId>82ab2b12-f50a-4205-a6e2-bb8972f3bf73</testCaseId>
        <testCaseName>CO Calculate and Recalculate Hit</testCaseName>
        <timeTaken>4596</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:58:41.094</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1911 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>13:58:41.096</started>
            <status>UNKNOWN</status>
            <timeTaken>1911</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:58:43.015</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>13:58:43.016</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>6</order>
            <started>13:58:43.016</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Given : I have send Recalculate request] UNKNOWN: took 2685 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>7</order>
            <started>13:58:43.018</started>
            <status>UNKNOWN</status>
            <timeTaken>2685</timeTaken>
          </result>
          <result>
            <message>Step 7 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>8</order>
            <started>13:58:45.709</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify Calculate and Recalculate info are matching : TODO Refactor] OK: took 0 ms
 -> Script-result:    SUCCESS : test [ CO Calculate and Recalculate Hit ] was properly executed.</message>
            <name>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</name>
            <order>9</order>
            <started>13:58:45.710</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:45</startTime>
        <status>FINISHED</status>
        <testCaseId>fe6ca32a-17d6-4862-b427-cc9a25607542</testCaseId>
        <testCaseName>CO Calculate and Recalculate No Hit</testCaseName>
        <timeTaken>5282</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:58:45.715</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price] UNKNOWN: took 1951 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>3</order>
            <started>13:58:45.717</started>
            <status>UNKNOWN</status>
            <timeTaken>1951</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:58:47.673</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify no hit informations] OK: took 0 ms</message>
            <name>Then : Verify no hit informations</name>
            <order>5</order>
            <started>13:58:47.674</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:58:47.674</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>7</order>
            <started>13:58:47.675</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request] UNKNOWN: took 3331 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>8</order>
            <started>13:58:47.677</started>
            <status>UNKNOWN</status>
            <timeTaken>3331</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>13:58:51.015</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify Calculate and Recalculate info are matching : TODO Refactor] OK: took 0 ms
 -> Script-result:    SUCCESS : test [ CO Calculate and Recalculate No Hit ] was properly executed.</message>
            <name>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</name>
            <order>10</order>
            <started>13:58:51.016</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify no hit informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:51</startTime>
        <status>FINISHED</status>
        <testCaseId>f3d1541e-3666-40b6-9061-522a61484156</testCaseId>
        <testCaseName>TE Calculate and Recalculate Hit</testCaseName>
        <timeTaken>4655</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:58:51.021</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2172 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>13:58:51.023</started>
            <status>UNKNOWN</status>
            <timeTaken>2172</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:58:53.202</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>13:58:53.202</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>6</order>
            <started>13:58:53.203</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Given : I have send Recalculate request] UNKNOWN: took 2483 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>7</order>
            <started>13:58:53.205</started>
            <status>UNKNOWN</status>
            <timeTaken>2483</timeTaken>
          </result>
          <result>
            <message>Step 7 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>8</order>
            <started>13:58:55.695</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify Calculate and Recalculate info are matching : TODO Refactor] OK: took 0 ms
 -> Script-result:    SUCCESS : test [ TE Calculate and Recalculate Hit ] was properly executed.</message>
            <name>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</name>
            <order>9</order>
            <started>13:58:55.696</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Calculate and Recalculate info are matching : TODO Refactor</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:58:55</startTime>
        <status>FINISHED</status>
        <testCaseId>006ea553-0e09-476b-94a3-4fdf521bd92f</testCaseId>
        <testCaseName>TE Calculate and Recalculate No Hit</testCaseName>
        <timeTaken>6728</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:58:55.701</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price] UNKNOWN: took 3073 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>3</order>
            <started>13:58:55.702</started>
            <status>UNKNOWN</status>
            <timeTaken>3073</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:58:58.780</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify no hit informations] OK: took 0 ms</message>
            <name>Then : Verify no hit informations</name>
            <order>5</order>
            <started>13:58:58.781</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:58:58.782</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>7</order>
            <started>13:58:58.783</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request] UNKNOWN: took 3655 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>8</order>
            <started>13:58:58.784</started>
            <status>UNKNOWN</status>
            <timeTaken>3655</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>13:59:02.444</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify Calculate and Recalculate info are matching : TODO refactor] OK: took 0 ms
 -> Script-result:    SUCCESS : test [ TE Calculate and Recalculate No Hit ] was properly executed.</message>
            <name>Then : Verify Calculate and Recalculate info are matching : TODO refactor</name>
            <order>10</order>
            <started>13:59:02.445</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify no hit informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Calculate and Recalculate info are matching : TODO refactor</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:59:02</startTime>
        <status>FINISHED</status>
        <testCaseId>a8d53858-55b3-45d0-9266-0ba20e60c070</testCaseId>
        <testCaseName>HO change buildingConstructionMaterial</testCaseName>
        <timeTaken>13062</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>13:59:02.450</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2783 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>13:59:02.452</started>
            <status>UNKNOWN</status>
            <timeTaken>2783</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>13:59:05.241</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>13:59:05.242</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that Building Construction material assumption] OK: took 0 ms</message>
            <name>Then : Verify that Building Construction material assumption</name>
            <order>6</order>
            <started>13:59:05.243</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource : ConstructionMaterial] OK: took 33 ms</message>
            <name>DataSource : ConstructionMaterial</name>
            <order>7</order>
            <started>13:59:05.243</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:59:05.278</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and changed construction material] UNKNOWN: took 3280 ms</message>
            <name>Given : I have send Recalculate request and changed construction material</name>
            <order>9</order>
            <started>13:59:05.279</started>
            <status>UNKNOWN</status>
            <timeTaken>3280</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:59:08.566</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify that the construction material type is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The roofMaterial was modified to VNYL</message>
            <name>Then : Verify that the construction material type is modified</name>
            <order>11</order>
            <started>13:59:08.567</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : ConstructionMaterial] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : ConstructionMaterial</name>
            <order>12</order>
            <started>13:59:08.568</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>13:59:08.569</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and changed construction material] UNKNOWN: took 3510 ms</message>
            <name>Given : I have send Recalculate request and changed construction material</name>
            <order>14</order>
            <started>13:59:08.570</started>
            <status>UNKNOWN</status>
            <timeTaken>3510</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>13:59:12.086</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that the construction material type is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The roofMaterial was modified to MSNR</message>
            <name>Then : Verify that the construction material type is modified</name>
            <order>16</order>
            <started>13:59:12.087</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : ConstructionMaterial] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : ConstructionMaterial</name>
            <order>17</order>
            <started>13:59:12.088</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>13:59:12.088</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and changed construction material] UNKNOWN: took 3456 ms</message>
            <name>Given : I have send Recalculate request and changed construction material</name>
            <order>19</order>
            <started>13:59:12.090</started>
            <status>UNKNOWN</status>
            <timeTaken>3456</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>13:59:15.552</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify that the construction material type is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The roofMaterial was modified to Z</message>
            <name>Then : Verify that the construction material type is modified</name>
            <order>21</order>
            <started>13:59:15.553</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : ConstructionMaterial] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : ConstructionMaterial</name>
            <order>22</order>
            <started>13:59:15.553</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that Building Construction material assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : ConstructionMaterial</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed construction material</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the construction material type is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : ConstructionMaterial</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed construction material</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the construction material type is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : ConstructionMaterial</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed construction material</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the construction material type is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : ConstructionMaterial</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:59:15</startTime>
        <status>FINISHED</status>
        <testCaseId>af1fe9ee-03c8-4520-8742-88b360e4ec67</testCaseId>
        <testCaseName>HO change roofMadeOf</testCaseName>
        <timeTaken>13113</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : roofMaterial] OK: took 0 ms</message>
            <name>DataSource : roofMaterial</name>
            <order>2</order>
            <started>13:59:15.561</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:59:15.565</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2651 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:59:15.566</started>
            <status>UNKNOWN</status>
            <timeTaken>2651</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:59:18.222</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:59:18.223</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the roof material assumption is A] OK: took 0 ms</message>
            <name>Then : Verify that the roof material assumption is A</name>
            <order>7</order>
            <started>13:59:18.224</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>13:59:18.224</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and changed roof material] UNKNOWN: took 3248 ms</message>
            <name>Given : I have send Recalculate request and changed roof material</name>
            <order>9</order>
            <started>13:59:18.226</started>
            <status>UNKNOWN</status>
            <timeTaken>3248</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>13:59:21.480</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify that the roof material is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The roofMaterial was modified to T</message>
            <name>Then : Verify that the roof material is modified</name>
            <order>11</order>
            <started>13:59:21.481</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : roofMaterial] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : roofMaterial</name>
            <order>12</order>
            <started>13:59:21.482</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>13:59:21.482</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and changed roof material] UNKNOWN: took 4095 ms</message>
            <name>Given : I have send Recalculate request and changed roof material</name>
            <order>14</order>
            <started>13:59:21.484</started>
            <status>UNKNOWN</status>
            <timeTaken>4095</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>13:59:25.584</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that the roof material is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The roofMaterial was modified to M</message>
            <name>Then : Verify that the roof material is modified</name>
            <order>16</order>
            <started>13:59:25.585</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : roofMaterial] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : roofMaterial</name>
            <order>17</order>
            <started>13:59:25.586</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>13:59:25.586</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and changed roof material] UNKNOWN: took 3119 ms</message>
            <name>Given : I have send Recalculate request and changed roof material</name>
            <order>19</order>
            <started>13:59:25.588</started>
            <status>UNKNOWN</status>
            <timeTaken>3119</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>13:59:28.713</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify that the roof material is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : The roofMaterial was modified to Z</message>
            <name>Then : Verify that the roof material is modified</name>
            <order>21</order>
            <started>13:59:28.713</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : roofMaterial] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : roofMaterial</name>
            <order>22</order>
            <started>13:59:28.714</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : roofMaterial</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the roof material assumption is A</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed roof material</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the roof material is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : roofMaterial</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed roof material</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the roof material is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : roofMaterial</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed roof material</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the roof material is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : roofMaterial</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:59:28</startTime>
        <status>FINISHED</status>
        <testCaseId>fd6b3352-f2fd-4843-beff-0f1e1be691e0</testCaseId>
        <testCaseName>HO change waterTankYear</testCaseName>
        <timeTaken>21408</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : WaterTankYearAssumptions] OK: took 35 ms</message>
            <name>DataSource : WaterTankYearAssumptions</name>
            <order>2</order>
            <started>13:59:28.725</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:59:28.761</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2617 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:59:28.763</started>
            <status>UNKNOWN</status>
            <timeTaken>2617</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:59:31.388</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>13:59:31.397</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the waterTankYear assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1980 ) the default waterTankYear ( 2010 ) is correct.</message>
            <name>Then : Verify the waterTankYear assumption</name>
            <order>7</order>
            <started>13:59:31.407</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : WaterTankYearAssumptions] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : WaterTankYearAssumptions</name>
            <order>8</order>
            <started>13:59:31.409</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>13:59:31.410</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3127 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>13:59:31.411</started>
            <status>UNKNOWN</status>
            <timeTaken>3127</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>13:59:34.544</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>12</order>
            <started>13:59:34.545</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify the waterTankYear assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 2017 ) the default waterTankYear ( 2017 ) is correct.</message>
            <name>Then : Verify the waterTankYear assumption</name>
            <order>13</order>
            <started>13:59:34.545</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : WaterTankYearAssumptions] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : WaterTankYearAssumptions</name>
            <order>14</order>
            <started>13:59:34.546</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>13:59:34.547</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2714 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>13:59:34.548</started>
            <status>UNKNOWN</status>
            <timeTaken>2714</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>13:59:37.268</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>13:59:37.269</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify the waterTankYear assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1918 ) the default waterTankYear ( 2008 ) is correct.</message>
            <name>Then : Verify the waterTankYear assumption</name>
            <order>19</order>
            <started>13:59:37.270</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : WaterTankYearAssumptions] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : WaterTankYearAssumptions</name>
            <order>20</order>
            <started>13:59:37.271</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>13:59:37.271</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2402 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>13:59:37.273</started>
            <status>UNKNOWN</status>
            <timeTaken>2402</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>23</order>
            <started>13:59:39.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>24</order>
            <started>13:59:39.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify the waterTankYear assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1917 ) the default waterTankYear ( 2017 ) is correct.</message>
            <name>Then : Verify the waterTankYear assumption</name>
            <order>25</order>
            <started>13:59:39.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : WaterTankYearAssumptions] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : WaterTankYearAssumptions</name>
            <order>26</order>
            <started>13:59:39.683</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>13:59:39.684</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3651 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>13:59:39.685</started>
            <status>UNKNOWN</status>
            <timeTaken>3651</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>29</order>
            <started>13:59:43.342</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>30</order>
            <started>13:59:43.342</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify the waterTankYear assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 1967 ) the default waterTankYear ( 2017 ) is correct.</message>
            <name>Then : Verify the waterTankYear assumption</name>
            <order>31</order>
            <started>13:59:43.343</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : WaterTankYearAssumptions] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : WaterTankYearAssumptions</name>
            <order>32</order>
            <started>13:59:43.344</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>13:59:43.345</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2811 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>13:59:43.346</started>
            <status>UNKNOWN</status>
            <timeTaken>2811</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>35</order>
            <started>13:59:46.163</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>36</order>
            <started>13:59:46.164</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Verify the waterTankYear assumption] OK: took 0 ms
 -> Script-result:    SUCCESS   : With homeConstructionYear ( 2016 ) the default waterTankYear ( 2016 ) is correct.</message>
            <name>Then : Verify the waterTankYear assumption</name>
            <order>37</order>
            <started>13:59:46.165</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : WaterTankYearAssumptions] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : WaterTankYearAssumptions</name>
            <order>38</order>
            <started>13:59:46.165</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>39</order>
            <started>13:59:46.166</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Recalculate request and changed waterTankYear] UNKNOWN: took 3186 ms</message>
            <name>Given : I have send Recalculate request and changed waterTankYear</name>
            <order>40</order>
            <started>13:59:46.168</started>
            <status>UNKNOWN</status>
            <timeTaken>3186</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>41</order>
            <started>13:59:49.361</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Given : I have send Recalculate request and changed waterTankYear] UNKNOWN: took 413 ms</message>
            <name>Given : I have send Recalculate request and changed waterTankYear</name>
            <order>42</order>
            <started>13:59:49.363</started>
            <status>UNKNOWN</status>
            <timeTaken>413</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Re-run with outofbound waterTankYear modifications] OK: took 451 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( WQ00196 ) is present ( Whitelisting Home - Water tank year ).</message>
            <name>Then : Re-run with outofbound waterTankYear modifications</name>
            <order>43</order>
            <started>13:59:49.362</started>
            <status>OK</status>
            <timeTaken>451</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the waterTankYear assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the waterTankYear assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the waterTankYear assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the waterTankYear assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the waterTankYear assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the waterTankYear assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterTankYearAssumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and changed waterTankYear</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-run with outofbound waterTankYear modifications</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-run with outofbound waterTankYear modifications</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>13:59:49</startTime>
        <status>FINISHED</status>
        <testCaseId>284f8c0d-b924-475f-9624-a19f341f03d0</testCaseId>
        <testCaseName>HO change backWaterValve</testCaseName>
        <timeTaken>13245</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : BackWaterValve] OK: took 39 ms</message>
            <name>DataSource : BackWaterValve</name>
            <order>2</order>
            <started>13:59:49.822</started>
            <status>OK</status>
            <timeTaken>39</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>13:59:49.896</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3072 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>13:59:49.917</started>
            <status>UNKNOWN</status>
            <timeTaken>3072</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>13:59:52.995</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>6</order>
            <started>13:59:52.996</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Given : I have send Recalculate request and change back water valve value] UNKNOWN: took 2712 ms</message>
            <name>Given : I have send Recalculate request and change back water valve value</name>
            <order>7</order>
            <started>13:59:52.997</started>
            <status>UNKNOWN</status>
            <timeTaken>2712</timeTaken>
          </result>
          <result>
            <message>Step 7 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>8</order>
            <started>13:59:55.716</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify the backwatervalve value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : the hasBackWaterValveInstalled was changed ( original : false new value : true )</message>
            <name>Then : Verify the backwatervalve value changed</name>
            <order>9</order>
            <started>13:59:55.717</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>10</order>
            <started>13:59:55.718</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>11</order>
            <started>13:59:55.718</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2627 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>12</order>
            <started>13:59:55.719</started>
            <status>UNKNOWN</status>
            <timeTaken>2627</timeTaken>
          </result>
          <result>
            <message>Step 12 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>13</order>
            <started>13:59:58.351</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>14</order>
            <started>13:59:58.352</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Given : I have send Recalculate request and change back water valve value] UNKNOWN: took 4795 ms</message>
            <name>Given : I have send Recalculate request and change back water valve value</name>
            <order>15</order>
            <started>13:59:58.353</started>
            <status>UNKNOWN</status>
            <timeTaken>4795</timeTaken>
          </result>
          <result>
            <message>Step 15 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>16</order>
            <started>14:00:03.156</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Verify the backwatervalve value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : the hasBackWaterValveInstalled was changed ( original : true new value : false )</message>
            <name>Then : Verify the backwatervalve value changed</name>
            <order>17</order>
            <started>14:00:03.157</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : BackWaterValve] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : BackWaterValve</name>
            <order>18</order>
            <started>14:00:03.158</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change back water valve value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the backwatervalve value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change back water valve value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the backwatervalve value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BackWaterValve</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:00:03</startTime>
        <status>FINISHED</status>
        <testCaseId>8823adff-8ee6-44f7-b681-bd94d679b0c1</testCaseId>
        <testCaseName>HO change smoker</testCaseName>
        <timeTaken>6465</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:00:03.168</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2885 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:00:03.170</started>
            <status>UNKNOWN</status>
            <timeTaken>2885</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:00:06.060</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>5</order>
            <started>14:00:06.061</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify the Smoker assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : Smoker assumption is correct ( ( false ) )</message>
            <name>Then : Verify the Smoker assumption</name>
            <order>6</order>
            <started>14:00:06.062</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>7</order>
            <started>14:00:06.062</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request and change smoker value] UNKNOWN: took 3580 ms</message>
            <name>Given : I have send Recalculate request and change smoker value</name>
            <order>8</order>
            <started>14:00:06.064</started>
            <status>UNKNOWN</status>
            <timeTaken>3580</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:00:09.650</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify the smoker value was changed] OK: took 0 ms
 -> Script-result:    SUCCESS : the smoker value was changed ( original : false new value : true )</message>
            <name>Then : Verify the smoker value was changed</name>
            <order>10</order>
            <started>14:00:09.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the Smoker assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change smoker value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the smoker value was changed</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:00:09</startTime>
        <status>FINISHED</status>
        <testCaseId>64e50cc1-c51b-4491-97b4-0511412fb9de</testCaseId>
        <testCaseName>HO change profile</testCaseName>
        <timeTaken>5589</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Properties : clientProfile] OK: took 0 ms</message>
            <name>Properties : clientProfile</name>
            <order>2</order>
            <started>14:00:09.662</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [DataSource : SmartValues] OK: took 34 ms</message>
            <name>DataSource : SmartValues</name>
            <order>3</order>
            <started>14:00:09.663</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 3 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>4</order>
            <started>14:00:09.699</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2500 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>5</order>
            <started>14:00:09.700</started>
            <status>UNKNOWN</status>
            <timeTaken>2500</timeTaken>
          </result>
          <result>
            <message>Step 5 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>6</order>
            <started>14:00:12.206</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the assumptions] OK: took 2 ms
 -> Script-result: {constructionMaterial=VNBR, roofMaterial=A, primaryHeatingMethod=E, hasBackWaterValveInstalled=true, hasClaimsInLastFiveYears=false, smoker=false, fireStationProtected=true, fireHydrantProtected=true, auxiliaryHeating={auxiliaryHeatingType=null, hasAuxiliaryHeating=false, usageType=null}, alarms={burglar=NA, fire=false, waterLeak=false, waterLeakShutoff=false}}</message>
            <name>Then : Verify the assumptions</name>
            <order>7</order>
            <started>14:00:12.207</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request to change profile] OK: took 29 ms</message>
            <name>Setup : Set the recalculate request to change profile</name>
            <order>8</order>
            <started>14:00:12.210</started>
            <status>OK</status>
            <timeTaken>29</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and change the profile informations] UNKNOWN: took 3023 ms</message>
            <name>Given : I have send Recalculate request and change the profile informations</name>
            <order>9</order>
            <started>14:00:12.240</started>
            <status>UNKNOWN</status>
            <timeTaken>3023</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:00:15.269</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify the client informations changed] OK: took 1 ms
 -> Script-result:    SUCCESS : The profile informations changed</message>
            <name>Then : Verify the client informations changed</name>
            <order>11</order>
            <started>14:00:15.270</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/properties_step.png</iconPath>
            <testStepName>Properties : clientProfile</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SmartValues</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request to change profile</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change the profile informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the client informations changed</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:00:15</startTime>
        <status>FINISHED</status>
        <testCaseId>cc9487f1-8c4c-4dc2-95d9-3420ff595ff8</testCaseId>
        <testCaseName>CO/TE change profile</testCaseName>
        <timeTaken>11548</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Properties : clientProfile] OK: took 0 ms</message>
            <name>Properties : clientProfile</name>
            <order>2</order>
            <started>14:00:15.278</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [DataSource : RiskType] OK: took 37 ms</message>
            <name>DataSource : RiskType</name>
            <order>3</order>
            <started>14:00:15.279</started>
            <status>OK</status>
            <timeTaken>37</timeTaken>
          </result>
          <result>
            <message>Step 3 [DataSource : SmartValues] OK: took 34 ms</message>
            <name>DataSource : SmartValues</name>
            <order>4</order>
            <started>14:00:15.317</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 4 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>5</order>
            <started>14:00:15.353</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2033 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>6</order>
            <started>14:00:15.354</started>
            <status>UNKNOWN</status>
            <timeTaken>2033</timeTaken>
          </result>
          <result>
            <message>Step 6 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>7</order>
            <started>14:00:17.394</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Verify the assumptions] OK: took 2 ms
 -> Script-result: {primaryHeatingMethod=E, smoker=false, fireResistantProtected=false, hasClaimsInLastFiveYears=false, hasWaterDamageInLastFiveYears=false, isUsedForCommercialOrBusinessActivity=false, fireHydrantProtected=true, fireStationProtected=true, alarms={burglar=NA, fire=false, waterLeak=false, waterLeakShutoff=false}}</message>
            <name>Then : Verify the assumptions</name>
            <order>8</order>
            <started>14:00:17.395</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the recalculate request to change profile] OK: took 2 ms</message>
            <name>Setup : Set the recalculate request to change profile</name>
            <order>9</order>
            <started>14:00:17.398</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Recalculate request and change the profile informations] UNKNOWN: took 2860 ms</message>
            <name>Given : I have send Recalculate request and change the profile informations</name>
            <order>10</order>
            <started>14:00:17.402</started>
            <status>UNKNOWN</status>
            <timeTaken>2860</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>11</order>
            <started>14:00:20.269</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify the client informations changed] OK: took 1 ms
 -> Script-result:    SUCCESS : The profile informations changed</message>
            <name>Then : Verify the client informations changed</name>
            <order>12</order>
            <started>14:00:20.269</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 12 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>13</order>
            <started>14:00:20.271</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>14</order>
            <started>14:00:20.272</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2566 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>15</order>
            <started>14:00:20.273</started>
            <status>UNKNOWN</status>
            <timeTaken>2566</timeTaken>
          </result>
          <result>
            <message>Step 15 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>16</order>
            <started>14:00:22.846</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Verify the assumptions] OK: took 1 ms
 -> Script-result: {primaryHeatingMethod=E, smoker=false, fireResistantProtected=false, hasClaimsInLastFiveYears=false, hasWaterDamageInLastFiveYears=false, isUsedForCommercialOrBusinessActivity=false, fireHydrantProtected=true, fireStationProtected=true, alarms={burglar=NA, fire=false, waterLeak=false, waterLeakShutoff=false}}</message>
            <name>Then : Verify the assumptions</name>
            <order>17</order>
            <started>14:00:22.846</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request to change profile] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request to change profile</name>
            <order>18</order>
            <started>14:00:22.849</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and change the profile informations] UNKNOWN: took 4011 ms</message>
            <name>Given : I have send Recalculate request and change the profile informations</name>
            <order>19</order>
            <started>14:00:22.851</started>
            <status>UNKNOWN</status>
            <timeTaken>4011</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>14:00:26.868</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify the client informations changed] OK: took 0 ms
 -> Script-result:    SUCCESS : The profile informations changed</message>
            <name>Then : Verify the client informations changed</name>
            <order>21</order>
            <started>14:00:26.869</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>22</order>
            <started>14:00:26.870</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/properties_step.png</iconPath>
            <testStepName>Properties : clientProfile</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SmartValues</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request to change profile</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change the profile informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the client informations changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request to change profile</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change the profile informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the client informations changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:00:26</startTime>
        <status>FINISHED</status>
        <testCaseId>2a89391c-d756-457c-a4b2-7fcfc2a745e4</testCaseId>
        <testCaseName>HO/CO change waterAlarms</testCaseName>
        <timeTaken>32822</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 37 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:00:26.880</started>
            <status>OK</status>
            <timeTaken>37</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:00:26.919</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3028 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:00:26.920</started>
            <status>UNKNOWN</status>
            <timeTaken>3028</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:00:30.075</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:00:30.076</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>7</order>
            <started>14:00:30.076</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource : WaterAlarms] OK: took 0 ms</message>
            <name>DataSource : WaterAlarms</name>
            <order>8</order>
            <started>14:00:30.077</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>9</order>
            <started>14:00:30.078</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 3939 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>10</order>
            <started>14:00:30.080</started>
            <status>UNKNOWN</status>
            <timeTaken>3939</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>11</order>
            <started>14:00:34.025</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ true ] and waterLeakShutoff is now [ true ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>12</order>
            <started>14:00:34.026</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>13</order>
            <started>14:00:34.027</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>14</order>
            <started>14:00:34.027</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 3764 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>15</order>
            <started>14:00:34.028</started>
            <status>UNKNOWN</status>
            <timeTaken>3764</timeTaken>
          </result>
          <result>
            <message>Step 15 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>16</order>
            <started>14:00:37.799</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ true ] and waterLeakShutoff is now [ false ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>17</order>
            <started>14:00:37.800</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>18</order>
            <started>14:00:37.800</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>19</order>
            <started>14:00:37.801</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 3680 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>20</order>
            <started>14:00:37.803</started>
            <status>UNKNOWN</status>
            <timeTaken>3680</timeTaken>
          </result>
          <result>
            <message>Step 20 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>21</order>
            <started>14:00:41.572</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ false ] and waterLeakShutoff is now [ true ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>22</order>
            <started>14:00:41.584</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>23</order>
            <started>14:00:41.585</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>24</order>
            <started>14:00:41.586</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 3272 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>25</order>
            <started>14:00:41.588</started>
            <status>UNKNOWN</status>
            <timeTaken>3272</timeTaken>
          </result>
          <result>
            <message>Step 25 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>26</order>
            <started>14:00:44.866</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ false ] and waterLeakShutoff is now [ false ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>27</order>
            <started>14:00:44.867</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>28</order>
            <started>14:00:44.868</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>29</order>
            <started>14:00:44.868</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>30</order>
            <started>14:00:44.869</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2131 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>31</order>
            <started>14:00:44.870</started>
            <status>UNKNOWN</status>
            <timeTaken>2131</timeTaken>
          </result>
          <result>
            <message>Step 31 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>32</order>
            <started>14:00:47.007</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>33</order>
            <started>14:00:47.008</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>34</order>
            <started>14:00:47.008</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [DataSource : WaterAlarms] OK: took 0 ms</message>
            <name>DataSource : WaterAlarms</name>
            <order>35</order>
            <started>14:00:47.009</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>36</order>
            <started>14:00:47.010</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 36 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 2939 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>37</order>
            <started>14:00:47.012</started>
            <status>UNKNOWN</status>
            <timeTaken>2939</timeTaken>
          </result>
          <result>
            <message>Step 37 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>38</order>
            <started>14:00:49.957</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ true ] and waterLeakShutoff is now [ true ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>39</order>
            <started>14:00:49.958</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>40</order>
            <started>14:00:49.959</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>41</order>
            <started>14:00:49.960</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 2904 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>42</order>
            <started>14:00:49.961</started>
            <status>UNKNOWN</status>
            <timeTaken>2904</timeTaken>
          </result>
          <result>
            <message>Step 42 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>43</order>
            <started>14:00:52.872</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ true ] and waterLeakShutoff is now [ false ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>44</order>
            <started>14:00:52.873</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>45</order>
            <started>14:00:52.874</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>46</order>
            <started>14:00:52.875</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 46 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 3466 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>47</order>
            <started>14:00:52.877</started>
            <status>UNKNOWN</status>
            <timeTaken>3466</timeTaken>
          </result>
          <result>
            <message>Step 47 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>48</order>
            <started>14:00:56.350</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ false ] and waterLeakShutoff is now [ true ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>49</order>
            <started>14:00:56.351</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>50</order>
            <started>14:00:56.352</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>51</order>
            <started>14:00:56.353</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [Given : I have send Recalculate and modified water alarm values] UNKNOWN: took 3660 ms</message>
            <name>Given : I have send Recalculate and modified water alarm values</name>
            <order>52</order>
            <started>14:00:56.355</started>
            <status>UNKNOWN</status>
            <timeTaken>3660</timeTaken>
          </result>
          <result>
            <message>Step 52 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>53</order>
            <started>14:01:00.022</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 53 [Then : Validate water alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : waterLeak is now [ false ] and waterLeakShutoff is now [ false ]</message>
            <name>Then : Validate water alarm value changed</name>
            <order>54</order>
            <started>14:01:00.023</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 54 [DataSource Loop : WaterAlarms] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : WaterAlarms</name>
            <order>55</order>
            <started>14:01:00.024</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 55 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>56</order>
            <started>14:01:00.024</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate water alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:01:00</startTime>
        <status>FINISHED</status>
        <testCaseId>5c244e8f-d72a-4e4a-a8ce-4ef7cdefe5af</testCaseId>
        <testCaseName>HO/CO/TE change commercialActivity</testCaseName>
        <timeTaken>11098</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 87 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:01:00.035</started>
            <status>OK</status>
            <timeTaken>87</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:01:00.123</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3874 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:01:00.125</started>
            <status>UNKNOWN</status>
            <timeTaken>3874</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:01:04.073</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:01:04.074</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the Commercial Activity assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : isUsedForCommercialOrBusinessActivity assumption is correct ( ( false ) )</message>
            <name>Then : Verify the Commercial Activity assumption</name>
            <order>7</order>
            <started>14:01:04.075</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>14:01:04.077</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and change commercial activity value] UNKNOWN: took 820 ms</message>
            <name>Given : I have send Recalculate request and change commercial activity value</name>
            <order>9</order>
            <started>14:01:04.078</started>
            <status>UNKNOWN</status>
            <timeTaken>820</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK with a roadblock] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with a roadblock</name>
            <order>10</order>
            <started>14:01:04.930</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify with true to commercial activity we have a roadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00059 ) is present ( Commercial or business activity in the property is not permitted ).</message>
            <name>Then : Verify with true to commercial activity we have a roadblock</name>
            <order>11</order>
            <started>14:01:04.932</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>12</order>
            <started>14:01:04.933</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:01:04.934</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2180 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:01:04.935</started>
            <status>UNKNOWN</status>
            <timeTaken>2180</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:01:07.122</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>14:01:07.123</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Verify the Commercial Activity assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : isUsedForCommercialOrBusinessActivity assumption is correct ( ( false ) )</message>
            <name>Then : Verify the Commercial Activity assumption</name>
            <order>17</order>
            <started>14:01:07.123</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>14:01:07.196</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and change commercial activity value] UNKNOWN: took 1008 ms</message>
            <name>Given : I have send Recalculate request and change commercial activity value</name>
            <order>19</order>
            <started>14:01:07.198</started>
            <status>UNKNOWN</status>
            <timeTaken>1008</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK with a roadblock] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with a roadblock</name>
            <order>20</order>
            <started>14:01:08.213</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify with true to commercial activity we have a roadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00059 ) is present ( Commercial or business activity in the property is not permitted ).</message>
            <name>Then : Verify with true to commercial activity we have a roadblock</name>
            <order>21</order>
            <started>14:01:08.214</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>22</order>
            <started>14:01:08.215</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:01:08.216</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2462 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:01:08.217</started>
            <status>UNKNOWN</status>
            <timeTaken>2462</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>14:01:10.684</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>14:01:10.685</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify the Commercial Activity assumption] OK: took 0 ms
 -> Script-result:    SUCCESS : isUsedForCommercialOrBusinessActivity assumption is correct ( ( false ) )</message>
            <name>Then : Verify the Commercial Activity assumption</name>
            <order>27</order>
            <started>14:01:10.685</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>14:01:10.686</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate request and change commercial activity value] UNKNOWN: took 667 ms</message>
            <name>Given : I have send Recalculate request and change commercial activity value</name>
            <order>29</order>
            <started>14:01:10.687</started>
            <status>UNKNOWN</status>
            <timeTaken>667</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK with a roadblock] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with a roadblock</name>
            <order>30</order>
            <started>14:01:11.360</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify with true to commercial activity we have a roadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00059 ) is present ( Commercial or business activity in the property is not permitted ).</message>
            <name>Then : Verify with true to commercial activity we have a roadblock</name>
            <order>31</order>
            <started>14:01:11.361</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>32</order>
            <started>14:01:11.362</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the Commercial Activity assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change commercial activity value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify with true to commercial activity we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the Commercial Activity assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change commercial activity value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify with true to commercial activity we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the Commercial Activity assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change commercial activity value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify with true to commercial activity we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:01:11</startTime>
        <status>FINISHED</status>
        <testCaseId>87a3df3f-e9b5-4723-a56f-01d7a43651ad</testCaseId>
        <testCaseName>HO/CO/TE change auxiliaryHeatingSystem</testCaseName>
        <timeTaken>95490</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 38 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:01:11.375</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:01:11.450</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2452 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:01:11.452</started>
            <status>UNKNOWN</status>
            <timeTaken>2452</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:01:13.954</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:01:13.956</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>7</order>
            <started>14:01:13.956</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource : AuxiliaryType] OK: took 36 ms</message>
            <name>DataSource : AuxiliaryType</name>
            <order>8</order>
            <started>14:01:13.957</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 8 [DataSource : AuxiliaryUsage] OK: took 34 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>9</order>
            <started>14:01:14.048</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 9 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>10</order>
            <started>14:01:14.118</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 10 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2864 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>11</order>
            <started>14:01:14.120</started>
            <status>UNKNOWN</status>
            <timeTaken>2864</timeTaken>
          </result>
          <result>
            <message>Step 11 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>12</order>
            <started>14:01:16.993</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>13</order>
            <started>14:01:16.994</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>14</order>
            <started>14:01:16.996</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>15</order>
            <started>14:01:16.996</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3287 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>16</order>
            <started>14:01:16.998</started>
            <status>UNKNOWN</status>
            <timeTaken>3287</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>17</order>
            <started>14:01:20.292</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>18</order>
            <started>14:01:20.293</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>19</order>
            <started>14:01:20.294</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>20</order>
            <started>14:01:20.295</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3009 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>21</order>
            <started>14:01:20.296</started>
            <status>UNKNOWN</status>
            <timeTaken>3009</timeTaken>
          </result>
          <result>
            <message>Step 21 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>22</order>
            <started>14:01:23.359</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>23</order>
            <started>14:01:23.360</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>24</order>
            <started>14:01:23.362</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>25</order>
            <started>14:01:23.363</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource : AuxiliaryUsage] OK: took 35 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>26</order>
            <started>14:01:23.363</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>27</order>
            <started>14:01:23.497</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3067 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>28</order>
            <started>14:01:23.499</started>
            <status>UNKNOWN</status>
            <timeTaken>3067</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>29</order>
            <started>14:01:26.575</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( UC )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>30</order>
            <started>14:01:26.576</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>31</order>
            <started>14:01:26.577</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>32</order>
            <started>14:01:26.578</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 4380 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>33</order>
            <started>14:01:26.580</started>
            <status>UNKNOWN</status>
            <timeTaken>4380</timeTaken>
          </result>
          <result>
            <message>Step 33 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>34</order>
            <started>14:01:30.965</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( NU )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>35</order>
            <started>14:01:30.966</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>36</order>
            <started>14:01:30.967</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>37</order>
            <started>14:01:30.967</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3216 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>38</order>
            <started>14:01:30.969</started>
            <status>UNKNOWN</status>
            <timeTaken>3216</timeTaken>
          </result>
          <result>
            <message>Step 38 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>39</order>
            <started>14:01:34.190</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( UR )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>40</order>
            <started>14:01:34.191</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>41</order>
            <started>14:01:34.192</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>42</order>
            <started>14:01:34.193</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [DataSource : AuxiliaryUsage] OK: took 31 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>43</order>
            <started>14:01:34.194</started>
            <status>OK</status>
            <timeTaken>31</timeTaken>
          </result>
          <result>
            <message>Step 43 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>44</order>
            <started>14:01:34.226</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3466 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>45</order>
            <started>14:01:34.228</started>
            <status>UNKNOWN</status>
            <timeTaken>3466</timeTaken>
          </result>
          <result>
            <message>Step 45 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>46</order>
            <started>14:01:37.700</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 46 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( UC )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>47</order>
            <started>14:01:37.701</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>48</order>
            <started>14:01:37.702</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>49</order>
            <started>14:01:37.703</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3701 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>50</order>
            <started>14:01:37.704</started>
            <status>UNKNOWN</status>
            <timeTaken>3701</timeTaken>
          </result>
          <result>
            <message>Step 50 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>51</order>
            <started>14:01:41.412</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( NU )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>52</order>
            <started>14:01:41.413</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 52 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>53</order>
            <started>14:01:41.414</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 53 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>54</order>
            <started>14:01:41.414</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 54 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 4875 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>55</order>
            <started>14:01:41.416</started>
            <status>UNKNOWN</status>
            <timeTaken>4875</timeTaken>
          </result>
          <result>
            <message>Step 55 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>56</order>
            <started>14:01:46.296</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 56 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( UR )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>57</order>
            <started>14:01:46.297</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 57 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>58</order>
            <started>14:01:46.298</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 58 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>59</order>
            <started>14:01:46.299</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 59 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>60</order>
            <started>14:01:46.299</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 60 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>61</order>
            <started>14:01:46.300</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 61 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2255 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>62</order>
            <started>14:01:46.301</started>
            <status>UNKNOWN</status>
            <timeTaken>2255</timeTaken>
          </result>
          <result>
            <message>Step 62 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>63</order>
            <started>14:01:48.563</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 63 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>64</order>
            <started>14:01:48.564</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 64 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>65</order>
            <started>14:01:48.566</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 65 [DataSource : AuxiliaryType] OK: took 31 ms</message>
            <name>DataSource : AuxiliaryType</name>
            <order>66</order>
            <started>14:01:48.567</started>
            <status>OK</status>
            <timeTaken>31</timeTaken>
          </result>
          <result>
            <message>Step 66 [DataSource : AuxiliaryUsage] OK: took 31 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>67</order>
            <started>14:01:48.599</started>
            <status>OK</status>
            <timeTaken>31</timeTaken>
          </result>
          <result>
            <message>Step 67 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>68</order>
            <started>14:01:48.632</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 68 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2310 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>69</order>
            <started>14:01:48.633</started>
            <status>UNKNOWN</status>
            <timeTaken>2310</timeTaken>
          </result>
          <result>
            <message>Step 69 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>70</order>
            <started>14:01:50.949</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 70 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>71</order>
            <started>14:01:50.950</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 71 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>72</order>
            <started>14:01:50.951</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 72 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>73</order>
            <started>14:01:50.952</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 73 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3170 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>74</order>
            <started>14:01:50.954</started>
            <status>UNKNOWN</status>
            <timeTaken>3170</timeTaken>
          </result>
          <result>
            <message>Step 74 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>75</order>
            <started>14:01:54.129</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 75 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>76</order>
            <started>14:01:54.130</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 76 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>77</order>
            <started>14:01:54.131</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 77 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>78</order>
            <started>14:01:54.132</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 78 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3274 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>79</order>
            <started>14:01:54.133</started>
            <status>UNKNOWN</status>
            <timeTaken>3274</timeTaken>
          </result>
          <result>
            <message>Step 79 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>80</order>
            <started>14:01:57.414</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 80 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>81</order>
            <started>14:01:57.416</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 81 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>82</order>
            <started>14:01:57.416</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 82 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>83</order>
            <started>14:01:57.417</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 83 [DataSource : AuxiliaryUsage] OK: took 32 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>84</order>
            <started>14:01:57.418</started>
            <status>OK</status>
            <timeTaken>32</timeTaken>
          </result>
          <result>
            <message>Step 84 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>85</order>
            <started>14:01:57.452</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 85 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2598 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>86</order>
            <started>14:01:57.453</started>
            <status>UNKNOWN</status>
            <timeTaken>2598</timeTaken>
          </result>
          <result>
            <message>Step 86 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>87</order>
            <started>14:02:00.058</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 87 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( UC )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>88</order>
            <started>14:02:00.059</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 88 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>89</order>
            <started>14:02:00.060</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 89 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>90</order>
            <started>14:02:00.061</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 90 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2768 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>91</order>
            <started>14:02:00.063</started>
            <status>UNKNOWN</status>
            <timeTaken>2768</timeTaken>
          </result>
          <result>
            <message>Step 91 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>92</order>
            <started>14:02:02.837</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 92 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( NU )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>93</order>
            <started>14:02:02.838</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 93 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>94</order>
            <started>14:02:02.839</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 94 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>95</order>
            <started>14:02:02.840</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 95 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3856 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>96</order>
            <started>14:02:02.842</started>
            <status>UNKNOWN</status>
            <timeTaken>3856</timeTaken>
          </result>
          <result>
            <message>Step 96 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>97</order>
            <started>14:02:06.704</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 97 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( UR )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>98</order>
            <started>14:02:06.705</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 98 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>99</order>
            <started>14:02:06.706</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 99 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>100</order>
            <started>14:02:06.707</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 100 [DataSource : AuxiliaryUsage] OK: took 31 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>101</order>
            <started>14:02:06.707</started>
            <status>OK</status>
            <timeTaken>31</timeTaken>
          </result>
          <result>
            <message>Step 101 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>102</order>
            <started>14:02:06.740</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 102 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3968 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>103</order>
            <started>14:02:06.742</started>
            <status>UNKNOWN</status>
            <timeTaken>3968</timeTaken>
          </result>
          <result>
            <message>Step 103 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>104</order>
            <started>14:02:10.716</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 104 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( UC )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>105</order>
            <started>14:02:10.717</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 105 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>106</order>
            <started>14:02:10.718</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 106 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>107</order>
            <started>14:02:10.719</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 107 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3031 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>108</order>
            <started>14:02:10.721</started>
            <status>UNKNOWN</status>
            <timeTaken>3031</timeTaken>
          </result>
          <result>
            <message>Step 108 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>109</order>
            <started>14:02:13.759</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 109 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( NU )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>110</order>
            <started>14:02:13.760</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 110 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>111</order>
            <started>14:02:13.762</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 111 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>112</order>
            <started>14:02:13.762</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 112 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3193 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>113</order>
            <started>14:02:13.764</started>
            <status>UNKNOWN</status>
            <timeTaken>3193</timeTaken>
          </result>
          <result>
            <message>Step 113 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>114</order>
            <started>14:02:16.963</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 114 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( UR )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>115</order>
            <started>14:02:16.964</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 115 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>116</order>
            <started>14:02:16.965</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 116 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>117</order>
            <started>14:02:16.966</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 117 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>118</order>
            <started>14:02:16.966</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 118 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>119</order>
            <started>14:02:16.967</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 119 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2229 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>120</order>
            <started>14:02:16.968</started>
            <status>UNKNOWN</status>
            <timeTaken>2229</timeTaken>
          </result>
          <result>
            <message>Step 120 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>121</order>
            <started>14:02:19.203</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 121 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>122</order>
            <started>14:02:19.204</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 122 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>123</order>
            <started>14:02:19.205</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 123 [DataSource : AuxiliaryType] OK: took 35 ms</message>
            <name>DataSource : AuxiliaryType</name>
            <order>124</order>
            <started>14:02:19.206</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 124 [DataSource : AuxiliaryUsage] OK: took 82 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>125</order>
            <started>14:02:19.242</started>
            <status>OK</status>
            <timeTaken>82</timeTaken>
          </result>
          <result>
            <message>Step 125 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>126</order>
            <started>14:02:19.326</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 126 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2851 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>127</order>
            <started>14:02:19.328</started>
            <status>UNKNOWN</status>
            <timeTaken>2851</timeTaken>
          </result>
          <result>
            <message>Step 127 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>128</order>
            <started>14:02:22.185</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 128 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>129</order>
            <started>14:02:22.186</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 129 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>130</order>
            <started>14:02:22.187</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 130 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>131</order>
            <started>14:02:22.187</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 131 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2773 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>132</order>
            <started>14:02:22.189</started>
            <status>UNKNOWN</status>
            <timeTaken>2773</timeTaken>
          </result>
          <result>
            <message>Step 132 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>133</order>
            <started>14:02:24.968</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 133 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>134</order>
            <started>14:02:24.969</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 134 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>135</order>
            <started>14:02:24.969</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 135 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>136</order>
            <started>14:02:24.970</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 136 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2389 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>137</order>
            <started>14:02:24.972</started>
            <status>UNKNOWN</status>
            <timeTaken>2389</timeTaken>
          </result>
          <result>
            <message>Step 137 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>138</order>
            <started>14:02:27.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 138 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was false with expected values for : auxiliaryHeatingType ( null ) and usageType ( null )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>139</order>
            <started>14:02:27.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 139 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>140</order>
            <started>14:02:27.367</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 140 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>141</order>
            <started>14:02:27.368</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 141 [DataSource : AuxiliaryUsage] OK: took 33 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>142</order>
            <started>14:02:27.369</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 142 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>143</order>
            <started>14:02:27.403</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 143 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 2662 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>144</order>
            <started>14:02:27.404</started>
            <status>UNKNOWN</status>
            <timeTaken>2662</timeTaken>
          </result>
          <result>
            <message>Step 144 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>145</order>
            <started>14:02:30.072</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 145 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( UC )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>146</order>
            <started>14:02:30.072</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 146 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>147</order>
            <started>14:02:30.073</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 147 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>148</order>
            <started>14:02:30.074</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 148 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3492 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>149</order>
            <started>14:02:30.076</started>
            <status>UNKNOWN</status>
            <timeTaken>3492</timeTaken>
          </result>
          <result>
            <message>Step 149 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>150</order>
            <started>14:02:33.574</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 150 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( NU )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>151</order>
            <started>14:02:33.574</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 151 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>152</order>
            <started>14:02:33.575</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 152 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>153</order>
            <started>14:02:33.576</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 153 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3825 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>154</order>
            <started>14:02:33.578</started>
            <status>UNKNOWN</status>
            <timeTaken>3825</timeTaken>
          </result>
          <result>
            <message>Step 154 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>155</order>
            <started>14:02:37.409</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 155 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( SFS ) and usageType ( UR )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>156</order>
            <started>14:02:37.410</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 156 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>157</order>
            <started>14:02:37.411</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 157 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>158</order>
            <started>14:02:37.413</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 158 [DataSource : AuxiliaryUsage] OK: took 34 ms</message>
            <name>DataSource : AuxiliaryUsage</name>
            <order>159</order>
            <started>14:02:37.413</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 159 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>160</order>
            <started>14:02:37.448</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 160 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3193 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>161</order>
            <started>14:02:37.450</started>
            <status>UNKNOWN</status>
            <timeTaken>3193</timeTaken>
          </result>
          <result>
            <message>Step 161 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>162</order>
            <started>14:02:40.647</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 162 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( UC )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>163</order>
            <started>14:02:40.648</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 163 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>164</order>
            <started>14:02:40.650</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 164 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>165</order>
            <started>14:02:40.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 165 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3095 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>166</order>
            <started>14:02:40.652</started>
            <status>UNKNOWN</status>
            <timeTaken>3095</timeTaken>
          </result>
          <result>
            <message>Step 166 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>167</order>
            <started>14:02:43.752</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 167 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( NU )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>168</order>
            <started>14:02:43.753</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 168 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>169</order>
            <started>14:02:43.754</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 169 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>170</order>
            <started>14:02:43.755</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 170 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 3754 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>171</order>
            <started>14:02:43.756</started>
            <status>UNKNOWN</status>
            <timeTaken>3754</timeTaken>
          </result>
          <result>
            <message>Step 171 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>172</order>
            <started>14:02:47.516</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 172 [Then : Verify auxiliary heating system response] OK: took 0 ms
 -> Script-result:    SUCCESS : hasAuxiliaryHeating was true with expected values for : auxiliaryHeatingType ( LFS ) and usageType ( UR )</message>
            <name>Then : Verify auxiliary heating system response</name>
            <order>173</order>
            <started>14:02:47.517</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 173 [DataSource Loop : AuxiliaryUsage] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryUsage</name>
            <order>174</order>
            <started>14:02:47.518</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 174 [DataSource Loop : AuxiliaryType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : AuxiliaryType</name>
            <order>175</order>
            <started>14:02:47.519</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 175 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>176</order>
            <started>14:02:47.519</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify auxiliary heating system response</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryUsage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : AuxiliaryType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:02:47</startTime>
        <status>FINISHED</status>
        <testCaseId>fc7a033c-b2e7-45a1-95fa-32bc65c34ff8</testCaseId>
        <testCaseName>HO/CO/TE change FireHydrant FireStation</testCaseName>
        <timeTaken>14780</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 35 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:02:47.526</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:02:47.562</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2441 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:02:47.563</started>
            <status>UNKNOWN</status>
            <timeTaken>2441</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:02:50.010</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:02:50.011</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate fire hydrant and station assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : FireStation protected ( true ) and firehydrant protection ( true ) assumption were correct</message>
            <name>Then : Validate fire hydrant and station assumption</name>
            <order>7</order>
            <started>14:02:50.012</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>14:02:50.013</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate and modified fire hydrant and fire station] UNKNOWN: took 2728 ms</message>
            <name>Given : I have send Recalculate and modified fire hydrant and fire station</name>
            <order>9</order>
            <started>14:02:50.014</started>
            <status>UNKNOWN</status>
            <timeTaken>2728</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:02:52.749</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Validate fire hydrant and fire station value changed] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : FireStation protected ( false ) and firehydrant protection ( false ) values were changed</message>
            <name>Then : Validate fire hydrant and fire station value changed</name>
            <order>11</order>
            <started>14:02:52.750</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>12</order>
            <started>14:02:52.751</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:02:52.752</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1891 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:02:52.753</started>
            <status>UNKNOWN</status>
            <timeTaken>1891</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:02:54.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>14:02:54.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Validate fire hydrant and station assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : FireStation protected ( true ) and firehydrant protection ( true ) assumption were correct</message>
            <name>Then : Validate fire hydrant and station assumption</name>
            <order>17</order>
            <started>14:02:54.652</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>14:02:54.653</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate and modified fire hydrant and fire station] UNKNOWN: took 2472 ms</message>
            <name>Given : I have send Recalculate and modified fire hydrant and fire station</name>
            <order>19</order>
            <started>14:02:54.654</started>
            <status>UNKNOWN</status>
            <timeTaken>2472</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>14:02:57.133</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Validate fire hydrant and fire station value changed] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : FireStation protected ( false ) and firehydrant protection ( false ) values were changed</message>
            <name>Then : Validate fire hydrant and fire station value changed</name>
            <order>21</order>
            <started>14:02:57.133</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>22</order>
            <started>14:02:57.134</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:02:57.135</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2121 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:02:57.136</started>
            <status>UNKNOWN</status>
            <timeTaken>2121</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>14:02:59.264</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>14:02:59.264</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Validate fire hydrant and station assumption] OK: took 0 ms
 -> Script-result:    Success : CALCULATE : FireStation protected ( true ) and firehydrant protection ( true ) assumption were correct</message>
            <name>Then : Validate fire hydrant and station assumption</name>
            <order>27</order>
            <started>14:02:59.265</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>14:02:59.266</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate and modified fire hydrant and fire station] UNKNOWN: took 3092 ms</message>
            <name>Given : I have send Recalculate and modified fire hydrant and fire station</name>
            <order>29</order>
            <started>14:02:59.267</started>
            <status>UNKNOWN</status>
            <timeTaken>3092</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>30</order>
            <started>14:03:02.365</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate fire hydrant and fire station value changed] OK: took 0 ms
 -> Script-result:    Success : RE-CALCULATE : FireStation protected ( false ) and firehydrant protection ( false ) values were changed</message>
            <name>Then : Validate fire hydrant and fire station value changed</name>
            <order>31</order>
            <started>14:03:02.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>32</order>
            <started>14:03:02.367</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and station assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified fire hydrant and fire station</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and fire station value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and station assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified fire hydrant and fire station</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and fire station value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and station assumption</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified fire hydrant and fire station</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire hydrant and fire station value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:03:02</startTime>
        <status>FINISHED</status>
        <testCaseId>4fbd1228-7abf-4f68-9207-4d009a580625</testCaseId>
        <testCaseName>HO/CO/TE change burglarAlarm</testCaseName>
        <timeTaken>25655</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 38 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:03:02.381</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:03:02.421</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2680 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:03:02.422</started>
            <status>UNKNOWN</status>
            <timeTaken>2680</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:03:05.108</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:03:05.109</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>7</order>
            <started>14:03:05.110</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource : BurglarAlarms] OK: took 33 ms</message>
            <name>DataSource : BurglarAlarms</name>
            <order>8</order>
            <started>14:03:05.111</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>9</order>
            <started>14:03:05.145</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 3758 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>10</order>
            <started>14:03:05.148</started>
            <status>UNKNOWN</status>
            <timeTaken>3758</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>11</order>
            <started>14:03:08.912</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>12</order>
            <started>14:03:08.913</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>13</order>
            <started>14:03:08.914</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>14</order>
            <started>14:03:08.914</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 3378 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>15</order>
            <started>14:03:08.916</started>
            <status>UNKNOWN</status>
            <timeTaken>3378</timeTaken>
          </result>
          <result>
            <message>Step 15 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>16</order>
            <started>14:03:12.318</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>17</order>
            <started>14:03:12.338</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>18</order>
            <started>14:03:12.352</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>19</order>
            <started>14:03:12.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 283 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>20</order>
            <started>14:03:12.367</started>
            <status>UNKNOWN</status>
            <timeTaken>283</timeTaken>
          </result>
          <result>
            <message>Step 20 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>21</order>
            <started>14:03:12.655</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>22</order>
            <started>14:03:12.655</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>23</order>
            <started>14:03:12.656</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>24</order>
            <started>14:03:12.657</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 315 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>25</order>
            <started>14:03:12.659</started>
            <status>UNKNOWN</status>
            <timeTaken>315</timeTaken>
          </result>
          <result>
            <message>Step 25 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>26</order>
            <started>14:03:12.979</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>27</order>
            <started>14:03:12.979</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>28</order>
            <started>14:03:12.980</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>29</order>
            <started>14:03:12.981</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>30</order>
            <started>14:03:12.982</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2009 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>31</order>
            <started>14:03:12.983</started>
            <status>UNKNOWN</status>
            <timeTaken>2009</timeTaken>
          </result>
          <result>
            <message>Step 31 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>32</order>
            <started>14:03:15.025</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>33</order>
            <started>14:03:15.026</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>34</order>
            <started>14:03:15.026</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [DataSource : BurglarAlarms] OK: took 35 ms</message>
            <name>DataSource : BurglarAlarms</name>
            <order>35</order>
            <started>14:03:15.027</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 35 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>36</order>
            <started>14:03:15.063</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 36 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 2292 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>37</order>
            <started>14:03:15.065</started>
            <status>UNKNOWN</status>
            <timeTaken>2292</timeTaken>
          </result>
          <result>
            <message>Step 37 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>38</order>
            <started>14:03:17.364</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>39</order>
            <started>14:03:17.367</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>40</order>
            <started>14:03:17.368</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>41</order>
            <started>14:03:17.369</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 41 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 2627 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>42</order>
            <started>14:03:17.370</started>
            <status>UNKNOWN</status>
            <timeTaken>2627</timeTaken>
          </result>
          <result>
            <message>Step 42 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>43</order>
            <started>14:03:20.002</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>44</order>
            <started>14:03:20.003</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>45</order>
            <started>14:03:20.004</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>46</order>
            <started>14:03:20.005</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 46 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 279 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>47</order>
            <started>14:03:20.006</started>
            <status>UNKNOWN</status>
            <timeTaken>279</timeTaken>
          </result>
          <result>
            <message>Step 47 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>48</order>
            <started>14:03:20.329</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>49</order>
            <started>14:03:20.330</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>50</order>
            <started>14:03:20.331</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>51</order>
            <started>14:03:20.332</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 268 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>52</order>
            <started>14:03:20.334</started>
            <status>UNKNOWN</status>
            <timeTaken>268</timeTaken>
          </result>
          <result>
            <message>Step 52 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>53</order>
            <started>14:03:20.607</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 53 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>54</order>
            <started>14:03:20.608</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 54 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>55</order>
            <started>14:03:20.609</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 55 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>56</order>
            <started>14:03:20.610</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 56 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>57</order>
            <started>14:03:20.610</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 57 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2307 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>58</order>
            <started>14:03:20.612</started>
            <status>UNKNOWN</status>
            <timeTaken>2307</timeTaken>
          </result>
          <result>
            <message>Step 58 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>59</order>
            <started>14:03:22.925</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 59 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>60</order>
            <started>14:03:22.926</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 60 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>61</order>
            <started>14:03:22.927</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 61 [DataSource : BurglarAlarms] OK: took 91 ms</message>
            <name>DataSource : BurglarAlarms</name>
            <order>62</order>
            <started>14:03:22.928</started>
            <status>OK</status>
            <timeTaken>91</timeTaken>
          </result>
          <result>
            <message>Step 62 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>63</order>
            <started>14:03:23.047</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 63 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 2348 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>64</order>
            <started>14:03:23.049</started>
            <status>UNKNOWN</status>
            <timeTaken>2348</timeTaken>
          </result>
          <result>
            <message>Step 64 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>65</order>
            <started>14:03:25.403</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 65 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>66</order>
            <started>14:03:25.404</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 66 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>67</order>
            <started>14:03:25.405</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 67 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>68</order>
            <started>14:03:25.405</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 68 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 2385 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>69</order>
            <started>14:03:25.407</started>
            <status>UNKNOWN</status>
            <timeTaken>2385</timeTaken>
          </result>
          <result>
            <message>Step 69 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>70</order>
            <started>14:03:27.798</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 70 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>71</order>
            <started>14:03:27.800</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 71 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>72</order>
            <started>14:03:27.800</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 72 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>73</order>
            <started>14:03:27.801</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 73 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 254 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>74</order>
            <started>14:03:27.803</started>
            <status>UNKNOWN</status>
            <timeTaken>254</timeTaken>
          </result>
          <result>
            <message>Step 74 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>75</order>
            <started>14:03:28.061</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 75 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>76</order>
            <started>14:03:28.062</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 76 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>77</order>
            <started>14:03:28.063</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 77 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>78</order>
            <started>14:03:28.064</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 78 [Given : I have send Recalculate and modified burglar alarm values] UNKNOWN: took 271 ms</message>
            <name>Given : I have send Recalculate and modified burglar alarm values</name>
            <order>79</order>
            <started>14:03:28.066</started>
            <status>UNKNOWN</status>
            <timeTaken>271</timeTaken>
          </result>
          <result>
            <message>Step 79 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>80</order>
            <started>14:03:28.341</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 80 [Then : Validate burglar alarm value changed] OK: took 0 ms</message>
            <name>Then : Validate burglar alarm value changed</name>
            <order>81</order>
            <started>14:03:28.342</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 81 [DataSource Loop : BurglarAlarms] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : BurglarAlarms</name>
            <order>82</order>
            <started>14:03:28.343</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 82 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>83</order>
            <started>14:03:28.344</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified burglar alarm values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate burglar alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : BurglarAlarms</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:03:28</startTime>
        <status>FINISHED</status>
        <testCaseId>a5e6213b-f0a0-4a77-b0a2-ca7f8111b01f</testCaseId>
        <testCaseName>HO/CO/TE change fireAlarms</testCaseName>
        <timeTaken>16671</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 35 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:03:28.355</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:03:28.391</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3020 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:03:28.392</started>
            <status>UNKNOWN</status>
            <timeTaken>3020</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:03:31.418</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:03:31.419</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>7</order>
            <started>14:03:31.420</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>14:03:31.420</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate and modified water fire values] UNKNOWN: took 2709 ms</message>
            <name>Given : I have send Recalculate and modified water fire values</name>
            <order>9</order>
            <started>14:03:31.422</started>
            <status>UNKNOWN</status>
            <timeTaken>2709</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:03:34.137</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Validate fire alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : fire alarm is now [ true ]</message>
            <name>Then : Validate fire alarm value changed</name>
            <order>11</order>
            <started>14:03:34.138</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>12</order>
            <started>14:03:34.138</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:03:34.139</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2871 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:03:34.140</started>
            <status>UNKNOWN</status>
            <timeTaken>2871</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:03:37.017</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>14:03:37.018</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>17</order>
            <started>14:03:37.019</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>14:03:37.019</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate and modified water fire values] UNKNOWN: took 3422 ms</message>
            <name>Given : I have send Recalculate and modified water fire values</name>
            <order>19</order>
            <started>14:03:37.021</started>
            <status>UNKNOWN</status>
            <timeTaken>3422</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>14:03:40.450</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Validate fire alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : fire alarm is now [ true ]</message>
            <name>Then : Validate fire alarm value changed</name>
            <order>21</order>
            <started>14:03:40.451</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>22</order>
            <started>14:03:40.452</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:03:40.452</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1934 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:03:40.453</started>
            <status>UNKNOWN</status>
            <timeTaken>1934</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>14:03:42.392</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>14:03:42.393</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify the alarm assumptions] OK: took 0 ms</message>
            <name>Then : Verify the alarm assumptions</name>
            <order>27</order>
            <started>14:03:42.394</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>14:03:42.394</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate and modified water fire values] UNKNOWN: took 2680 ms</message>
            <name>Given : I have send Recalculate and modified water fire values</name>
            <order>29</order>
            <started>14:03:42.395</started>
            <status>UNKNOWN</status>
            <timeTaken>2680</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>30</order>
            <started>14:03:45.082</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate fire alarm value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water alarm value were changed : fire alarm is now [ true ]</message>
            <name>Then : Validate fire alarm value changed</name>
            <order>31</order>
            <started>14:03:45.083</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>32</order>
            <started>14:03:45.083</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water fire values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water fire values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify the alarm assumptions</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified water fire values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate fire alarm value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:03:45</startTime>
        <status>FINISHED</status>
        <testCaseId>7121dc91-0971-42ba-9114-4bc3c0f37f5f</testCaseId>
        <testCaseName>HO/CO/TE change duoflex</testCaseName>
        <timeTaken>25967</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 34 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:03:45.093</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:03:45.128</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2359 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:03:45.130</started>
            <status>UNKNOWN</status>
            <timeTaken>2359</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:03:47.494</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource : insuranceBundleDiscount] OK: took 0 ms</message>
            <name>DataSource : insuranceBundleDiscount</name>
            <order>6</order>
            <started>14:03:47.495</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>7</order>
            <started>14:03:47.496</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate and modified duoflex values] UNKNOWN: took 2808 ms</message>
            <name>Given : I have send Recalculate and modified duoflex values</name>
            <order>8</order>
            <started>14:03:47.498</started>
            <status>UNKNOWN</status>
            <timeTaken>2808</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:03:50.313</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Validate insuranceBundleDiscount value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Insurance bundle discount value was changed : value is now [ false ]</message>
            <name>Then : Validate insuranceBundleDiscount value changed</name>
            <order>10</order>
            <started>14:03:50.314</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [DataSource Loop : insuranceBundleDiscount] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : insuranceBundleDiscount</name>
            <order>11</order>
            <started>14:03:50.315</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>12</order>
            <started>14:03:50.316</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Given : I have send Recalculate and modified duoflex values] UNKNOWN: took 2899 ms</message>
            <name>Given : I have send Recalculate and modified duoflex values</name>
            <order>13</order>
            <started>14:03:50.317</started>
            <status>UNKNOWN</status>
            <timeTaken>2899</timeTaken>
          </result>
          <result>
            <message>Step 13 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>14</order>
            <started>14:03:53.222</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Then : Validate insuranceBundleDiscount value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Insurance bundle discount value was changed : value is now [ true ]</message>
            <name>Then : Validate insuranceBundleDiscount value changed</name>
            <order>15</order>
            <started>14:03:53.222</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [DataSource Loop : insuranceBundleDiscount] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : insuranceBundleDiscount</name>
            <order>16</order>
            <started>14:03:53.223</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>17</order>
            <started>14:03:53.224</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>18</order>
            <started>14:03:53.225</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2122 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>19</order>
            <started>14:03:53.226</started>
            <status>UNKNOWN</status>
            <timeTaken>2122</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>20</order>
            <started>14:03:55.354</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [DataSource : insuranceBundleDiscount] OK: took 0 ms</message>
            <name>DataSource : insuranceBundleDiscount</name>
            <order>21</order>
            <started>14:03:55.355</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>22</order>
            <started>14:03:55.356</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Given : I have send Recalculate and modified duoflex values] UNKNOWN: took 2224 ms</message>
            <name>Given : I have send Recalculate and modified duoflex values</name>
            <order>23</order>
            <started>14:03:55.358</started>
            <status>UNKNOWN</status>
            <timeTaken>2224</timeTaken>
          </result>
          <result>
            <message>Step 23 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>24</order>
            <started>14:03:57.588</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate insuranceBundleDiscount value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Insurance bundle discount value was changed : value is now [ false ]</message>
            <name>Then : Validate insuranceBundleDiscount value changed</name>
            <order>25</order>
            <started>14:03:57.589</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : insuranceBundleDiscount] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : insuranceBundleDiscount</name>
            <order>26</order>
            <started>14:03:57.590</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>27</order>
            <started>14:03:57.590</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Recalculate and modified duoflex values] UNKNOWN: took 2656 ms</message>
            <name>Given : I have send Recalculate and modified duoflex values</name>
            <order>28</order>
            <started>14:03:57.592</started>
            <status>UNKNOWN</status>
            <timeTaken>2656</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>29</order>
            <started>14:04:00.255</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Validate insuranceBundleDiscount value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Insurance bundle discount value was changed : value is now [ true ]</message>
            <name>Then : Validate insuranceBundleDiscount value changed</name>
            <order>30</order>
            <started>14:04:00.255</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [DataSource Loop : insuranceBundleDiscount] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : insuranceBundleDiscount</name>
            <order>31</order>
            <started>14:04:00.256</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>32</order>
            <started>14:04:00.257</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:04:00.257</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2582 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>14:04:00.258</started>
            <status>UNKNOWN</status>
            <timeTaken>2582</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>35</order>
            <started>14:04:02.845</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [DataSource : insuranceBundleDiscount] OK: took 0 ms</message>
            <name>DataSource : insuranceBundleDiscount</name>
            <order>36</order>
            <started>14:04:02.846</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>37</order>
            <started>14:04:02.847</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Given : I have send Recalculate and modified duoflex values] UNKNOWN: took 5257 ms</message>
            <name>Given : I have send Recalculate and modified duoflex values</name>
            <order>38</order>
            <started>14:04:02.848</started>
            <status>UNKNOWN</status>
            <timeTaken>5257</timeTaken>
          </result>
          <result>
            <message>Step 38 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>39</order>
            <started>14:04:08.111</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Then : Validate insuranceBundleDiscount value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Insurance bundle discount value was changed : value is now [ false ]</message>
            <name>Then : Validate insuranceBundleDiscount value changed</name>
            <order>40</order>
            <started>14:04:08.112</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [DataSource Loop : insuranceBundleDiscount] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : insuranceBundleDiscount</name>
            <order>41</order>
            <started>14:04:08.113</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>42</order>
            <started>14:04:08.113</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Given : I have send Recalculate and modified duoflex values] UNKNOWN: took 3025 ms</message>
            <name>Given : I have send Recalculate and modified duoflex values</name>
            <order>43</order>
            <started>14:04:08.115</started>
            <status>UNKNOWN</status>
            <timeTaken>3025</timeTaken>
          </result>
          <result>
            <message>Step 43 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>44</order>
            <started>14:04:11.146</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Then : Validate insuranceBundleDiscount value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Insurance bundle discount value was changed : value is now [ true ]</message>
            <name>Then : Validate insuranceBundleDiscount value changed</name>
            <order>45</order>
            <started>14:04:11.147</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [DataSource Loop : insuranceBundleDiscount] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : insuranceBundleDiscount</name>
            <order>46</order>
            <started>14:04:11.148</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 46 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>47</order>
            <started>14:04:11.148</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified duoflex values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuranceBundleDiscount value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified duoflex values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuranceBundleDiscount value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified duoflex values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuranceBundleDiscount value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified duoflex values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuranceBundleDiscount value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified duoflex values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuranceBundleDiscount value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate and modified duoflex values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuranceBundleDiscount value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : insuranceBundleDiscount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:04:11</startTime>
    <status>FAILED</status>
    <testSuiteName>Coverage_assumptions</testSuiteName>
    <timeTaken>88937</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:04:11</startTime>
        <status>FINISHED</status>
        <testCaseId>3faca7f2-1e44-4ec5-be0e-5cad57fbbea0</testCaseId>
        <testCaseName>HO Basic Coverages with hit</testCaseName>
        <timeTaken>10934</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : numberOfParts] OK: took 0 ms</message>
            <name>DataSource : numberOfParts</name>
            <order>2</order>
            <started>14:04:11.164</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:04:11.165</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2507 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:04:11.167</started>
            <status>UNKNOWN</status>
            <timeTaken>2507</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:04:13.680</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>6</order>
            <started>14:04:13.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is 628000.0, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>7</order>
            <started>14:04:13.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>8</order>
            <started>14:04:13.683</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify coverage Deductible] OK: took 0 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>9</order>
            <started>14:04:13.684</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>10</order>
            <started>14:04:13.686</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>11</order>
            <started>14:04:13.687</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>12</order>
            <started>14:04:13.688</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>14:04:13.689</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request] UNKNOWN: took 2743 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>14</order>
            <started>14:04:13.690</started>
            <status>UNKNOWN</status>
            <timeTaken>2743</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:04:16.439</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverages values did not change] OK: took 0 ms
 -> Script-result:    SUCCESS : Coverages informations are still the same</message>
            <name>Then : Verify coverages values did not change</name>
            <order>16</order>
            <started>14:04:16.440</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : numberOfParts] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : numberOfParts</name>
            <order>17</order>
            <started>14:04:16.441</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>18</order>
            <started>14:04:16.442</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2589 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>19</order>
            <started>14:04:16.443</started>
            <status>UNKNOWN</status>
            <timeTaken>2589</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>20</order>
            <started>14:04:19.089</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>21</order>
            <started>14:04:19.090</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is 570900.0, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>22</order>
            <started>14:04:19.091</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>23</order>
            <started>14:04:19.092</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify coverage Deductible] OK: took 0 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>24</order>
            <started>14:04:19.092</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>25</order>
            <started>14:04:19.094</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>26</order>
            <started>14:04:19.094</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>27</order>
            <started>14:04:19.095</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>14:04:19.096</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate request] UNKNOWN: took 3095 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>29</order>
            <started>14:04:19.098</started>
            <status>UNKNOWN</status>
            <timeTaken>3095</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>30</order>
            <started>14:04:22.198</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify coverages values did not change] OK: took 0 ms
 -> Script-result:    SUCCESS : Coverages informations are still the same</message>
            <name>Then : Verify coverages values did not change</name>
            <order>31</order>
            <started>14:04:22.198</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : numberOfParts] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : numberOfParts</name>
            <order>32</order>
            <started>14:04:22.199</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : numberOfParts</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverages values did not change</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : numberOfParts</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverages values did not change</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : numberOfParts</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:04:22</startTime>
        <status>FINISHED</status>
        <testCaseId>2daec9b2-bed6-47e1-848a-1496e962abb7</testCaseId>
        <testCaseName>HO Basic Coverages with no hit</testCaseName>
        <timeTaken>5133</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:04:22.207</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a no hit] UNKNOWN: took 2147 ms</message>
            <name>Given : I have send Calculate request to get a no hit</name>
            <order>3</order>
            <started>14:04:22.209</started>
            <status>UNKNOWN</status>
            <timeTaken>2147</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK with nohit] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with nohit</name>
            <order>4</order>
            <started>14:04:24.362</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>5</order>
            <started>14:04:24.363</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Given : I have send Recalculate request] UNKNOWN: took 2986 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>6</order>
            <started>14:04:24.365</started>
            <status>UNKNOWN</status>
            <timeTaken>2986</timeTaken>
          </result>
          <result>
            <message>Step 6 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>7</order>
            <started>14:04:27.357</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>8</order>
            <started>14:04:27.358</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is 570900.0, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>9</order>
            <started>14:04:27.359</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>10</order>
            <started>14:04:27.360</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage Deductible] OK: took 0 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>11</order>
            <started>14:04:27.362</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>12</order>
            <started>14:04:27.363</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>13</order>
            <started>14:04:27.364</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>14</order>
            <started>14:04:27.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a no hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with nohit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <reason>The test run was cancelled due to a failed test step.</reason>
        <startTime>14:04:27</startTime>
        <status>FAILED</status>
        <testCaseId>dc848680-3fdb-4053-96c9-47108cf03b2d</testCaseId>
        <testCaseName>HO GoodHomeBenefit validation</testCaseName>
        <timeTaken>13406</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : GoodHomeBenefit] OK: took 100 ms</message>
            <name>DataSource : GoodHomeBenefit</name>
            <order>2</order>
            <started>14:04:27.376</started>
            <status>OK</status>
            <timeTaken>100</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:04:27.477</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2482 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:04:27.478</started>
            <status>UNKNOWN</status>
            <timeTaken>2482</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:04:29.993</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:04:29.994</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : Good home benefits coverage is NOT present for a client insured since 4 years</message>
            <name>Then : Verify coverage Good Home benefits</name>
            <order>7</order>
            <started>14:04:29.994</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource : hasClaimsInLastFiveYears] OK: took 0 ms</message>
            <name>DataSource : hasClaimsInLastFiveYears</name>
            <order>8</order>
            <started>14:04:29.996</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>9</order>
            <started>14:04:29.998</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Recalculate request] UNKNOWN: took 3753 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>10</order>
            <started>14:04:30.000</started>
            <status>UNKNOWN</status>
            <timeTaken>3753</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>11</order>
            <started>14:04:33.759</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Re-Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Good home benefits coverage is NOT present for a client insured since 4 years with hasClaimsInLastFiveYears at false</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>12</order>
            <started>14:04:33.760</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [DataSource Loop : hasClaimsInLastFiveYears] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : hasClaimsInLastFiveYears</name>
            <order>13</order>
            <started>14:04:33.761</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>14</order>
            <started>14:04:33.762</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Given : I have send Recalculate request] UNKNOWN: took 856 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>15</order>
            <started>14:04:33.764</started>
            <status>UNKNOWN</status>
            <timeTaken>856</timeTaken>
          </result>
          <result>
            <message>Step 15 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>16</order>
            <started>14:04:34.626</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Re-Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Good home benefits coverage is NOT present for a client insured since 4 years with hasClaimsInLastFiveYears at true</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>17</order>
            <started>14:04:34.626</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : hasClaimsInLastFiveYears] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : hasClaimsInLastFiveYears</name>
            <order>18</order>
            <started>14:04:34.628</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [DataSource Loop : GoodHomeBenefit] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : GoodHomeBenefit</name>
            <order>19</order>
            <started>14:04:34.628</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>20</order>
            <started>14:04:34.629</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2539 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>21</order>
            <started>14:04:34.630</started>
            <status>UNKNOWN</status>
            <timeTaken>2539</timeTaken>
          </result>
          <result>
            <message>Step 21 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>22</order>
            <started>14:04:37.175</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>23</order>
            <started>14:04:37.175</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : Good home benefits coverage is present for a client insured since 5 years</message>
            <name>Then : Verify coverage Good Home benefits</name>
            <order>24</order>
            <started>14:04:37.176</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [DataSource : hasClaimsInLastFiveYears] OK: took 0 ms</message>
            <name>DataSource : hasClaimsInLastFiveYears</name>
            <order>25</order>
            <started>14:04:37.177</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>26</order>
            <started>14:04:37.178</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Given : I have send Recalculate request] UNKNOWN: took 2773 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>27</order>
            <started>14:04:37.179</started>
            <status>UNKNOWN</status>
            <timeTaken>2773</timeTaken>
          </result>
          <result>
            <message>Step 27 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>28</order>
            <started>14:04:39.958</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Then : Re-Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Good home benefits coverage is present for a client insured since 5 years with hasClaimsInLastFiveYears at false</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>29</order>
            <started>14:04:39.958</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [DataSource Loop : hasClaimsInLastFiveYears] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : hasClaimsInLastFiveYears</name>
            <order>30</order>
            <started>14:04:39.959</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>31</order>
            <started>14:04:39.960</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Given : I have send Recalculate request] UNKNOWN: took 901 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>32</order>
            <started>14:04:39.961</started>
            <status>UNKNOWN</status>
            <timeTaken>901</timeTaken>
          </result>
          <result>
            <message>Step 32 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>33</order>
            <started>14:04:40.869</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Then : Re-Verify coverage Good Home benefits] FAILED: took 1 ms
 -> Assertion failed: 

assert( node_goodHomeBenefits == null )
        |                     |
        |                     false
        [code:0655, criterions:[], optional:false]

 -> error at line: 29</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>34</order>
            <started>14:04:40.869</started>
            <status>FAILED</status>
            <timeTaken>1</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : GoodHomeBenefit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : GoodHomeBenefit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps>
          <error>
            <detail>&lt;Error Detail disabled></detail>
            <icon>groovy_script_step.png</icon>
            <testCaseName>HO GoodHomeBenefit validation</testCaseName>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
            <testSuiteName>Coverage_assumptions</testSuiteName>
          </error>
        </failedTestSteps>
      </testCase>
      <testCase>
        <startTime>14:04:40</startTime>
        <status>FINISHED</status>
        <testCaseId>fae5f589-8275-4095-8c11-e25c9e2a13b1</testCaseId>
        <testCaseName>HO WaterDamage - Ground water</testCaseName>
        <timeTaken>9774</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : SewerBackupTerritories] OK: took 34 ms</message>
            <name>DataSource : SewerBackupTerritories</name>
            <order>2</order>
            <started>14:04:40.884</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:04:40.919</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2367 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:04:40.920</started>
            <status>UNKNOWN</status>
            <timeTaken>2367</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:04:43.294</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify Ground water coverage] OK: took 2 ms
 -> Script-result:    SUCCESS : Water damage – Ground water, sewers and overland coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>6</order>
            <started>14:04:43.294</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>7</order>
            <started>14:04:43.298</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>8</order>
            <started>14:04:43.299</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2373 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>9</order>
            <started>14:04:43.300</started>
            <status>UNKNOWN</status>
            <timeTaken>2373</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>10</order>
            <started>14:04:45.679</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify Ground water coverage] OK: took 0 ms
 -> Script-result:    SUCCESS : Water damage – Ground water, sewers and overland coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>11</order>
            <started>14:04:45.679</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>12</order>
            <started>14:04:45.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:04:45.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2345 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:04:45.683</started>
            <status>UNKNOWN</status>
            <timeTaken>2345</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:04:48.033</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify Ground water coverage] OK: took 0 ms
 -> Script-result:    SUCCESS : Water damage – Ground water and sewers  coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>16</order>
            <started>14:04:48.034</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>17</order>
            <started>14:04:48.035</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>18</order>
            <started>14:04:48.036</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2653 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>19</order>
            <started>14:04:48.037</started>
            <status>UNKNOWN</status>
            <timeTaken>2653</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>20</order>
            <started>14:04:50.696</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify Ground water coverage] OK: took 0 ms
 -> Script-result:    SUCCESS : Water damage – Ground water and sewers  coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>21</order>
            <started>14:04:50.697</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>22</order>
            <started>14:04:50.698</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:04:50</startTime>
        <status>FINISHED</status>
        <testCaseId>94b434a0-816a-4e96-bc3a-61e6508b3c79</testCaseId>
        <testCaseName>CO Basic Coverages with hit</testCaseName>
        <timeTaken>4249</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:04:50.710</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1963 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:04:50.711</started>
            <status>UNKNOWN</status>
            <timeTaken>1963</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:04:52.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>5</order>
            <started>14:04:52.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is NOT present for Condo, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>6</order>
            <started>14:04:52.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify coverage Content] OK: took 0 ms</message>
            <name>Then : Verify coverage Content</name>
            <order>7</order>
            <started>14:04:52.683</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>8</order>
            <started>14:04:52.684</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify coverage Deductible] OK: took 1 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>9</order>
            <started>14:04:52.685</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is NOT included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>10</order>
            <started>14:04:52.687</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>11</order>
            <started>14:04:52.688</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>12</order>
            <started>14:04:52.689</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>14:04:52.690</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request] UNKNOWN: took 2284 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>14</order>
            <started>14:04:52.691</started>
            <status>UNKNOWN</status>
            <timeTaken>2284</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:04:54.981</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverages values did not change] OK: took 0 ms
 -> Script-result:    SUCCESS : Coverages informations are still the same</message>
            <name>Then : Verify coverages values did not change</name>
            <order>16</order>
            <started>14:04:54.982</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverages values did not change</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:04:54</startTime>
        <status>FINISHED</status>
        <testCaseId>afe14236-e424-4462-8f41-7f270507ecf6</testCaseId>
        <testCaseName>CO Basic Coverages with no hit</testCaseName>
        <timeTaken>5198</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:04:54.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a no hit] UNKNOWN: took 2461 ms</message>
            <name>Given : I have send Calculate request to get a no hit</name>
            <order>3</order>
            <started>14:04:54.992</started>
            <status>UNKNOWN</status>
            <timeTaken>2461</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK with nohit] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with nohit</name>
            <order>4</order>
            <started>14:04:57.458</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>5</order>
            <started>14:04:57.459</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Given : I have send Recalculate request] UNKNOWN: took 2736 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>6</order>
            <started>14:04:57.461</started>
            <status>UNKNOWN</status>
            <timeTaken>2736</timeTaken>
          </result>
          <result>
            <message>Step 6 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>7</order>
            <started>14:05:00.203</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>8</order>
            <started>14:05:00.204</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is NOT present for Condo, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>9</order>
            <started>14:05:00.204</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Content] OK: took 0 ms</message>
            <name>Then : Verify coverage Content</name>
            <order>10</order>
            <started>14:05:00.206</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>11</order>
            <started>14:05:00.207</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify coverage Deductible] OK: took 1 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>12</order>
            <started>14:05:00.208</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is NOT included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>13</order>
            <started>14:05:00.209</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>14</order>
            <started>14:05:00.210</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>15</order>
            <started>14:05:00.211</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a no hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with nohit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:00</startTime>
        <status>FINISHED</status>
        <testCaseId>53453b58-90d5-41b1-99fc-509364994492</testCaseId>
        <testCaseName>CO WaterDamage - Ground water</testCaseName>
        <timeTaken>10728</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : SewerBackupTerritories] OK: took 36 ms</message>
            <name>DataSource : SewerBackupTerritories</name>
            <order>2</order>
            <started>14:05:00.221</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:05:00.258</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2384 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:05:00.260</started>
            <status>UNKNOWN</status>
            <timeTaken>2384</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:05:02.650</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify Ground water coverage] OK: took 2 ms
 -> Script-result:    SUCCESS : Water damage – Ground water, sewers and overland coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>6</order>
            <started>14:05:02.651</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>7</order>
            <started>14:05:02.655</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>8</order>
            <started>14:05:02.656</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2092 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>9</order>
            <started>14:05:02.657</started>
            <status>UNKNOWN</status>
            <timeTaken>2092</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>10</order>
            <started>14:05:04.755</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify Ground water coverage] OK: took 0 ms
 -> Script-result:    SUCCESS : Water damage – Ground water, sewers and overland coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>11</order>
            <started>14:05:04.756</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>12</order>
            <started>14:05:04.757</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:05:04.758</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2272 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:05:04.759</started>
            <status>UNKNOWN</status>
            <timeTaken>2272</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:05:07.038</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify Ground water coverage] OK: took 0 ms
 -> Script-result:    SUCCESS : Water damage – Ground water and sewers  coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>16</order>
            <started>14:05:07.039</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>17</order>
            <started>14:05:07.040</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>18</order>
            <started>14:05:07.041</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3942 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>19</order>
            <started>14:05:07.042</started>
            <status>UNKNOWN</status>
            <timeTaken>3942</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>20</order>
            <started>14:05:10.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify Ground water coverage] OK: took 0 ms
 -> Script-result:    SUCCESS : Water damage – Ground water and sewers  coverage is matching expected values</message>
            <name>Then : Verify Ground water coverage</name>
            <order>21</order>
            <started>14:05:10.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>22</order>
            <started>14:05:10.992</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:10</startTime>
        <status>FINISHED</status>
        <testCaseId>6f70f8d7-8637-4b8f-95fb-3469bb5e5b5e</testCaseId>
        <testCaseName>TE Basic Coverages with hit</testCaseName>
        <timeTaken>4811</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:11.002</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2375 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:11.004</started>
            <status>UNKNOWN</status>
            <timeTaken>2375</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:05:13.385</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>5</order>
            <started>14:05:13.385</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is NOT present for Tenant, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>6</order>
            <started>14:05:13.386</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify coverage Content] OK: took 0 ms</message>
            <name>Then : Verify coverage Content</name>
            <order>7</order>
            <started>14:05:13.387</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>8</order>
            <started>14:05:13.388</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify coverage Deductible] OK: took 0 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>9</order>
            <started>14:05:13.389</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is NOT included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>10</order>
            <started>14:05:13.390</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>11</order>
            <started>14:05:13.391</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>12</order>
            <started>14:05:13.392</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>13</order>
            <started>14:05:13.393</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request] UNKNOWN: took 2436 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>14</order>
            <started>14:05:13.395</started>
            <status>UNKNOWN</status>
            <timeTaken>2436</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:05:15.837</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverages values did not change] OK: took 0 ms
 -> Script-result:    SUCCESS : Coverages informations are still the same</message>
            <name>Then : Verify coverages values did not change</name>
            <order>16</order>
            <started>14:05:15.837</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverages values did not change</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:15</startTime>
        <status>FINISHED</status>
        <testCaseId>cc2ee9cf-322e-4226-9768-17730baf22c0</testCaseId>
        <testCaseName>TE Basic Coverages with no hit</testCaseName>
        <timeTaken>5247</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:15.846</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a no hit] UNKNOWN: took 1871 ms</message>
            <name>Given : I have send Calculate request to get a no hit</name>
            <order>3</order>
            <started>14:05:15.848</started>
            <status>UNKNOWN</status>
            <timeTaken>1871</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK with nohit] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with nohit</name>
            <order>4</order>
            <started>14:05:17.724</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>5</order>
            <started>14:05:17.725</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Given : I have send Recalculate request] UNKNOWN: took 3376 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>6</order>
            <started>14:05:17.726</started>
            <status>UNKNOWN</status>
            <timeTaken>3376</timeTaken>
          </result>
          <result>
            <message>Step 6 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>7</order>
            <started>14:05:21.108</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Set JsonResponse for validations] OK: took 0 ms</message>
            <name>Then : Set JsonResponse for validations</name>
            <order>8</order>
            <started>14:05:21.108</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify coverage single amount] OK: took 0 ms
 -> Script-result:    SUCCESS : Single amount coverage value is NOT present for Condo, as expected</message>
            <name>Then : Verify coverage single amount</name>
            <order>9</order>
            <started>14:05:21.109</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Content] OK: took 0 ms</message>
            <name>Then : Verify coverage Content</name>
            <order>10</order>
            <started>14:05:21.110</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage Liability] OK: took 0 ms
 -> Script-result:    SUCCESS : Liability coverage value is 1000000.0, as expected</message>
            <name>Then : Verify coverage Liability</name>
            <order>11</order>
            <started>14:05:21.111</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify coverage Deductible] OK: took 0 ms</message>
            <name>Then : Verify coverage Deductible</name>
            <order>12</order>
            <started>14:05:21.112</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Verify coverage Water damage above ground] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage is NOT included as expected</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>13</order>
            <started>14:05:21.113</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Then : Verify coverage High Protect Duo] OK: took 0 ms
 -> Script-result:    SUCCESS : High Protect Duo coverage is present but not included as expected</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>14</order>
            <started>14:05:21.114</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Verify coverage Fire explosion and smoke] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage is present but not included as expected</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>15</order>
            <started>14:05:21.115</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a no hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with nohit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Set JsonResponse for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Liability</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Deductible</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:21</startTime>
        <status>FINISHED</status>
        <testCaseId>95d6817e-cb35-45c8-8438-574766155f24</testCaseId>
        <testCaseName>TE WaterDamage - Ground water</testCaseName>
        <timeTaken>8566</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : SewerBackupTerritories] OK: took 36 ms</message>
            <name>DataSource : SewerBackupTerritories</name>
            <order>2</order>
            <started>14:05:21.126</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:05:21.163</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1947 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:05:21.165</started>
            <status>UNKNOWN</status>
            <timeTaken>1947</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:05:23.118</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify Ground water coverage] OK: took 1 ms</message>
            <name>Then : Verify Ground water coverage</name>
            <order>6</order>
            <started>14:05:23.118</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>7</order>
            <started>14:05:23.120</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>8</order>
            <started>14:05:23.121</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2239 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>9</order>
            <started>14:05:23.122</started>
            <status>UNKNOWN</status>
            <timeTaken>2239</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>10</order>
            <started>14:05:25.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify Ground water coverage] OK: took 0 ms</message>
            <name>Then : Verify Ground water coverage</name>
            <order>11</order>
            <started>14:05:25.367</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>12</order>
            <started>14:05:25.368</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:05:25.369</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2183 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:05:25.370</started>
            <status>UNKNOWN</status>
            <timeTaken>2183</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:05:27.558</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify Ground water coverage] OK: took 0 ms</message>
            <name>Then : Verify Ground water coverage</name>
            <order>16</order>
            <started>14:05:27.559</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>17</order>
            <started>14:05:27.560</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>18</order>
            <started>14:05:27.560</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2160 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>19</order>
            <started>14:05:27.561</started>
            <status>UNKNOWN</status>
            <timeTaken>2160</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>20</order>
            <started>14:05:29.728</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify Ground water coverage] OK: took 0 ms</message>
            <name>Then : Verify Ground water coverage</name>
            <order>21</order>
            <started>14:05:29.729</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>22</order>
            <started>14:05:29.729</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <reason>The test run was cancelled due to a failed test step.</reason>
        <startTime>14:05:29</startTime>
        <status>FAILED</status>
        <testCaseId>08d50342-a4f8-4d38-9613-08b385a34a5f</testCaseId>
        <testCaseName>CO/TE GoodHomeBenefit validation</testCaseName>
        <timeTaken>10137</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 32 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:05:29.739</started>
            <status>OK</status>
            <timeTaken>32</timeTaken>
          </result>
          <result>
            <message>Step 2 [DataSource : GoodHomeBenefit] OK: took 32 ms</message>
            <name>DataSource : GoodHomeBenefit</name>
            <order>3</order>
            <started>14:05:29.773</started>
            <status>OK</status>
            <timeTaken>32</timeTaken>
          </result>
          <result>
            <message>Step 3 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>4</order>
            <started>14:05:29.953</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1867 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>5</order>
            <started>14:05:29.954</started>
            <status>UNKNOWN</status>
            <timeTaken>1867</timeTaken>
          </result>
          <result>
            <message>Step 5 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>6</order>
            <started>14:05:31.827</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>7</order>
            <started>14:05:31.828</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : Good home benefits coverage is NOT present for a client insured since 4 years</message>
            <name>Then : Verify coverage Good Home benefits</name>
            <order>8</order>
            <started>14:05:31.829</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [DataSource : hasClaimsInLastFiveYears] OK: took 0 ms</message>
            <name>DataSource : hasClaimsInLastFiveYears</name>
            <order>9</order>
            <started>14:05:31.830</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>10</order>
            <started>14:05:31.831</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 10 [Given : I have send Recalculate request] UNKNOWN: took 2414 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>11</order>
            <started>14:05:31.833</started>
            <status>UNKNOWN</status>
            <timeTaken>2414</timeTaken>
          </result>
          <result>
            <message>Step 11 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>12</order>
            <started>14:05:34.253</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Re-Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Good home benefits coverage is NOT present for a client insured since 4 years with hasClaimsInLastFiveYears at false</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>13</order>
            <started>14:05:34.254</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : hasClaimsInLastFiveYears] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : hasClaimsInLastFiveYears</name>
            <order>14</order>
            <started>14:05:34.255</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>15</order>
            <started>14:05:34.256</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Recalculate request] UNKNOWN: took 795 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>16</order>
            <started>14:05:34.257</started>
            <status>UNKNOWN</status>
            <timeTaken>795</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>17</order>
            <started>14:05:35.058</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Re-Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Good home benefits coverage is NOT present for a client insured since 4 years with hasClaimsInLastFiveYears at true</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>18</order>
            <started>14:05:35.059</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [DataSource Loop : hasClaimsInLastFiveYears] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : hasClaimsInLastFiveYears</name>
            <order>19</order>
            <started>14:05:35.060</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : GoodHomeBenefit] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : GoodHomeBenefit</name>
            <order>20</order>
            <started>14:05:35.060</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:05:35.061</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1852 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:05:35.062</started>
            <status>UNKNOWN</status>
            <timeTaken>1852</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>23</order>
            <started>14:05:36.921</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>24</order>
            <started>14:05:36.922</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : Good home benefits coverage is present for a client insured since 5 years</message>
            <name>Then : Verify coverage Good Home benefits</name>
            <order>25</order>
            <started>14:05:36.922</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource : hasClaimsInLastFiveYears] OK: took 0 ms</message>
            <name>DataSource : hasClaimsInLastFiveYears</name>
            <order>26</order>
            <started>14:05:36.923</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>27</order>
            <started>14:05:36.924</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Recalculate request] UNKNOWN: took 2401 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>28</order>
            <started>14:05:36.925</started>
            <status>UNKNOWN</status>
            <timeTaken>2401</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>29</order>
            <started>14:05:39.333</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Re-Verify coverage Good Home benefits] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Good home benefits coverage is present for a client insured since 5 years with hasClaimsInLastFiveYears at false</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>30</order>
            <started>14:05:39.333</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [DataSource Loop : hasClaimsInLastFiveYears] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : hasClaimsInLastFiveYears</name>
            <order>31</order>
            <started>14:05:39.334</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>32</order>
            <started>14:05:39.335</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Given : I have send Recalculate request] UNKNOWN: took 742 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>33</order>
            <started>14:05:39.336</started>
            <status>UNKNOWN</status>
            <timeTaken>742</timeTaken>
          </result>
          <result>
            <message>Step 33 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>34</order>
            <started>14:05:40.085</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [Then : Re-Verify coverage Good Home benefits] FAILED: took 0 ms
 -> Assertion failed: 

assert( node_goodHomeBenefits == null )
        |                     |
        |                     false
        [code:0655, criterions:[], optional:false]

 -> error at line: 29</message>
            <name>Then : Re-Verify coverage Good Home benefits</name>
            <order>35</order>
            <started>14:05:40.085</started>
            <status>FAILED</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : GoodHomeBenefit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : GoodHomeBenefit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : hasClaimsInLastFiveYears</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps>
          <error>
            <detail>&lt;Error Detail disabled></detail>
            <icon>groovy_script_step.png</icon>
            <testCaseName>CO/TE GoodHomeBenefit validation</testCaseName>
            <testStepName>Then : Re-Verify coverage Good Home benefits</testStepName>
            <testSuiteName>Coverage_assumptions</testSuiteName>
          </error>
        </failedTestSteps>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:05:40</startTime>
    <status>FINISHED</status>
    <testSuiteName>Roadblocks</testSuiteName>
    <timeTaken>40533</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:05:40</startTime>
        <status>FINISHED</status>
        <testCaseId>0c07923f-9d23-4629-9e6f-afe311173764</testCaseId>
        <testCaseName>HO HardRoadblock : 3 or more units</testCaseName>
        <timeTaken>353</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:40.107</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 353 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:40.109</started>
            <status>UNKNOWN</status>
            <timeTaken>353</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK &amp; no errors if numberOfUnits is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if numberOfUnits is valid</name>
            <order>4</order>
            <started>14:05:40.466</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00076 ) is present ( The number of units is invalid ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>5</order>
            <started>14:05:40.466</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if numberOfUnits is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:40</startTime>
        <status>FINISHED</status>
        <testCaseId>b8a2cf01-9d91-4ca3-863e-7600ec2aab72</testCaseId>
        <testCaseName>HO HardRoadblock : 2 mortgages or line of credit</testCaseName>
        <timeTaken>374</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:40.476</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 374 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:40.478</started>
            <status>UNKNOWN</status>
            <timeTaken>374</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK &amp; and validationMessages is present] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; and validationMessages is present</name>
            <order>4</order>
            <started>14:05:40.856</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  HARD_ROADBLOCK ( WQ00189 ) is present ( 2 or more mortgages ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>5</order>
            <started>14:05:40.857</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; and validationMessages is present</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:40</startTime>
        <status>FINISHED</status>
        <testCaseId>5eea3a05-e619-4998-953a-08e76c3f1f5c</testCaseId>
        <testCaseName>HO HardRoadBlock : Rebuilding cost over 999000</testCaseName>
        <timeTaken>1557</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RebuildingCost Data] OK: took 33 ms</message>
            <name>DataSource : RebuildingCost Data</name>
            <order>2</order>
            <started>14:05:40.868</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 2 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:05:40.903</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 1522 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:05:40.906</started>
            <status>OK</status>
            <timeTaken>1522</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:05:42.432</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00056 ) is present ( Rebuilding cost must be between 120 000$ and 750 000$ ). Rebuilding cost of 1109000 is over the limit</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>6</order>
            <started>14:05:42.433</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RebuildingCost Data</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:42</startTime>
        <status>FINISHED</status>
        <testCaseId>78868949-ddb6-40a7-a0cb-dfb0659cb59d</testCaseId>
        <testCaseName>HO HardRoadBlock : Not currently insured and More than 30 years old</testCaseName>
        <timeTaken>326</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 2 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:42.443</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] OK: took 324 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:42.447</started>
            <status>OK</status>
            <timeTaken>324</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:05:42.775</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00183 ) is present ( Not currently insured + 30 years old and more ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>5</order>
            <started>14:05:42.776</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:42</startTime>
        <status>FINISHED</status>
        <testCaseId>5b387e24-f144-4c04-bab3-7c3e293592d2</testCaseId>
        <testCaseName>HO HardRoadBlock : Not currently insured and Living at address</testCaseName>
        <timeTaken>345</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:42.787</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 345 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:42.788</started>
            <status>UNKNOWN</status>
            <timeTaken>345</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:05:43.137</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00185 ) is present ( Not currently insured + Living currently at the address ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>5</order>
            <started>14:05:43.138</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:43</startTime>
        <status>FINISHED</status>
        <testCaseId>2b9f486f-46fe-4bf4-8569-00bf70f853fc</testCaseId>
        <testCaseName>HO HardRoadBlock : Rebuilding cost and No fire hydrant</testCaseName>
        <timeTaken>3108</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RebuildingCost Data] OK: took 34 ms</message>
            <name>DataSource : RebuildingCost Data</name>
            <order>2</order>
            <started>14:05:43.148</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 2 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:05:43.183</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 2365 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:05:43.186</started>
            <status>OK</status>
            <timeTaken>2365</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:05:45.557</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>6</order>
            <started>14:05:45.558</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Given : I have send Recalculate request] UNKNOWN: took 707 ms</message>
            <name>Given : I have send Recalculate request</name>
            <order>7</order>
            <started>14:05:45.560</started>
            <status>UNKNOWN</status>
            <timeTaken>707</timeTaken>
          </result>
          <result>
            <message>Step 7 [When : Verify that Http status is OK for recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for recalculate</name>
            <order>8</order>
            <started>14:05:46.271</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00191 ) is present ( Roadblock - Rebuilding cost and protected area ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>9</order>
            <started>14:05:46.272</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RebuildingCost Data</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:46</startTime>
        <status>FINISHED</status>
        <testCaseId>83b06c58-b1ea-41e5-b371-bfe47f387b99</testCaseId>
        <testCaseName>HO HardRoadblock : Rebuilding Cost</testCaseName>
        <timeTaken>4343</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:46.282</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2742 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:46.284</started>
            <status>UNKNOWN</status>
            <timeTaken>2742</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:05:49.031</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify coverage single amount] OK: took 0 ms</message>
            <name>Then : Verify coverage single amount</name>
            <order>5</order>
            <started>14:05:49.088</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource : reconstructionCostInDollars] OK: took 38 ms</message>
            <name>DataSource : reconstructionCostInDollars</name>
            <order>6</order>
            <started>14:05:49.090</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>7</order>
            <started>14:05:49.128</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 808 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>8</order>
            <started>14:05:49.130</started>
            <status>UNKNOWN</status>
            <timeTaken>808</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:05:49.943</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  HARD_ROADBLOCK ( WQ00056 ) is present ( Rebuilding cost must be between 120 000$ and 750 000$ ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>10</order>
            <started>14:05:49.944</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [DataSource Loop : reconstructionCostInDollarsmount] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : reconstructionCostInDollarsmount</name>
            <order>11</order>
            <started>14:05:49.945</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>12</order>
            <started>14:05:49.945</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 754 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>13</order>
            <started>14:05:49.947</started>
            <status>UNKNOWN</status>
            <timeTaken>754</timeTaken>
          </result>
          <result>
            <message>Step 13 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>14</order>
            <started>14:05:50.705</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  HARD_ROADBLOCK ( WQ00056 ) is present ( Rebuilding cost must be between 120 000$ and 750 000$ ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>15</order>
            <started>14:05:50.706</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [DataSource Loop : reconstructionCostInDollarsmount] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : reconstructionCostInDollarsmount</name>
            <order>16</order>
            <started>14:05:50.706</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : reconstructionCostInDollars</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : reconstructionCostInDollarsmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : reconstructionCostInDollarsmount</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:50</startTime>
        <status>FINISHED</status>
        <testCaseId>ab2fcb3d-a3a6-4b68-acdb-a0490a834bc2</testCaseId>
        <testCaseName>CO HardRoadBlock : Not currently insured and More than 30 years old</testCaseName>
        <timeTaken>310</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:50.719</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 310 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:50.720</started>
            <status>UNKNOWN</status>
            <timeTaken>310</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:05:51.035</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  HARD_ROADBLOCK ( WQ00183 ) is present ( Not currently insured + 30 years old and more ).</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>5</order>
            <started>14:05:51.036</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:51</startTime>
        <status>FINISHED</status>
        <testCaseId>b55e29b9-87ea-4f6e-90ef-32c0fc2d49d2</testCaseId>
        <testCaseName>CO HardRoadBlock : Not currently insured and Living at address</testCaseName>
        <timeTaken>828</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 527 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:05:51.046</started>
            <status>OK</status>
            <timeTaken>527</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 301 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:05:51.575</started>
            <status>UNKNOWN</status>
            <timeTaken>301</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:05:51.880</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we hit a HardRoadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock is present.</message>
            <name>Then : Verify that we hit a HardRoadblock</name>
            <order>5</order>
            <started>14:05:51.880</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit a HardRoadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:05:51</startTime>
        <status>FINISHED</status>
        <testCaseId>e626e167-8a20-43bb-84e9-6146afc88f3f</testCaseId>
        <testCaseName>HO/CO/TE SoftRoadblock : Invalid heating system (Other)</testCaseName>
        <timeTaken>9256</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 34 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:05:51.891</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 2 [DataSource : primaryHeatingMethod] OK: took 0 ms</message>
            <name>DataSource : primaryHeatingMethod</name>
            <order>3</order>
            <started>14:05:51.926</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>4</order>
            <started>14:05:51.927</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2518 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>5</order>
            <started>14:05:51.928</started>
            <status>UNKNOWN</status>
            <timeTaken>2518</timeTaken>
          </result>
          <result>
            <message>Step 5 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>6</order>
            <started>14:05:54.452</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>7</order>
            <started>14:05:54.452</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Then : Verify that the heating assumption is Electrical] OK: took 0 ms</message>
            <name>Then : Verify that the heating assumption is Electrical</name>
            <order>8</order>
            <started>14:05:54.453</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the recalculate roadblock request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate roadblock request</name>
            <order>9</order>
            <started>14:05:54.454</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Recalculate request and change to invalid heating system] UNKNOWN: took 811 ms</message>
            <name>Given : I have send Recalculate request and change to invalid heating system</name>
            <order>10</order>
            <started>14:05:54.455</started>
            <status>UNKNOWN</status>
            <timeTaken>811</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>11</order>
            <started>14:05:55.272</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that the heating system is modified and we have a roadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00187 ) is present ( The primary source of heating is invalid ).</message>
            <name>Then : Verify that the heating system is modified and we have a roadblock</name>
            <order>12</order>
            <started>14:05:55.272</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>13</order>
            <started>14:05:55.273</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource : primaryHeatingMethod] OK: took 0 ms</message>
            <name>DataSource : primaryHeatingMethod</name>
            <order>14</order>
            <started>14:05:55.274</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:05:55.274</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2452 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:05:55.275</started>
            <status>UNKNOWN</status>
            <timeTaken>2452</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>14:05:57.733</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>18</order>
            <started>14:05:57.734</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Verify that the heating assumption is Electrical] OK: took 0 ms</message>
            <name>Then : Verify that the heating assumption is Electrical</name>
            <order>19</order>
            <started>14:05:57.734</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Setup : Set the recalculate roadblock request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate roadblock request</name>
            <order>20</order>
            <started>14:05:57.735</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Given : I have send Recalculate request and change to invalid heating system] UNKNOWN: took 699 ms</message>
            <name>Given : I have send Recalculate request and change to invalid heating system</name>
            <order>21</order>
            <started>14:05:57.736</started>
            <status>UNKNOWN</status>
            <timeTaken>699</timeTaken>
          </result>
          <result>
            <message>Step 21 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>22</order>
            <started>14:05:58.441</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Then : Verify that the heating system is modified and we have a roadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00187 ) is present ( The primary source of heating is invalid ).</message>
            <name>Then : Verify that the heating system is modified and we have a roadblock</name>
            <order>23</order>
            <started>14:05:58.442</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>24</order>
            <started>14:05:58.442</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [DataSource : primaryHeatingMethod] OK: took 0 ms</message>
            <name>DataSource : primaryHeatingMethod</name>
            <order>25</order>
            <started>14:05:58.443</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>26</order>
            <started>14:05:58.444</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2052 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>27</order>
            <started>14:05:58.445</started>
            <status>UNKNOWN</status>
            <timeTaken>2052</timeTaken>
          </result>
          <result>
            <message>Step 27 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>28</order>
            <started>14:06:00.502</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>29</order>
            <started>14:06:00.503</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that the heating assumption is Electrical] OK: took 0 ms</message>
            <name>Then : Verify that the heating assumption is Electrical</name>
            <order>30</order>
            <started>14:06:00.503</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Setup : Set the recalculate roadblock request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate roadblock request</name>
            <order>31</order>
            <started>14:06:00.504</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Given : I have send Recalculate request and change to invalid heating system] UNKNOWN: took 690 ms</message>
            <name>Given : I have send Recalculate request and change to invalid heating system</name>
            <order>32</order>
            <started>14:06:00.505</started>
            <status>UNKNOWN</status>
            <timeTaken>690</timeTaken>
          </result>
          <result>
            <message>Step 32 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>33</order>
            <started>14:06:01.201</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Then : Verify that the heating system is modified and we have a roadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : HardRoadblock ( WQ00187 ) is present ( The primary source of heating is invalid ).</message>
            <name>Then : Verify that the heating system is modified and we have a roadblock</name>
            <order>34</order>
            <started>14:06:01.202</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>35</order>
            <started>14:06:01.203</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating assumption is Electrical</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate roadblock request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change to invalid heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified and we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating assumption is Electrical</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate roadblock request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change to invalid heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified and we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : primaryHeatingMethod</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating assumption is Electrical</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate roadblock request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change to invalid heating system</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the heating system is modified and we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:06:01</startTime>
        <status>FINISHED</status>
        <testCaseId>13510f18-a6f8-4968-b62e-02c8f37aea4e</testCaseId>
        <testCaseName>HO/CO/TE SoftRoadblock : Has claims in the past</testCaseName>
        <timeTaken>9364</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 35 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:06:01.215</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:06:01.252</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2408 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:06:01.253</started>
            <status>UNKNOWN</status>
            <timeTaken>2408</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:06:03.666</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:06:03.667</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the claim assumption is false] OK: took 0 ms</message>
            <name>Then : Verify that the claim assumption is false</name>
            <order>7</order>
            <started>14:06:03.668</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate roadblock request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate roadblock request</name>
            <order>8</order>
            <started>14:06:03.668</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and change claims to yes] UNKNOWN: took 656 ms</message>
            <name>Given : I have send Recalculate request and change claims to yes</name>
            <order>9</order>
            <started>14:06:03.670</started>
            <status>UNKNOWN</status>
            <timeTaken>656</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:06:04.332</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify that the claims is modified and we have a roadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00064 ) is present ( Presence of habitational claims is not permitted ).</message>
            <name>Then : Verify that the claims is modified and we have a roadblock</name>
            <order>11</order>
            <started>14:06:04.333</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>12</order>
            <started>14:06:04.333</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:06:04.334</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1846 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:06:04.335</started>
            <status>UNKNOWN</status>
            <timeTaken>1846</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:06:06.188</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>14:06:06.188</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Verify that the claim assumption is false] OK: took 0 ms</message>
            <name>Then : Verify that the claim assumption is false</name>
            <order>17</order>
            <started>14:06:06.189</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate roadblock request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate roadblock request</name>
            <order>18</order>
            <started>14:06:06.189</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and change claims to yes] UNKNOWN: took 1000 ms</message>
            <name>Given : I have send Recalculate request and change claims to yes</name>
            <order>19</order>
            <started>14:06:06.191</started>
            <status>UNKNOWN</status>
            <timeTaken>1000</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>14:06:07.197</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify that the claims is modified and we have a roadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00064 ) is present ( Presence of habitational claims is not permitted ).</message>
            <name>Then : Verify that the claims is modified and we have a roadblock</name>
            <order>21</order>
            <started>14:06:07.198</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>22</order>
            <started>14:06:07.198</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:06:07.199</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2306 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:06:07.200</started>
            <status>UNKNOWN</status>
            <timeTaken>2306</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>14:06:09.511</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>14:06:09.512</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify that the claim assumption is false] OK: took 0 ms</message>
            <name>Then : Verify that the claim assumption is false</name>
            <order>27</order>
            <started>14:06:09.512</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate roadblock request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate roadblock request</name>
            <order>28</order>
            <started>14:06:09.513</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate request and change claims to yes] UNKNOWN: took 1113 ms</message>
            <name>Given : I have send Recalculate request and change claims to yes</name>
            <order>29</order>
            <started>14:06:09.514</started>
            <status>UNKNOWN</status>
            <timeTaken>1113</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>30</order>
            <started>14:06:10.634</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify that the claims is modified and we have a roadblock] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00064 ) is present ( Presence of habitational claims is not permitted ).</message>
            <name>Then : Verify that the claims is modified and we have a roadblock</name>
            <order>31</order>
            <started>14:06:10.634</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>32</order>
            <started>14:06:10.635</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claim assumption is false</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate roadblock request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change claims to yes</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claims is modified and we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claim assumption is false</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate roadblock request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change claims to yes</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claims is modified and we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claim assumption is false</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate roadblock request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change claims to yes</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the claims is modified and we have a roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:06:10</startTime>
        <status>FINISHED</status>
        <testCaseId>f48657d9-e2de-4beb-96c1-d0f14766fa4b</testCaseId>
        <testCaseName>HO/CO/TE SoftRoadblock : Invalid auxiliary heating system (Other)</testCaseName>
        <timeTaken>9930</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 36 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:06:10.645</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:06:10.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2826 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:06:10.683</started>
            <status>UNKNOWN</status>
            <timeTaken>2826</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:06:13.515</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>6</order>
            <started>14:06:13.516</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>7</order>
            <started>14:06:13.517</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>8</order>
            <started>14:06:13.518</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 1117 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>9</order>
            <started>14:06:13.519</started>
            <status>UNKNOWN</status>
            <timeTaken>1117</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK with a validationMessage] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with a validationMessage</name>
            <order>10</order>
            <started>14:06:14.641</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify we have a roadblock for Other auxiliary heating type] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00193 ) is present ( Roadblock - Secondary Heating is Other HO-CO-TE  ).</message>
            <name>Then : Verify we have a roadblock for Other auxiliary heating type</name>
            <order>11</order>
            <started>14:06:14.641</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>12</order>
            <started>14:06:14.642</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>13</order>
            <started>14:06:14.643</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2364 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>14</order>
            <started>14:06:14.644</started>
            <status>UNKNOWN</status>
            <timeTaken>2364</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>15</order>
            <started>14:06:17.014</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>16</order>
            <started>14:06:17.014</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>17</order>
            <started>14:06:17.015</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>18</order>
            <started>14:06:17.015</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 672 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>19</order>
            <started>14:06:17.017</started>
            <status>UNKNOWN</status>
            <timeTaken>672</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK with a validationMessage] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with a validationMessage</name>
            <order>20</order>
            <started>14:06:17.695</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify we have a roadblock for Other auxiliary heating type] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00193 ) is present ( Roadblock - Secondary Heating is Other HO-CO-TE  ).</message>
            <name>Then : Verify we have a roadblock for Other auxiliary heating type</name>
            <order>21</order>
            <started>14:06:17.696</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>22</order>
            <started>14:06:17.696</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:06:17.697</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2233 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:06:17.698</started>
            <status>UNKNOWN</status>
            <timeTaken>2233</timeTaken>
          </result>
          <result>
            <message>Step 24 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>25</order>
            <started>14:06:19.936</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [Then : Verify that we hit and have a price and quote number] OK: took 0 ms</message>
            <name>Then : Verify that we hit and have a price and quote number</name>
            <order>26</order>
            <started>14:06:19.937</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify that the auxiliary heating system is False] OK: took 0 ms</message>
            <name>Then : Verify that the auxiliary heating system is False</name>
            <order>27</order>
            <started>14:06:19.937</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the recalculate request] OK: took 0 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>28</order>
            <started>14:06:19.938</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Recalculate request and change auxiliary heating system value] UNKNOWN: took 682 ms</message>
            <name>Given : I have send Recalculate request and change auxiliary heating system value</name>
            <order>29</order>
            <started>14:06:19.939</started>
            <status>UNKNOWN</status>
            <timeTaken>682</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK with a validationMessage] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with a validationMessage</name>
            <order>30</order>
            <started>14:06:20.628</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Verify we have a roadblock for Other auxiliary heating type] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  SOFT_ROADBLOCK ( WQ00193 ) is present ( Roadblock - Secondary Heating is Other HO-CO-TE  ).</message>
            <name>Then : Verify we have a roadblock for Other auxiliary heating type</name>
            <order>31</order>
            <started>14:06:20.628</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>32</order>
            <started>14:06:20.629</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with a validationMessage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify we have a roadblock for Other auxiliary heating type</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with a validationMessage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify we have a roadblock for Other auxiliary heating type</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we hit and have a price and quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that the auxiliary heating system is False</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and change auxiliary heating system value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with a validationMessage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify we have a roadblock for Other auxiliary heating type</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:06:20</startTime>
    <status>FINISHED</status>
    <testSuiteName>Coverage_modifications</testSuiteName>
    <timeTaken>166483</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:06:20</startTime>
        <status>FINISHED</status>
        <testCaseId>ad055e07-4b0c-4e1d-bde4-425606b0dfb9</testCaseId>
        <testCaseName>HO Rebuilding Cost / Single Amount</testCaseName>
        <timeTaken>23629</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : numberOfParts] OK: took 0 ms</message>
            <name>DataSource : numberOfParts</name>
            <order>2</order>
            <started>14:06:20.647</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:06:20.648</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2698 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:06:20.650</started>
            <status>UNKNOWN</status>
            <timeTaken>2698</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:06:23.352</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify coverage single amount] OK: took 0 ms</message>
            <name>Then : Verify coverage single amount</name>
            <order>6</order>
            <started>14:06:23.353</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource : SingleAmount] OK: took 41 ms</message>
            <name>DataSource : SingleAmount</name>
            <order>7</order>
            <started>14:06:23.354</started>
            <status>OK</status>
            <timeTaken>41</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate] OK: took 1 ms
 -> Script-result:    Starting test case 1 - Minimum rebuildingCost for Single-family dewlling (1 unit)</message>
            <name>Setup : Set the recalculate</name>
            <order>8</order>
            <started>14:06:23.396</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 2957 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>9</order>
            <started>14:06:23.398</started>
            <status>UNKNOWN</status>
            <timeTaken>2957</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:06:26.361</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage single amount changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Single amount coverage value changed. It is now 160000.0, as expected for Single-family dewlling (1 unit)</message>
            <name>Then : Verify coverage single amount changed</name>
            <order>11</order>
            <started>14:06:26.362</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : SingleAmount] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : SingleAmount</name>
            <order>12</order>
            <started>14:06:26.364</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate] OK: took 0 ms
 -> Script-result:    Starting test case 2 - Between the range rebuildingCost for Single-family dewlling (1 unit)</message>
            <name>Setup : Set the recalculate</name>
            <order>13</order>
            <started>14:06:26.365</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 2768 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>14</order>
            <started>14:06:26.366</started>
            <status>UNKNOWN</status>
            <timeTaken>2768</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:06:29.139</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverage single amount changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Single amount coverage value changed. It is now 1254000.0, as expected for Single-family dewlling (1 unit)</message>
            <name>Then : Verify coverage single amount changed</name>
            <order>16</order>
            <started>14:06:29.140</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : SingleAmount] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SingleAmount</name>
            <order>17</order>
            <started>14:06:29.141</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Setup : Set the recalculate] OK: took 0 ms
 -> Script-result:    Starting test case 3 - Maximum rebuildingCost for Single-family dewlling (1 unit)</message>
            <name>Setup : Set the recalculate</name>
            <order>18</order>
            <started>14:06:29.141</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 3893 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>19</order>
            <started>14:06:29.143</started>
            <status>UNKNOWN</status>
            <timeTaken>3893</timeTaken>
          </result>
          <result>
            <message>Step 19 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>20</order>
            <started>14:06:33.043</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Then : Verify coverage single amount changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Single amount coverage value changed. It is now 1998000.0, as expected for Single-family dewlling (1 unit)</message>
            <name>Then : Verify coverage single amount changed</name>
            <order>21</order>
            <started>14:06:33.043</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : SingleAmount] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SingleAmount</name>
            <order>22</order>
            <started>14:06:33.044</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [DataSource Loop : numberOfParts] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : numberOfParts</name>
            <order>23</order>
            <started>14:06:33.045</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>24</order>
            <started>14:06:33.045</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2276 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>25</order>
            <started>14:06:33.046</started>
            <status>UNKNOWN</status>
            <timeTaken>2276</timeTaken>
          </result>
          <result>
            <message>Step 25 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>26</order>
            <started>14:06:35.327</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify coverage single amount] OK: took 0 ms</message>
            <name>Then : Verify coverage single amount</name>
            <order>27</order>
            <started>14:06:35.328</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [DataSource : SingleAmount] OK: took 34 ms</message>
            <name>DataSource : SingleAmount</name>
            <order>28</order>
            <started>14:06:35.329</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 28 [Setup : Set the recalculate] OK: took 0 ms
 -> Script-result:    Starting test case 1 - Minimum rebuildingCost for Two-family dwelling (2 units)</message>
            <name>Setup : Set the recalculate</name>
            <order>29</order>
            <started>14:06:35.365</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 2770 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>30</order>
            <started>14:06:35.366</started>
            <status>UNKNOWN</status>
            <timeTaken>2770</timeTaken>
          </result>
          <result>
            <message>Step 30 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>31</order>
            <started>14:06:38.144</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Then : Verify coverage single amount changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Single amount coverage value changed. It is now 132000.0, as expected for Two-family dwelling (2 units)</message>
            <name>Then : Verify coverage single amount changed</name>
            <order>32</order>
            <started>14:06:38.145</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [DataSource Loop : SingleAmount] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : SingleAmount</name>
            <order>33</order>
            <started>14:06:38.146</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Setup : Set the recalculate] OK: took 1 ms
 -> Script-result:    Starting test case 2 - Between the range rebuildingCost for Two-family dwelling (2 units)</message>
            <name>Setup : Set the recalculate</name>
            <order>34</order>
            <started>14:06:38.147</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 34 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 2932 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>35</order>
            <started>14:06:38.150</started>
            <status>UNKNOWN</status>
            <timeTaken>2932</timeTaken>
          </result>
          <result>
            <message>Step 35 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>36</order>
            <started>14:06:41.088</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Verify coverage single amount changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Single amount coverage value changed. It is now 1034550.0, as expected for Two-family dwelling (2 units)</message>
            <name>Then : Verify coverage single amount changed</name>
            <order>37</order>
            <started>14:06:41.088</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : SingleAmount] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SingleAmount</name>
            <order>38</order>
            <started>14:06:41.089</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the recalculate] OK: took 0 ms
 -> Script-result:    Starting test case 3 - Maximum rebuildingCost for Two-family dwelling (2 units)</message>
            <name>Setup : Set the recalculate</name>
            <order>39</order>
            <started>14:06:41.090</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Recalculate request and modified the rebuilding cost] UNKNOWN: took 3258 ms</message>
            <name>Given : I have send Recalculate request and modified the rebuilding cost</name>
            <order>40</order>
            <started>14:06:41.091</started>
            <status>UNKNOWN</status>
            <timeTaken>3258</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>41</order>
            <started>14:06:44.355</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Then : Verify coverage single amount changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Single amount coverage value changed. It is now 1648350.0, as expected for Two-family dwelling (2 units)</message>
            <name>Then : Verify coverage single amount changed</name>
            <order>42</order>
            <started>14:06:44.355</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [DataSource Loop : SingleAmount] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SingleAmount</name>
            <order>43</order>
            <started>14:06:44.356</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : numberOfParts] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : numberOfParts</name>
            <order>44</order>
            <started>14:06:44.357</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : numberOfParts</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : numberOfParts</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage single amount changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SingleAmount</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : numberOfParts</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:06:44</startTime>
        <status>FINISHED</status>
        <testCaseId>e0395683-8008-48be-9d1a-aa56bee857b3</testCaseId>
        <testCaseName>HO WaterDamage - Ground water</testCaseName>
        <timeTaken>30280</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : SewerBackupTerritories] OK: took 38 ms</message>
            <name>DataSource : SewerBackupTerritories</name>
            <order>2</order>
            <started>14:06:44.367</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:06:44.406</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2330 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:06:44.407</started>
            <status>UNKNOWN</status>
            <timeTaken>2330</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:06:46.742</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource : groundWater] OK: took 40 ms</message>
            <name>DataSource : groundWater</name>
            <order>6</order>
            <started>14:06:46.743</started>
            <status>OK</status>
            <timeTaken>40</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate] OK: took 2 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>7</order>
            <started>14:06:46.784</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3006 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>8</order>
            <started>14:06:46.787</started>
            <status>UNKNOWN</status>
            <timeTaken>3006</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:06:49.797</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify Ground water coverage is modified] OK: took 2 ms
 -> Script-result:    SUCCESS : For test case [ 1 - Minimum value ] : coverage code 0644C is modified and matching the expected value ( 10000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>10</order>
            <started>14:06:49.798</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 10 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : groundWater</name>
            <order>11</order>
            <started>14:06:49.802</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>12</order>
            <started>14:06:49.802</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3063 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>13</order>
            <started>14:06:49.803</started>
            <status>UNKNOWN</status>
            <timeTaken>3063</timeTaken>
          </result>
          <result>
            <message>Step 13 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>14</order>
            <started>14:06:52.872</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 2 - Maximum value ] : coverage code 0644C is modified and matching the expected value ( 60000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>15</order>
            <started>14:06:52.873</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : groundWater</name>
            <order>16</order>
            <started>14:06:52.874</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>17</order>
            <started>14:06:52.875</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3166 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>18</order>
            <started>14:06:52.876</started>
            <status>UNKNOWN</status>
            <timeTaken>3166</timeTaken>
          </result>
          <result>
            <message>Step 18 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>19</order>
            <started>14:06:56.048</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 3 - Invalid value ] : coverage code 0644C is modified and matching the expected value ( 20000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>20</order>
            <started>14:06:56.049</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : groundWater</name>
            <order>21</order>
            <started>14:06:56.050</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>22</order>
            <started>14:06:56.050</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 22 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3254 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>23</order>
            <started>14:06:56.052</started>
            <status>UNKNOWN</status>
            <timeTaken>3254</timeTaken>
          </result>
          <result>
            <message>Step 23 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>24</order>
            <started>14:06:59.311</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 4 - Not included value ] : coverage code 0644C is modified and matching the expected value ( null )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>25</order>
            <started>14:06:59.312</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : groundWater</name>
            <order>26</order>
            <started>14:06:59.313</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>27</order>
            <started>14:06:59.313</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>28</order>
            <started>14:06:59.314</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3086 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>29</order>
            <started>14:06:59.315</started>
            <status>UNKNOWN</status>
            <timeTaken>3086</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>30</order>
            <started>14:07:02.408</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [DataSource : groundWater] OK: took 35 ms</message>
            <name>DataSource : groundWater</name>
            <order>31</order>
            <started>14:07:02.408</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 31 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>32</order>
            <started>14:07:02.444</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2906 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>33</order>
            <started>14:07:02.446</started>
            <status>UNKNOWN</status>
            <timeTaken>2906</timeTaken>
          </result>
          <result>
            <message>Step 33 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>34</order>
            <started>14:07:05.357</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 1 - Minimum value ] : coverage code 0646 is modified and matching the expected value ( 10000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>35</order>
            <started>14:07:05.357</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : groundWater</name>
            <order>36</order>
            <started>14:07:05.358</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>37</order>
            <started>14:07:05.359</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3079 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>38</order>
            <started>14:07:05.360</started>
            <status>UNKNOWN</status>
            <timeTaken>3079</timeTaken>
          </result>
          <result>
            <message>Step 38 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>39</order>
            <started>14:07:08.444</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 2 - Maximum value ] : coverage code 0646 is modified and matching the expected value ( 60000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>40</order>
            <started>14:07:08.445</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : groundWater</name>
            <order>41</order>
            <started>14:07:08.445</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>42</order>
            <started>14:07:08.446</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3214 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>43</order>
            <started>14:07:08.447</started>
            <status>UNKNOWN</status>
            <timeTaken>3214</timeTaken>
          </result>
          <result>
            <message>Step 43 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>44</order>
            <started>14:07:11.667</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 3 - Invalid value ] : coverage code 0646 is modified and matching the expected value ( 20000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>45</order>
            <started>14:07:11.668</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : groundWater</name>
            <order>46</order>
            <started>14:07:11.668</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 46 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>47</order>
            <started>14:07:11.669</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 47 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3057 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>48</order>
            <started>14:07:11.671</started>
            <status>UNKNOWN</status>
            <timeTaken>3057</timeTaken>
          </result>
          <result>
            <message>Step 48 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>49</order>
            <started>14:07:14.734</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 4 - Not included value ] : coverage code 0646 is modified and matching the expected value ( null )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>50</order>
            <started>14:07:14.734</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : groundWater</name>
            <order>51</order>
            <started>14:07:14.735</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>52</order>
            <started>14:07:14.736</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:07:14</startTime>
        <status>FINISHED</status>
        <testCaseId>92d13254-9cc5-47f4-b97b-fd2d370937b9</testCaseId>
        <testCaseName>CO Contents</testCaseName>
        <timeTaken>9748</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:07:14.746</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2013 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:07:14.748</started>
            <status>UNKNOWN</status>
            <timeTaken>2013</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:07:16.766</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify coverage Content] OK: took 0 ms</message>
            <name>Then : Verify coverage Content</name>
            <order>5</order>
            <started>14:07:16.766</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource : Content] OK: took 33 ms</message>
            <name>DataSource : Content</name>
            <order>6</order>
            <started>14:07:16.768</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate] OK: took 2 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>7</order>
            <started>14:07:16.801</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2577 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>8</order>
            <started>14:07:16.804</started>
            <status>UNKNOWN</status>
            <timeTaken>2577</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:07:19.389</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Content value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Content value was modified to 20000.0</message>
            <name>Then : Verify coverage Content value changed</name>
            <order>10</order>
            <started>14:07:19.389</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [DataSource Loop : Content] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Content</name>
            <order>11</order>
            <started>14:07:19.391</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>12</order>
            <started>14:07:19.391</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2538 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>13</order>
            <started>14:07:19.393</started>
            <status>UNKNOWN</status>
            <timeTaken>2538</timeTaken>
          </result>
          <result>
            <message>Step 13 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>14</order>
            <started>14:07:21.936</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Then : Verify coverage Content value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Content value was modified to 70000.0</message>
            <name>Then : Verify coverage Content value changed</name>
            <order>15</order>
            <started>14:07:21.937</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [DataSource Loop : Content] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Content</name>
            <order>16</order>
            <started>14:07:21.937</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>17</order>
            <started>14:07:21.938</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 17 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2584 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>18</order>
            <started>14:07:21.940</started>
            <status>UNKNOWN</status>
            <timeTaken>2584</timeTaken>
          </result>
          <result>
            <message>Step 18 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>19</order>
            <started>14:07:24.530</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Then : Verify coverage Content value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Content value was modified to 100000.0</message>
            <name>Then : Verify coverage Content value changed</name>
            <order>20</order>
            <started>14:07:24.530</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [DataSource Loop : Content] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : Content</name>
            <order>21</order>
            <started>14:07:24.532</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Content</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:07:24</startTime>
        <status>FINISHED</status>
        <testCaseId>a25685bf-0776-4597-ba79-61b8628ad3b1</testCaseId>
        <testCaseName>CO WaterDamage - Ground water</testCaseName>
        <timeTaken>25613</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : SewerBackupTerritories] OK: took 39 ms</message>
            <name>DataSource : SewerBackupTerritories</name>
            <order>2</order>
            <started>14:07:24.542</started>
            <status>OK</status>
            <timeTaken>39</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:07:24.583</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2054 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:07:24.584</started>
            <status>UNKNOWN</status>
            <timeTaken>2054</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:07:26.645</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource : groundWater] OK: took 33 ms</message>
            <name>DataSource : groundWater</name>
            <order>6</order>
            <started>14:07:26.646</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate] OK: took 2 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>7</order>
            <started>14:07:26.679</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2447 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>8</order>
            <started>14:07:26.682</started>
            <status>UNKNOWN</status>
            <timeTaken>2447</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:07:29.136</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify Ground water coverage is modified] OK: took 2 ms
 -> Script-result:    SUCCESS : For test case [ 1 - Minimum value ] : coverage code 0644C is modified and matching the expected value ( 10000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>10</order>
            <started>14:07:29.137</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 10 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : groundWater</name>
            <order>11</order>
            <started>14:07:29.140</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>12</order>
            <started>14:07:29.141</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2525 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>13</order>
            <started>14:07:29.142</started>
            <status>UNKNOWN</status>
            <timeTaken>2525</timeTaken>
          </result>
          <result>
            <message>Step 13 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>14</order>
            <started>14:07:31.672</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 2 - Maximum value ] : coverage code 0644C is modified and matching the expected value ( 60000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>15</order>
            <started>14:07:31.673</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : groundWater</name>
            <order>16</order>
            <started>14:07:31.674</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>17</order>
            <started>14:07:31.675</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2711 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>18</order>
            <started>14:07:31.676</started>
            <status>UNKNOWN</status>
            <timeTaken>2711</timeTaken>
          </result>
          <result>
            <message>Step 18 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>19</order>
            <started>14:07:34.394</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 3 - Invalid value ] : coverage code 0644C is modified and matching the expected value ( null )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>20</order>
            <started>14:07:34.395</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : groundWater</name>
            <order>21</order>
            <started>14:07:34.396</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>22</order>
            <started>14:07:34.396</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2540 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>23</order>
            <started>14:07:34.398</started>
            <status>UNKNOWN</status>
            <timeTaken>2540</timeTaken>
          </result>
          <result>
            <message>Step 23 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>24</order>
            <started>14:07:36.943</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 4 - Not included value ] : coverage code 0644C is modified and matching the expected value ( null )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>25</order>
            <started>14:07:36.944</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : groundWater</name>
            <order>26</order>
            <started>14:07:36.944</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>27</order>
            <started>14:07:36.945</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>28</order>
            <started>14:07:36.946</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1883 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>29</order>
            <started>14:07:36.947</started>
            <status>UNKNOWN</status>
            <timeTaken>1883</timeTaken>
          </result>
          <result>
            <message>Step 29 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>30</order>
            <started>14:07:38.836</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [DataSource : groundWater] OK: took 57 ms</message>
            <name>DataSource : groundWater</name>
            <order>31</order>
            <started>14:07:38.837</started>
            <status>OK</status>
            <timeTaken>57</timeTaken>
          </result>
          <result>
            <message>Step 31 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>32</order>
            <started>14:07:38.895</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 32 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2433 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>33</order>
            <started>14:07:38.897</started>
            <status>UNKNOWN</status>
            <timeTaken>2433</timeTaken>
          </result>
          <result>
            <message>Step 33 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>34</order>
            <started>14:07:41.337</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 1 - Minimum value ] : coverage code 0646 is modified and matching the expected value ( 10000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>35</order>
            <started>14:07:41.338</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : groundWater</name>
            <order>36</order>
            <started>14:07:41.339</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>37</order>
            <started>14:07:41.339</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2670 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>38</order>
            <started>14:07:41.341</started>
            <status>UNKNOWN</status>
            <timeTaken>2670</timeTaken>
          </result>
          <result>
            <message>Step 38 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>39</order>
            <started>14:07:44.016</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 2 - Maximum value ] : coverage code 0646 is modified and matching the expected value ( 60000 )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>40</order>
            <started>14:07:44.017</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : groundWater</name>
            <order>41</order>
            <started>14:07:44.018</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>42</order>
            <started>14:07:44.018</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 2625 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>43</order>
            <started>14:07:44.020</started>
            <status>UNKNOWN</status>
            <timeTaken>2625</timeTaken>
          </result>
          <result>
            <message>Step 43 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>44</order>
            <started>14:07:46.650</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 3 - Invalid value ] : coverage code 0646 is modified and matching the expected value ( null )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>45</order>
            <started>14:07:46.651</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : groundWater</name>
            <order>46</order>
            <started>14:07:46.652</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 46 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>47</order>
            <started>14:07:46.653</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Given : I have send Recalculate request and modified the groundWater value] UNKNOWN: took 3591 ms</message>
            <name>Given : I have send Recalculate request and modified the groundWater value</name>
            <order>48</order>
            <started>14:07:46.654</started>
            <status>UNKNOWN</status>
            <timeTaken>3591</timeTaken>
          </result>
          <result>
            <message>Step 48 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>49</order>
            <started>14:07:50.251</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [Then : Verify Ground water coverage is modified] OK: took 0 ms
 -> Script-result:    SUCCESS : For test case [ 4 - Not included value ] : coverage code 0646 is modified and matching the expected value ( null )</message>
            <name>Then : Verify Ground water coverage is modified</name>
            <order>50</order>
            <started>14:07:50.252</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [DataSource Loop : groundWater] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : groundWater</name>
            <order>51</order>
            <started>14:07:50.252</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [DataSource Loop : SewerBackupTerritories] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : SewerBackupTerritories</name>
            <order>52</order>
            <started>14:07:50.253</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the groundWater value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify Ground water coverage is modified</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : groundWater</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : SewerBackupTerritories</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:07:50</startTime>
        <status>FINISHED</status>
        <testCaseId>be69df24-c0f1-4be1-bde2-a6d554febca6</testCaseId>
        <testCaseName>TE Contents</testCaseName>
        <timeTaken>12214</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:07:50.263</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3274 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:07:50.265</started>
            <status>UNKNOWN</status>
            <timeTaken>3274</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:07:53.545</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify coverage Content] OK: took 0 ms</message>
            <name>Then : Verify coverage Content</name>
            <order>5</order>
            <started>14:07:53.546</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource : Content] OK: took 41 ms</message>
            <name>DataSource : Content</name>
            <order>6</order>
            <started>14:07:53.547</started>
            <status>OK</status>
            <timeTaken>41</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the recalculate] OK: took 2 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>7</order>
            <started>14:07:53.589</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 3426 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>8</order>
            <started>14:07:53.593</started>
            <status>UNKNOWN</status>
            <timeTaken>3426</timeTaken>
          </result>
          <result>
            <message>Step 8 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>9</order>
            <started>14:07:57.025</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Then : Verify coverage Content value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Content value was modified to 20000.0</message>
            <name>Then : Verify coverage Content value changed</name>
            <order>10</order>
            <started>14:07:57.026</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [DataSource Loop : Content] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Content</name>
            <order>11</order>
            <started>14:07:57.027</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>12</order>
            <started>14:07:57.028</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2467 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>13</order>
            <started>14:07:57.029</started>
            <status>UNKNOWN</status>
            <timeTaken>2467</timeTaken>
          </result>
          <result>
            <message>Step 13 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>14</order>
            <started>14:07:59.501</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Then : Verify coverage Content value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Content value was modified to 50000.0</message>
            <name>Then : Verify coverage Content value changed</name>
            <order>15</order>
            <started>14:07:59.502</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [DataSource Loop : Content] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Content</name>
            <order>16</order>
            <started>14:07:59.503</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>17</order>
            <started>14:07:59.504</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 3004 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>18</order>
            <started>14:07:59.505</started>
            <status>UNKNOWN</status>
            <timeTaken>3004</timeTaken>
          </result>
          <result>
            <message>Step 18 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>19</order>
            <started>14:08:02.514</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Then : Verify coverage Content value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : RECALCULATE : Content value was modified to 70000.0</message>
            <name>Then : Verify coverage Content value changed</name>
            <order>20</order>
            <started>14:08:02.515</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [DataSource Loop : Content] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : Content</name>
            <order>21</order>
            <started>14:08:02.516</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Content</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Content value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Content</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:08:02</startTime>
        <status>FINISHED</status>
        <testCaseId>f32c6f17-1d78-493b-8b7c-d1b2b6f46723</testCaseId>
        <testCaseName>CO/TE Water Damage - Above ground</testCaseName>
        <timeTaken>15014</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 33 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:08:02.527</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:08:02.561</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1971 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:08:02.562</started>
            <status>UNKNOWN</status>
            <timeTaken>1971</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:08:04.539</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify coverage Water damage above ground] OK: took 0 ms</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>6</order>
            <started>14:08:04.540</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource : WaterDamage] OK: took 36 ms</message>
            <name>DataSource : WaterDamage</name>
            <order>7</order>
            <started>14:08:04.541</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate] OK: took 2 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>8</order>
            <started>14:08:04.579</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2694 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>9</order>
            <started>14:08:04.582</started>
            <status>UNKNOWN</status>
            <timeTaken>2694</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:08:07.282</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage WaterDamage above ground value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage value was changed to true</message>
            <name>Then : Verify coverage WaterDamage above ground value changed</name>
            <order>11</order>
            <started>14:08:07.282</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : WaterDamage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : WaterDamage</name>
            <order>12</order>
            <started>14:08:07.284</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>13</order>
            <started>14:08:07.284</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2954 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>14</order>
            <started>14:08:07.285</started>
            <status>UNKNOWN</status>
            <timeTaken>2954</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:08:10.246</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverage WaterDamage above ground value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage value was changed to false</message>
            <name>Then : Verify coverage WaterDamage above ground value changed</name>
            <order>16</order>
            <started>14:08:10.247</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : WaterDamage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : WaterDamage</name>
            <order>17</order>
            <started>14:08:10.248</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>18</order>
            <started>14:08:10.248</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:08:10.249</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2165 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:08:10.250</started>
            <status>UNKNOWN</status>
            <timeTaken>2165</timeTaken>
          </result>
          <result>
            <message>Step 20 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>21</order>
            <started>14:08:12.488</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Then : Verify coverage Water damage above ground] OK: took 0 ms</message>
            <name>Then : Verify coverage Water damage above ground</name>
            <order>22</order>
            <started>14:08:12.489</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [DataSource : WaterDamage] OK: took 36 ms</message>
            <name>DataSource : WaterDamage</name>
            <order>23</order>
            <started>14:08:12.490</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 23 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>24</order>
            <started>14:08:12.527</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2336 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>25</order>
            <started>14:08:12.528</started>
            <status>UNKNOWN</status>
            <timeTaken>2336</timeTaken>
          </result>
          <result>
            <message>Step 25 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>26</order>
            <started>14:08:14.870</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify coverage WaterDamage above ground value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage value was changed to true</message>
            <name>Then : Verify coverage WaterDamage above ground value changed</name>
            <order>27</order>
            <started>14:08:14.871</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [DataSource Loop : WaterDamage] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : WaterDamage</name>
            <order>28</order>
            <started>14:08:14.871</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>29</order>
            <started>14:08:14.872</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Given : I have send Recalculate request and modified the content value] UNKNOWN: took 2787 ms</message>
            <name>Given : I have send Recalculate request and modified the content value</name>
            <order>30</order>
            <started>14:08:14.873</started>
            <status>UNKNOWN</status>
            <timeTaken>2787</timeTaken>
          </result>
          <result>
            <message>Step 30 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>31</order>
            <started>14:08:17.665</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Then : Verify coverage WaterDamage above ground value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Water Damage Above Ground coverage value was changed to false</message>
            <name>Then : Verify coverage WaterDamage above ground value changed</name>
            <order>32</order>
            <started>14:08:17.666</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [DataSource Loop : WaterDamage] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : WaterDamage</name>
            <order>33</order>
            <started>14:08:17.667</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>34</order>
            <started>14:08:17.668</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : WaterDamage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage WaterDamage above ground value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterDamage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage WaterDamage above ground value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterDamage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage Water damage above ground</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : WaterDamage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage WaterDamage above ground value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterDamage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the content value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage WaterDamage above ground value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : WaterDamage</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:08:17</startTime>
        <status>FINISHED</status>
        <testCaseId>26eece58-beec-4e0c-8f87-81e3109cc905</testCaseId>
        <testCaseName>HO/CO/TE High protect duo</testCaseName>
        <timeTaken>25465</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 36 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:08:17.680</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:08:17.717</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3569 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:08:17.718</started>
            <status>UNKNOWN</status>
            <timeTaken>3569</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:08:21.293</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify coverage High Protect Duo] OK: took 0 ms</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>6</order>
            <started>14:08:21.294</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource : highProtectDuo] OK: took 33 ms</message>
            <name>DataSource : highProtectDuo</name>
            <order>7</order>
            <started>14:08:21.295</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>8</order>
            <started>14:08:21.329</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and modified the highProtectDuo value] UNKNOWN: took 2981 ms</message>
            <name>Given : I have send Recalculate request and modified the highProtectDuo value</name>
            <order>9</order>
            <started>14:08:21.331</started>
            <status>UNKNOWN</status>
            <timeTaken>2981</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:08:24.440</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage High Protect Duo value changed] OK: took 1 ms
 -> Script-result:    SUCCESS : High protect duo coverage value was changed to true</message>
            <name>Then : Verify coverage High Protect Duo value changed</name>
            <order>11</order>
            <started>14:08:24.442</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : highProtectDuo] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : highProtectDuo</name>
            <order>12</order>
            <started>14:08:24.444</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>13</order>
            <started>14:08:24.445</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and modified the highProtectDuo value] UNKNOWN: took 3396 ms</message>
            <name>Given : I have send Recalculate request and modified the highProtectDuo value</name>
            <order>14</order>
            <started>14:08:24.446</started>
            <status>UNKNOWN</status>
            <timeTaken>3396</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:08:27.848</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverage High Protect Duo value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : High protect duo coverage value was changed to false</message>
            <name>Then : Verify coverage High Protect Duo value changed</name>
            <order>16</order>
            <started>14:08:27.849</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : highProtectDuo] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : highProtectDuo</name>
            <order>17</order>
            <started>14:08:27.850</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>18</order>
            <started>14:08:27.851</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:08:27.851</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2016 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:08:27.852</started>
            <status>UNKNOWN</status>
            <timeTaken>2016</timeTaken>
          </result>
          <result>
            <message>Step 20 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>21</order>
            <started>14:08:29.893</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Then : Verify coverage High Protect Duo] OK: took 0 ms</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>22</order>
            <started>14:08:29.894</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [DataSource : highProtectDuo] OK: took 33 ms</message>
            <name>DataSource : highProtectDuo</name>
            <order>23</order>
            <started>14:08:29.895</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 23 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>24</order>
            <started>14:08:29.929</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Given : I have send Recalculate request and modified the highProtectDuo value] UNKNOWN: took 3053 ms</message>
            <name>Given : I have send Recalculate request and modified the highProtectDuo value</name>
            <order>25</order>
            <started>14:08:29.931</started>
            <status>UNKNOWN</status>
            <timeTaken>3053</timeTaken>
          </result>
          <result>
            <message>Step 25 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>26</order>
            <started>14:08:32.989</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify coverage High Protect Duo value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : High protect duo coverage value was changed to true</message>
            <name>Then : Verify coverage High Protect Duo value changed</name>
            <order>27</order>
            <started>14:08:32.990</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [DataSource Loop : highProtectDuo] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : highProtectDuo</name>
            <order>28</order>
            <started>14:08:32.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>29</order>
            <started>14:08:32.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Given : I have send Recalculate request and modified the highProtectDuo value] UNKNOWN: took 3255 ms</message>
            <name>Given : I have send Recalculate request and modified the highProtectDuo value</name>
            <order>30</order>
            <started>14:08:32.993</started>
            <status>UNKNOWN</status>
            <timeTaken>3255</timeTaken>
          </result>
          <result>
            <message>Step 30 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>31</order>
            <started>14:08:36.254</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Then : Verify coverage High Protect Duo value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : High protect duo coverage value was changed to false</message>
            <name>Then : Verify coverage High Protect Duo value changed</name>
            <order>32</order>
            <started>14:08:36.255</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [DataSource Loop : highProtectDuo] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : highProtectDuo</name>
            <order>33</order>
            <started>14:08:36.255</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>34</order>
            <started>14:08:36.256</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>35</order>
            <started>14:08:36.256</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2071 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>36</order>
            <started>14:08:36.257</started>
            <status>UNKNOWN</status>
            <timeTaken>2071</timeTaken>
          </result>
          <result>
            <message>Step 36 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>37</order>
            <started>14:08:38.334</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Then : Verify coverage High Protect Duo] OK: took 0 ms</message>
            <name>Then : Verify coverage High Protect Duo</name>
            <order>38</order>
            <started>14:08:38.335</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [DataSource : highProtectDuo] OK: took 33 ms</message>
            <name>DataSource : highProtectDuo</name>
            <order>39</order>
            <started>14:08:38.335</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 39 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>40</order>
            <started>14:08:38.369</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [Given : I have send Recalculate request and modified the highProtectDuo value] UNKNOWN: took 2541 ms</message>
            <name>Given : I have send Recalculate request and modified the highProtectDuo value</name>
            <order>41</order>
            <started>14:08:38.370</started>
            <status>UNKNOWN</status>
            <timeTaken>2541</timeTaken>
          </result>
          <result>
            <message>Step 41 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>42</order>
            <started>14:08:40.916</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Verify coverage High Protect Duo value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : High protect duo coverage value was changed to true</message>
            <name>Then : Verify coverage High Protect Duo value changed</name>
            <order>43</order>
            <started>14:08:40.917</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : highProtectDuo] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : highProtectDuo</name>
            <order>44</order>
            <started>14:08:40.918</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>45</order>
            <started>14:08:40.918</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Given : I have send Recalculate request and modified the highProtectDuo value] UNKNOWN: took 2446 ms</message>
            <name>Given : I have send Recalculate request and modified the highProtectDuo value</name>
            <order>46</order>
            <started>14:08:40.919</started>
            <status>UNKNOWN</status>
            <timeTaken>2446</timeTaken>
          </result>
          <result>
            <message>Step 46 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>47</order>
            <started>14:08:43.370</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Then : Verify coverage High Protect Duo value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : High protect duo coverage value was changed to false</message>
            <name>Then : Verify coverage High Protect Duo value changed</name>
            <order>48</order>
            <started>14:08:43.371</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [DataSource Loop : highProtectDuo] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : highProtectDuo</name>
            <order>49</order>
            <started>14:08:43.372</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>50</order>
            <started>14:08:43.372</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the highProtectDuo value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the highProtectDuo value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the highProtectDuo value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the highProtectDuo value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the highProtectDuo value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the highProtectDuo value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage High Protect Duo value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : highProtectDuo</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:08:43</startTime>
        <status>FINISHED</status>
        <testCaseId>ed1b005d-0d0b-4170-ab87-1ea14dde1ff7</testCaseId>
        <testCaseName>HO/CO/TE Fire explosion and smoke ensuing from an earthquake</testCaseName>
        <timeTaken>23647</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RiskType] OK: took 35 ms</message>
            <name>DataSource : RiskType</name>
            <order>2</order>
            <started>14:08:43.383</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:08:43.419</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2423 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:08:43.420</started>
            <status>UNKNOWN</status>
            <timeTaken>2423</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:08:45.848</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Verify coverage Fire explosion and smoke] OK: took 0 ms</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>6</order>
            <started>14:08:45.849</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [DataSource : fireExplosionSmoke] OK: took 33 ms</message>
            <name>DataSource : fireExplosionSmoke</name>
            <order>7</order>
            <started>14:08:45.850</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 7 [Setup : Set the recalculate] OK: took 1 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>8</order>
            <started>14:08:45.885</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 8 [Given : I have send Recalculate request and modified the fireExplosionSmoke value] UNKNOWN: took 3237 ms</message>
            <name>Given : I have send Recalculate request and modified the fireExplosionSmoke value</name>
            <order>9</order>
            <started>14:08:45.887</started>
            <status>UNKNOWN</status>
            <timeTaken>3237</timeTaken>
          </result>
          <result>
            <message>Step 9 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>10</order>
            <started>14:08:49.131</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Then : Verify coverage fireExplosionSmoke value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage value was changed to true</message>
            <name>Then : Verify coverage fireExplosionSmoke value changed</name>
            <order>11</order>
            <started>14:08:49.131</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [DataSource Loop : fireExplosionSmoke] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : fireExplosionSmoke</name>
            <order>12</order>
            <started>14:08:49.133</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>13</order>
            <started>14:08:49.133</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [Given : I have send Recalculate request and modified the fireExplosionSmoke value] UNKNOWN: took 2905 ms</message>
            <name>Given : I have send Recalculate request and modified the fireExplosionSmoke value</name>
            <order>14</order>
            <started>14:08:49.135</started>
            <status>UNKNOWN</status>
            <timeTaken>2905</timeTaken>
          </result>
          <result>
            <message>Step 14 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>15</order>
            <started>14:08:52.045</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Then : Verify coverage fireExplosionSmoke value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage value was changed to false</message>
            <name>Then : Verify coverage fireExplosionSmoke value changed</name>
            <order>16</order>
            <started>14:08:52.045</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 16 [DataSource Loop : fireExplosionSmoke] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : fireExplosionSmoke</name>
            <order>17</order>
            <started>14:08:52.046</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : RiskType</name>
            <order>18</order>
            <started>14:08:52.047</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:08:52.048</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1817 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:08:52.048</started>
            <status>UNKNOWN</status>
            <timeTaken>1817</timeTaken>
          </result>
          <result>
            <message>Step 20 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>21</order>
            <started>14:08:53.872</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Verify coverage Fire explosion and smoke] OK: took 0 ms</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>22</order>
            <started>14:08:53.872</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [DataSource : fireExplosionSmoke] OK: took 32 ms</message>
            <name>DataSource : fireExplosionSmoke</name>
            <order>23</order>
            <started>14:08:53.873</started>
            <status>OK</status>
            <timeTaken>32</timeTaken>
          </result>
          <result>
            <message>Step 23 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>24</order>
            <started>14:08:53.907</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Given : I have send Recalculate request and modified the fireExplosionSmoke value] UNKNOWN: took 3609 ms</message>
            <name>Given : I have send Recalculate request and modified the fireExplosionSmoke value</name>
            <order>25</order>
            <started>14:08:53.908</started>
            <status>UNKNOWN</status>
            <timeTaken>3609</timeTaken>
          </result>
          <result>
            <message>Step 25 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>26</order>
            <started>14:08:57.523</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Then : Verify coverage fireExplosionSmoke value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage value was changed to true</message>
            <name>Then : Verify coverage fireExplosionSmoke value changed</name>
            <order>27</order>
            <started>14:08:57.524</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [DataSource Loop : fireExplosionSmoke] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : fireExplosionSmoke</name>
            <order>28</order>
            <started>14:08:57.524</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 28 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>29</order>
            <started>14:08:57.525</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Given : I have send Recalculate request and modified the fireExplosionSmoke value] UNKNOWN: took 2275 ms</message>
            <name>Given : I have send Recalculate request and modified the fireExplosionSmoke value</name>
            <order>30</order>
            <started>14:08:57.526</started>
            <status>UNKNOWN</status>
            <timeTaken>2275</timeTaken>
          </result>
          <result>
            <message>Step 30 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>31</order>
            <started>14:08:59.807</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [Then : Verify coverage fireExplosionSmoke value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage value was changed to false</message>
            <name>Then : Verify coverage fireExplosionSmoke value changed</name>
            <order>32</order>
            <started>14:08:59.807</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [DataSource Loop : fireExplosionSmoke] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : fireExplosionSmoke</name>
            <order>33</order>
            <started>14:08:59.808</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : RiskType</name>
            <order>34</order>
            <started>14:08:59.809</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 34 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>35</order>
            <started>14:08:59.809</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2397 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>36</order>
            <started>14:08:59.810</started>
            <status>UNKNOWN</status>
            <timeTaken>2397</timeTaken>
          </result>
          <result>
            <message>Step 36 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>37</order>
            <started>14:09:02.213</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [Verify coverage Fire explosion and smoke] OK: took 0 ms</message>
            <name>Verify coverage Fire explosion and smoke</name>
            <order>38</order>
            <started>14:09:02.214</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [DataSource : fireExplosionSmoke] OK: took 33 ms</message>
            <name>DataSource : fireExplosionSmoke</name>
            <order>39</order>
            <started>14:09:02.215</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 39 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>40</order>
            <started>14:09:02.249</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 40 [Given : I have send Recalculate request and modified the fireExplosionSmoke value] UNKNOWN: took 2293 ms</message>
            <name>Given : I have send Recalculate request and modified the fireExplosionSmoke value</name>
            <order>41</order>
            <started>14:09:02.250</started>
            <status>UNKNOWN</status>
            <timeTaken>2293</timeTaken>
          </result>
          <result>
            <message>Step 41 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>42</order>
            <started>14:09:04.549</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Verify coverage fireExplosionSmoke value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage value was changed to true</message>
            <name>Then : Verify coverage fireExplosionSmoke value changed</name>
            <order>43</order>
            <started>14:09:04.550</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : fireExplosionSmoke] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : fireExplosionSmoke</name>
            <order>44</order>
            <started>14:09:04.551</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Setup : Set the recalculate] OK: took 0 ms</message>
            <name>Setup : Set the recalculate</name>
            <order>45</order>
            <started>14:09:04.552</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Given : I have send Recalculate request and modified the fireExplosionSmoke value] UNKNOWN: took 2557 ms</message>
            <name>Given : I have send Recalculate request and modified the fireExplosionSmoke value</name>
            <order>46</order>
            <started>14:09:04.554</started>
            <status>UNKNOWN</status>
            <timeTaken>2557</timeTaken>
          </result>
          <result>
            <message>Step 46 [When : Verify that Http status is OK for the recalculate] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK for the recalculate</name>
            <order>47</order>
            <started>14:09:07.116</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Then : Verify coverage fireExplosionSmoke value changed] OK: took 0 ms
 -> Script-result:    SUCCESS : Fire, explosion and smoke ensuing from an earthquake coverage value was changed to false</message>
            <name>Then : Verify coverage fireExplosionSmoke value changed</name>
            <order>48</order>
            <started>14:09:07.117</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [DataSource Loop : fireExplosionSmoke] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : fireExplosionSmoke</name>
            <order>49</order>
            <started>14:09:07.117</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : RiskType] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : RiskType</name>
            <order>50</order>
            <started>14:09:07.118</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the fireExplosionSmoke value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage fireExplosionSmoke value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the fireExplosionSmoke value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage fireExplosionSmoke value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the fireExplosionSmoke value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage fireExplosionSmoke value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the fireExplosionSmoke value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage fireExplosionSmoke value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Verify coverage Fire explosion and smoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the fireExplosionSmoke value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage fireExplosionSmoke value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request and modified the fireExplosionSmoke value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK for the recalculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify coverage fireExplosionSmoke value changed</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : fireExplosionSmoke</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : RiskType</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:09:07</startTime>
    <status>FINISHED</status>
    <testSuiteName>Roadblocks negations</testSuiteName>
    <timeTaken>5447</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:09:07</startTime>
        <status>FINISHED</status>
        <testCaseId>5b359b6a-63a5-47e9-ae67-d84883b92508</testCaseId>
        <testCaseName>HO No RoadBlock : Rebuilding cost and No fire hydrant</testCaseName>
        <timeTaken>5417</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RebuildingCost Data] OK: took 33 ms</message>
            <name>DataSource : RebuildingCost Data</name>
            <order>2</order>
            <started>14:09:07.137</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 2 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:07.172</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 2586 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:09:07.175</started>
            <status>OK</status>
            <timeTaken>2586</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:09:09.768</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Setup : Set the recalculate request] OK: took 1 ms</message>
            <name>Setup : Set the recalculate request</name>
            <order>6</order>
            <started>14:09:09.769</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 6 [Given : I have send Recalculate request with No fireHydrantProtected] UNKNOWN: took 2795 ms</message>
            <name>Given : I have send Recalculate request with No fireHydrantProtected</name>
            <order>7</order>
            <started>14:09:09.771</started>
            <status>UNKNOWN</status>
            <timeTaken>2795</timeTaken>
          </result>
          <result>
            <message>Step 7 [When : Verify that Http status is OK with no roadblock] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK with no roadblock</name>
            <order>8</order>
            <started>14:09:12.571</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Then : Verify that we dont hit a roadblock] OK: took 0 ms
 -> Script-result:    SUCCESS : No Roadblock were trigger ( reconstructionCostInDollars is 599000 and fireHydrantProtected is false ).</message>
            <name>Then : Verify that we dont hit a roadblock</name>
            <order>9</order>
            <started>14:09:12.572</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RebuildingCost Data</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the recalculate request</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Recalculate request with No fireHydrantProtected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK with no roadblock</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we dont hit a roadblock</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:09:12</startTime>
    <status>FINISHED</status>
    <testSuiteName>Consent</testSuiteName>
    <timeTaken>39978</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:09:12</startTime>
        <status>FINISHED</status>
        <testCaseId>501dcdf4-8e54-41e4-8c0c-8254ce25be80</testCaseId>
        <testCaseName>HO Calculate consents with hit</testCaseName>
        <timeTaken>9501</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Consents] OK: took 34 ms</message>
            <name>DataSource : Consents</name>
            <order>2</order>
            <started>14:09:12.593</started>
            <status>OK</status>
            <timeTaken>34</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:12.628</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2378 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:09:12.630</started>
            <status>UNKNOWN</status>
            <timeTaken>2378</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>5</order>
            <started>14:09:15.014</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:15.014</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate consents values] OK: took 1 ms
 -> Script-result: CS Value ( true ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>7</order>
            <started>14:09:15.015</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Consents</name>
            <order>8</order>
            <started>14:09:15.017</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:15.018</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2272 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:09:15.019</started>
            <status>UNKNOWN</status>
            <timeTaken>2272</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>11</order>
            <started>14:09:17.297</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:17.297</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( true ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>13</order>
            <started>14:09:17.298</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Consents</name>
            <order>14</order>
            <started>14:09:17.298</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:09:17.299</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2257 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:09:17.300</started>
            <status>UNKNOWN</status>
            <timeTaken>2257</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>17</order>
            <started>14:09:19.564</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:09:19.565</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( false ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>19</order>
            <started>14:09:19.566</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : Consents</name>
            <order>20</order>
            <started>14:09:19.567</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:09:19.567</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2558 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:09:19.568</started>
            <status>UNKNOWN</status>
            <timeTaken>2558</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>23</order>
            <started>14:09:22.132</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:09:22.132</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( false ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>25</order>
            <started>14:09:22.133</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : Consents</name>
            <order>26</order>
            <started>14:09:22.134</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:09:22</startTime>
        <status>FINISHED</status>
        <testCaseId>997b4072-2e70-4ecb-8744-43c8b90b7c05</testCaseId>
        <testCaseName>HO Calculate consents with no hit</testCaseName>
        <timeTaken>4981</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Consents] OK: took 109 ms</message>
            <name>DataSource : Consents</name>
            <order>2</order>
            <started>14:09:22.147</started>
            <status>OK</status>
            <timeTaken>109</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:22.257</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price NoHit] UNKNOWN: took 2833 ms</message>
            <name>Given : I have send Calculate request to get a price NoHit</name>
            <order>4</order>
            <started>14:09:22.259</started>
            <status>UNKNOWN</status>
            <timeTaken>2833</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>5</order>
            <started>14:09:25.097</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:25.098</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate consents values] OK: took 1 ms
 -> Script-result: CS Value ( true ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>7</order>
            <started>14:09:25.099</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Consents</name>
            <order>8</order>
            <started>14:09:25.101</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:25.101</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price NoHit] UNKNOWN: took 2037 ms</message>
            <name>Given : I have send Calculate request to get a price NoHit</name>
            <order>10</order>
            <started>14:09:25.102</started>
            <status>UNKNOWN</status>
            <timeTaken>2037</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>11</order>
            <started>14:09:27.144</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:27.144</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( true ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>13</order>
            <started>14:09:27.145</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Consents</name>
            <order>14</order>
            <started>14:09:27.145</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price NoHit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price NoHit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:09:27</startTime>
        <status>FINISHED</status>
        <testCaseId>0180f8c3-3288-4bec-b230-a99fad30ec49</testCaseId>
        <testCaseName>CO Calculate consents with hit</testCaseName>
        <timeTaken>8221</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Consents] OK: took 37 ms</message>
            <name>DataSource : Consents</name>
            <order>2</order>
            <started>14:09:27.158</started>
            <status>OK</status>
            <timeTaken>37</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:27.197</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1970 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:09:27.199</started>
            <status>UNKNOWN</status>
            <timeTaken>1970</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>5</order>
            <started>14:09:29.176</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:29.177</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate consents values] OK: took 1 ms
 -> Script-result: CS Value ( true ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>7</order>
            <started>14:09:29.177</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Consents</name>
            <order>8</order>
            <started>14:09:29.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:29.180</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1966 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:09:29.181</started>
            <status>UNKNOWN</status>
            <timeTaken>1966</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>11</order>
            <started>14:09:31.152</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:31.153</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( true ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>13</order>
            <started>14:09:31.153</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Consents</name>
            <order>14</order>
            <started>14:09:31.154</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:09:31.155</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1812 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:09:31.156</started>
            <status>UNKNOWN</status>
            <timeTaken>1812</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>17</order>
            <started>14:09:32.974</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:09:32.975</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( false ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>19</order>
            <started>14:09:32.975</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : Consents</name>
            <order>20</order>
            <started>14:09:32.976</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:09:32.976</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2434 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:09:32.977</started>
            <status>UNKNOWN</status>
            <timeTaken>2434</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>23</order>
            <started>14:09:35.418</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:09:35.418</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( false ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>25</order>
            <started>14:09:35.419</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : Consents</name>
            <order>26</order>
            <started>14:09:35.419</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:09:35</startTime>
        <status>FINISHED</status>
        <testCaseId>179f12db-329d-46ce-9461-9af175422b02</testCaseId>
        <testCaseName>CO Calculate consents with no hit</testCaseName>
        <timeTaken>4569</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Consents] OK: took 33 ms</message>
            <name>DataSource : Consents</name>
            <order>2</order>
            <started>14:09:35.432</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:35.466</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price NoHit] UNKNOWN: took 2732 ms</message>
            <name>Given : I have send Calculate request to get a price NoHit</name>
            <order>4</order>
            <started>14:09:35.468</started>
            <status>UNKNOWN</status>
            <timeTaken>2732</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>5</order>
            <started>14:09:38.204</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:38.205</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate consents values] OK: took 1 ms
 -> Script-result: CS Value ( true ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>7</order>
            <started>14:09:38.205</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Consents</name>
            <order>8</order>
            <started>14:09:38.207</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:38.208</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price NoHit] UNKNOWN: took 1802 ms</message>
            <name>Given : I have send Calculate request to get a price NoHit</name>
            <order>10</order>
            <started>14:09:38.208</started>
            <status>UNKNOWN</status>
            <timeTaken>1802</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>11</order>
            <started>14:09:40.015</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:40.016</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( true ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>13</order>
            <started>14:09:40.016</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Consents</name>
            <order>14</order>
            <started>14:09:40.017</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price NoHit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price NoHit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:09:40</startTime>
        <status>FINISHED</status>
        <testCaseId>5b9eb83f-d2eb-4a82-b5dd-b73efc6c58d8</testCaseId>
        <testCaseName>TE Calculate consents with hit</testCaseName>
        <timeTaken>8861</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Consents] OK: took 32 ms</message>
            <name>DataSource : Consents</name>
            <order>2</order>
            <started>14:09:40.028</started>
            <status>OK</status>
            <timeTaken>32</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:40.062</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2480 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:09:40.064</started>
            <status>UNKNOWN</status>
            <timeTaken>2480</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>5</order>
            <started>14:09:42.549</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:42.550</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate consents values] OK: took 1 ms
 -> Script-result: CS Value ( true ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>7</order>
            <started>14:09:42.550</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Consents</name>
            <order>8</order>
            <started>14:09:42.552</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:42.553</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1855 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:09:42.554</started>
            <status>UNKNOWN</status>
            <timeTaken>1855</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>11</order>
            <started>14:09:44.414</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:44.415</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( true ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>13</order>
            <started>14:09:44.415</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Consents</name>
            <order>14</order>
            <started>14:09:44.416</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:09:44.417</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2712 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:09:44.417</started>
            <status>UNKNOWN</status>
            <timeTaken>2712</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>17</order>
            <started>14:09:47.134</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:09:47.135</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( false ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>19</order>
            <started>14:09:47.135</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : Consents</name>
            <order>20</order>
            <started>14:09:47.136</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:09:47.136</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1780 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:09:47.137</started>
            <status>UNKNOWN</status>
            <timeTaken>1780</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>23</order>
            <started>14:09:48.923</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:09:48.924</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( false ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>25</order>
            <started>14:09:48.924</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : Consents</name>
            <order>26</order>
            <started>14:09:48.925</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:09:48</startTime>
        <status>FINISHED</status>
        <testCaseId>7ce4f2e6-9e46-429a-872e-139e20e0417d</testCaseId>
        <testCaseName>TE Calculate consents with no hit</testCaseName>
        <timeTaken>3605</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Consents] OK: took 32 ms</message>
            <name>DataSource : Consents</name>
            <order>2</order>
            <started>14:09:48.936</started>
            <status>OK</status>
            <timeTaken>32</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:48.970</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price NoHit] UNKNOWN: took 1928 ms</message>
            <name>Given : I have send Calculate request to get a price NoHit</name>
            <order>4</order>
            <started>14:09:48.972</started>
            <status>UNKNOWN</status>
            <timeTaken>1928</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>5</order>
            <started>14:09:50.904</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:50.905</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate consents values] OK: took 1 ms
 -> Script-result: CS Value ( true ) and DV Value ( true ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>7</order>
            <started>14:09:50.905</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Consents</name>
            <order>8</order>
            <started>14:09:50.907</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:50.908</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price NoHit] UNKNOWN: took 1643 ms</message>
            <name>Given : I have send Calculate request to get a price NoHit</name>
            <order>10</order>
            <started>14:09:50.908</started>
            <status>UNKNOWN</status>
            <timeTaken>1643</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors</name>
            <order>11</order>
            <started>14:09:52.556</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:52.556</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate consents values] OK: took 0 ms
 -> Script-result: CS Value ( true ) and DV Value ( false ) were accepted.</message>
            <name>Then : Validate consents values</name>
            <order>13</order>
            <started>14:09:52.556</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Consents] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Consents</name>
            <order>14</order>
            <started>14:09:52.557</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price NoHit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price NoHit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate consents values</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Consents</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:09:52</startTime>
    <status>FINISHED</status>
    <testSuiteName>RebuildingCost</testSuiteName>
    <timeTaken>28526</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:09:52</startTime>
        <status>FINISHED</status>
        <testCaseId>0205d681-84a5-4e58-b312-5ea78ca481ef</testCaseId>
        <testCaseName>HO Rebuilding cost with hit</testCaseName>
        <timeTaken>28405</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : RebuildingCost Data] OK: took 36 ms</message>
            <name>DataSource : RebuildingCost Data</name>
            <order>2</order>
            <started>14:09:52.581</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 2 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:09:52.618</started>
            <status>OK</status>
            <timeTaken>2</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price] UNKNOWN: took 2338 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>4</order>
            <started>14:09:52.621</started>
            <status>UNKNOWN</status>
            <timeTaken>2338</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>5</order>
            <started>14:09:54.964</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:09:54.965</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>7</order>
            <started>14:09:54.966</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>8</order>
            <started>14:09:54.967</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:09:54.968</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price] UNKNOWN: took 3768 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>10</order>
            <started>14:09:54.970</started>
            <status>UNKNOWN</status>
            <timeTaken>3768</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>11</order>
            <started>14:09:58.743</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:09:58.745</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>13</order>
            <started>14:09:58.745</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>14</order>
            <started>14:09:58.747</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:09:58.748</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price] UNKNOWN: took 4695 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>16</order>
            <started>14:09:58.751</started>
            <status>UNKNOWN</status>
            <timeTaken>4695</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>17</order>
            <started>14:10:03.451</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:10:03.452</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>19</order>
            <started>14:10:03.453</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>20</order>
            <started>14:10:03.453</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:10:03.454</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price] UNKNOWN: took 2318 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>22</order>
            <started>14:10:03.456</started>
            <status>UNKNOWN</status>
            <timeTaken>2318</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>23</order>
            <started>14:10:05.781</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:10:05.782</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>25</order>
            <started>14:10:05.783</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>26</order>
            <started>14:10:05.784</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:10:05.784</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price] UNKNOWN: took 3083 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>28</order>
            <started>14:10:05.786</started>
            <status>UNKNOWN</status>
            <timeTaken>3083</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>29</order>
            <started>14:10:08.875</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>30</order>
            <started>14:10:08.875</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>31</order>
            <started>14:10:08.876</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>32</order>
            <started>14:10:08.877</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:10:08.877</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price] UNKNOWN: took 2380 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>34</order>
            <started>14:10:08.879</started>
            <status>UNKNOWN</status>
            <timeTaken>2380</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>35</order>
            <started>14:10:11.264</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>36</order>
            <started>14:10:11.265</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>37</order>
            <started>14:10:11.266</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>38</order>
            <started>14:10:11.266</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>39</order>
            <started>14:10:11.267</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Calculate request to get a price] UNKNOWN: took 2334 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>40</order>
            <started>14:10:11.269</started>
            <status>UNKNOWN</status>
            <timeTaken>2334</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>41</order>
            <started>14:10:13.608</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>42</order>
            <started>14:10:13.609</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>43</order>
            <started>14:10:13.610</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 7</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>44</order>
            <started>14:10:13.610</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>45</order>
            <started>14:10:13.611</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 45 [Given : I have send Calculate request to get a price] UNKNOWN: took 2356 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>46</order>
            <started>14:10:13.613</started>
            <status>UNKNOWN</status>
            <timeTaken>2356</timeTaken>
          </result>
          <result>
            <message>Step 46 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>47</order>
            <started>14:10:15.974</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>48</order>
            <started>14:10:15.975</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>49</order>
            <started>14:10:15.976</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 8</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>50</order>
            <started>14:10:15.976</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>51</order>
            <started>14:10:15.977</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 51 [Given : I have send Calculate request to get a price] UNKNOWN: took 2310 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>52</order>
            <started>14:10:15.979</started>
            <status>UNKNOWN</status>
            <timeTaken>2310</timeTaken>
          </result>
          <result>
            <message>Step 52 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>53</order>
            <started>14:10:18.294</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 53 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>54</order>
            <started>14:10:18.295</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 54 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>55</order>
            <started>14:10:18.295</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 55 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 9</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>56</order>
            <started>14:10:18.296</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 56 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>57</order>
            <started>14:10:18.297</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 57 [Given : I have send Calculate request to get a price] UNKNOWN: took 2325 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>58</order>
            <started>14:10:18.298</started>
            <status>UNKNOWN</status>
            <timeTaken>2325</timeTaken>
          </result>
          <result>
            <message>Step 58 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>59</order>
            <started>14:10:20.631</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 59 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>60</order>
            <started>14:10:20.631</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 60 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>61</order>
            <started>14:10:20.632</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 61 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 10</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>62</order>
            <started>14:10:20.633</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 62 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>63</order>
            <started>14:10:20.634</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 63 [Given : I have send Calculate request to get a price] UNKNOWN: took 450 ms</message>
            <name>Given : I have send Calculate request to get a price</name>
            <order>64</order>
            <started>14:10:20.635</started>
            <status>UNKNOWN</status>
            <timeTaken>450</timeTaken>
          </result>
          <result>
            <message>Step 64 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>65</order>
            <started>14:10:21.089</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 65 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>66</order>
            <started>14:10:21.090</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 66 [Then : Validate rebuildingCost value] OK: took 0 ms</message>
            <name>Then : Validate rebuildingCost value</name>
            <order>67</order>
            <started>14:10:21.091</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 67 [DataSource Loop : Rebuilding cost] OK: took 0 ms
 -> Data Row 11</message>
            <name>DataSource Loop : Rebuilding cost</name>
            <order>68</order>
            <started>14:10:21.091</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : RebuildingCost Data</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate rebuildingCost value</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Rebuilding cost</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:10:21</startTime>
    <status>FINISHED</status>
    <testSuiteName>NumberOfUnits</testSuiteName>
    <timeTaken>20491</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:10:21</startTime>
        <status>FINISHED</status>
        <testCaseId>1644e527-092a-404e-85f7-19cc1178429c</testCaseId>
        <testCaseName>HO Number of units</testCaseName>
        <timeTaken>5328</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : NumberOfUnits] OK: took 36 ms</message>
            <name>DataSource : NumberOfUnits</name>
            <order>2</order>
            <started>14:10:21.115</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:10:21.153</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 66 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:10:21.154</started>
            <status>OK</status>
            <timeTaken>66</timeTaken>
          </result>
          <result>
            <message>Step 4 [Validate response is expected] OK: took 1 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( 1050222 ) is present ( Number of units in building mandatory ).</message>
            <name>Validate response is expected</name>
            <order>5</order>
            <started>14:10:21.224</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>6</order>
            <started>14:10:21.226</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>7</order>
            <started>14:10:21.227</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Calculate request to get a price hit] OK: took 2525 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>8</order>
            <started>14:10:21.227</started>
            <status>OK</status>
            <timeTaken>2525</timeTaken>
          </result>
          <result>
            <message>Step 8 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 1 numberOfUnits ( Single-family dewlling (1 unit) ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>9</order>
            <started>14:10:23.758</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>10</order>
            <started>14:10:23.759</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>11</order>
            <started>14:10:23.760</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Given : I have send Calculate request to get a price hit] OK: took 2238 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>12</order>
            <started>14:10:23.761</started>
            <status>OK</status>
            <timeTaken>2238</timeTaken>
          </result>
          <result>
            <message>Step 12 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 2 numberOfUnits ( Two-family dwelling (2 units) ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>13</order>
            <started>14:10:26.004</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>14</order>
            <started>14:10:26.005</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:10:26.006</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] OK: took 388 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:10:26.007</started>
            <status>OK</status>
            <timeTaken>388</timeTaken>
          </result>
          <result>
            <message>Step 16 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  HARD_ROADBLOCK ( WQ00076 ) is present ( The number of units is invalid ).</message>
            <name>Validate response is expected</name>
            <order>17</order>
            <started>14:10:26.399</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>18</order>
            <started>14:10:26.400</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:10:26.401</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] OK: took 74 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:10:26.402</started>
            <status>OK</status>
            <timeTaken>74</timeTaken>
          </result>
          <result>
            <message>Step 20 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( WQ00084 ) is present ( The number of units is invalid ).</message>
            <name>Validate response is expected</name>
            <order>21</order>
            <started>14:10:26.479</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>22</order>
            <started>14:10:26.480</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:10:26</startTime>
        <status>FINISHED</status>
        <testCaseId>d748cdf5-5756-47a7-94df-60f7e9a7c74f</testCaseId>
        <testCaseName>CO Number of units</testCaseName>
        <timeTaken>7087</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : NumberOfUnits] OK: took 35 ms</message>
            <name>DataSource : NumberOfUnits</name>
            <order>2</order>
            <started>14:10:26.493</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:10:26.530</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 75 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:10:26.531</started>
            <status>OK</status>
            <timeTaken>75</timeTaken>
          </result>
          <result>
            <message>Step 4 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( WQ00084 ) is present ( The number of units is invalid ).</message>
            <name>Validate response is expected</name>
            <order>5</order>
            <started>14:10:26.611</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>6</order>
            <started>14:10:26.612</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>7</order>
            <started>14:10:26.613</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Calculate request to get a price hit] OK: took 67 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>8</order>
            <started>14:10:26.614</started>
            <status>OK</status>
            <timeTaken>67</timeTaken>
          </result>
          <result>
            <message>Step 8 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( WQ00084 ) is present ( The number of units is invalid ).</message>
            <name>Validate response is expected</name>
            <order>9</order>
            <started>14:10:26.686</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>10</order>
            <started>14:10:26.687</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>11</order>
            <started>14:10:26.687</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Given : I have send Calculate request to get a price hit] OK: took 74 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>12</order>
            <started>14:10:26.688</started>
            <status>OK</status>
            <timeTaken>74</timeTaken>
          </result>
          <result>
            <message>Step 12 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( 1050222 ) is present ( Number of units in building mandatory ).</message>
            <name>Validate response is expected</name>
            <order>13</order>
            <started>14:10:26.838</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>14</order>
            <started>14:10:26.839</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:10:26.840</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] OK: took 3102 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:10:26.841</started>
            <status>OK</status>
            <timeTaken>3102</timeTaken>
          </result>
          <result>
            <message>Step 16 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 10 numberOfUnits ( 1 to 8 ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>17</order>
            <started>14:10:29.949</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>18</order>
            <started>14:10:29.950</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:10:29.951</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] OK: took 1843 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:10:29.951</started>
            <status>OK</status>
            <timeTaken>1843</timeTaken>
          </result>
          <result>
            <message>Step 20 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 11 numberOfUnits ( 9 to 23 ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>21</order>
            <started>14:10:31.801</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>22</order>
            <started>14:10:31.802</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:10:31.802</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] OK: took 1891 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:10:31.803</started>
            <status>OK</status>
            <timeTaken>1891</timeTaken>
          </result>
          <result>
            <message>Step 24 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 24 numberOfUnits ( 24 or more ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>25</order>
            <started>14:10:33.701</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>26</order>
            <started>14:10:33.703</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:10:33</startTime>
        <status>FINISHED</status>
        <testCaseId>654e7f08-4273-4b8a-bdd7-a4419a033242</testCaseId>
        <testCaseName>TE Number of units</testCaseName>
        <timeTaken>7819</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : NumberOfUnits] OK: took 36 ms</message>
            <name>DataSource : NumberOfUnits</name>
            <order>2</order>
            <started>14:10:33.715</started>
            <status>OK</status>
            <timeTaken>36</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:10:33.753</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 66 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:10:33.754</started>
            <status>OK</status>
            <timeTaken>66</timeTaken>
          </result>
          <result>
            <message>Step 4 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( 1050222 ) is present ( Number of units in building mandatory ).</message>
            <name>Validate response is expected</name>
            <order>5</order>
            <started>14:10:33.824</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>6</order>
            <started>14:10:33.825</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>7</order>
            <started>14:10:33.826</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Calculate request to get a price hit] OK: took 63 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>8</order>
            <started>14:10:33.827</started>
            <status>OK</status>
            <timeTaken>63</timeTaken>
          </result>
          <result>
            <message>Step 8 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( WQ00084 ) is present ( The number of units is invalid ).</message>
            <name>Validate response is expected</name>
            <order>9</order>
            <started>14:10:33.895</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>10</order>
            <started>14:10:33.896</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>11</order>
            <started>14:10:33.897</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Given : I have send Calculate request to get a price hit] OK: took 60 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>12</order>
            <started>14:10:33.898</started>
            <status>OK</status>
            <timeTaken>60</timeTaken>
          </result>
          <result>
            <message>Step 12 [Validate response is expected] OK: took 0 ms
 -> Script-result:    QAFunctions :   SUCCESS   :  FIELD_VALIDATION ( WQ00084 ) is present ( The number of units is invalid ).</message>
            <name>Validate response is expected</name>
            <order>13</order>
            <started>14:10:33.962</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>14</order>
            <started>14:10:33.963</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:10:33.964</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] OK: took 1872 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:10:33.966</started>
            <status>OK</status>
            <timeTaken>1872</timeTaken>
          </result>
          <result>
            <message>Step 16 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 1 numberOfUnits ( 1 ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>17</order>
            <started>14:10:35.844</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>18</order>
            <started>14:10:35.845</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:10:35.847</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] OK: took 1887 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:10:35.849</started>
            <status>OK</status>
            <timeTaken>1887</timeTaken>
          </result>
          <result>
            <message>Step 20 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 5 numberOfUnits ( 2 to 7 ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>21</order>
            <started>14:10:37.742</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>22</order>
            <started>14:10:37.743</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 22 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>23</order>
            <started>14:10:37.744</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Given : I have send Calculate request to get a price hit] OK: took 1931 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>24</order>
            <started>14:10:37.744</started>
            <status>OK</status>
            <timeTaken>1931</timeTaken>
          </result>
          <result>
            <message>Step 24 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 9 numberOfUnits ( 8 to 23 ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>25</order>
            <started>14:10:39.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>26</order>
            <started>14:10:39.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:10:39.683</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] OK: took 1904 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>14:10:39.684</started>
            <status>OK</status>
            <timeTaken>1904</timeTaken>
          </result>
          <result>
            <message>Step 28 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 24 numberOfUnits ( 24 or more ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>29</order>
            <started>14:10:41.592</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 7</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>30</order>
            <started>14:10:41.593</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:10:41</startTime>
    <status>FINISHED</status>
    <testSuiteName>InsuredSince</testSuiteName>
    <timeTaken>44625</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:10:41</startTime>
        <status>FINISHED</status>
        <testCaseId>7691c58b-b761-4618-8e84-a9ae43f66b2b</testCaseId>
        <testCaseName>HO Insured since</testCaseName>
        <timeTaken>12205</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : InsuredSince] OK: took 33 ms</message>
            <name>DataSource : InsuredSince</name>
            <order>2</order>
            <started>14:10:41.615</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:10:41.650</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] OK: took 2925 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:10:41.652</started>
            <status>OK</status>
            <timeTaken>2925</timeTaken>
          </result>
          <result>
            <message>Step 4 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 0D insuredSince ( Not currently insured ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>5</order>
            <started>14:10:44.582</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>6</order>
            <started>14:10:44.583</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>7</order>
            <started>14:10:44.584</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [Given : I have send Calculate request to get a price hit] OK: took 2441 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>8</order>
            <started>14:10:44.586</started>
            <status>OK</status>
            <timeTaken>2441</timeTaken>
          </result>
          <result>
            <message>Step 8 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 2950D insuredSince ( 8 years ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>9</order>
            <started>14:10:47.032</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>10</order>
            <started>14:10:47.033</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 10 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>11</order>
            <started>14:10:47.033</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Given : I have send Calculate request to get a price hit] OK: took 2210 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>12</order>
            <started>14:10:47.035</started>
            <status>OK</status>
            <timeTaken>2210</timeTaken>
          </result>
          <result>
            <message>Step 12 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 5506D insuredSince ( 15 years or more ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>13</order>
            <started>14:10:49.250</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>14</order>
            <started>14:10:49.251</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:10:49.252</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] OK: took 2258 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:10:49.253</started>
            <status>OK</status>
            <timeTaken>2258</timeTaken>
          </result>
          <result>
            <message>Step 16 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS :  insuredSince ( Select ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>17</order>
            <started>14:10:51.516</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>18</order>
            <started>14:10:51.517</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>19</order>
            <started>14:10:51.518</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [Given : I have send Calculate request to get a price hit] OK: took 2338 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>20</order>
            <started>14:10:51.519</started>
            <status>OK</status>
            <timeTaken>2338</timeTaken>
          </result>
          <result>
            <message>Step 20 [Validate response is expected] OK: took 0 ms
 -> Script-result:    SUCCESS : 88 insuredSince ( Invalid insuredSince value ) value was accepted</message>
            <name>Validate response is expected</name>
            <order>21</order>
            <started>14:10:53.864</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [DataSource Loop : NumberOfUnits] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : NumberOfUnits</name>
            <order>22</order>
            <started>14:10:53.865</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Validate response is expected</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : NumberOfUnits</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:10:53</startTime>
        <status>FINISHED</status>
        <testCaseId>3fbb06c1-3a65-4cc8-aad0-bd34fdc1c102</testCaseId>
        <testCaseName>CO Insured since</testCaseName>
        <timeTaken>16067</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : InsuredSince] OK: took 33 ms</message>
            <name>DataSource : InsuredSince</name>
            <order>2</order>
            <started>14:10:53.879</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:10:53.914</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2069 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:10:53.915</started>
            <status>UNKNOWN</status>
            <timeTaken>2069</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>5</order>
            <started>14:10:55.990</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:10:55.991</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 0D insuredSince ( Not currently insured ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>7</order>
            <started>14:10:55.992</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>8</order>
            <started>14:10:55.992</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:10:55.993</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2266 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:10:55.994</started>
            <status>UNKNOWN</status>
            <timeTaken>2266</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>11</order>
            <started>14:10:58.266</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:10:58.267</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1D insuredSince ( Less than one year ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>13</order>
            <started>14:10:58.267</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>14</order>
            <started>14:10:58.268</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:10:58.268</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2254 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:10:58.269</started>
            <status>UNKNOWN</status>
            <timeTaken>2254</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>17</order>
            <started>14:11:00.529</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:11:00.530</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 395D insuredSince ( 1 year ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>19</order>
            <started>14:11:00.530</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>20</order>
            <started>14:11:00.531</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:11:00.531</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1995 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:11:00.533</started>
            <status>UNKNOWN</status>
            <timeTaken>1995</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>23</order>
            <started>14:11:02.534</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:11:02.534</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 760D insuredSince ( 2 years ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>25</order>
            <started>14:11:02.535</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>26</order>
            <started>14:11:02.536</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:11:02.536</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2289 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>14:11:02.537</started>
            <status>UNKNOWN</status>
            <timeTaken>2289</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>29</order>
            <started>14:11:04.832</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>30</order>
            <started>14:11:04.833</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1125D insuredSince ( 3 years ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>31</order>
            <started>14:11:04.833</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>32</order>
            <started>14:11:04.834</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:11:04.835</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2023 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>14:11:04.836</started>
            <status>UNKNOWN</status>
            <timeTaken>2023</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>35</order>
            <started>14:11:06.865</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>36</order>
            <started>14:11:06.866</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1490D insuredSince ( 4 years ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>37</order>
            <started>14:11:06.866</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>38</order>
            <started>14:11:06.867</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the riskType to calculate] OK: took 1 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>39</order>
            <started>14:11:06.867</started>
            <status>OK</status>
            <timeTaken>1</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3137 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>40</order>
            <started>14:11:06.869</started>
            <status>UNKNOWN</status>
            <timeTaken>3137</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>41</order>
            <started>14:11:10.013</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>42</order>
            <started>14:11:10.014</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1856D insuredSince ( 5 years or more ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>43</order>
            <started>14:11:10.014</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 7</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>44</order>
            <started>14:11:10.015</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:11:10</startTime>
        <status>FINISHED</status>
        <testCaseId>b4940aef-8b65-471e-b32c-33ee16380c53</testCaseId>
        <testCaseName>CO Insured since is mandatory</testCaseName>
        <timeTaken>2004</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:11:10.029</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2004 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:11:10.031</started>
            <status>UNKNOWN</status>
            <timeTaken>2004</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:11:12.041</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we have a quote number and a price] OK: took 0 ms</message>
            <name>Then : Verify that we have a quote number and a price</name>
            <order>5</order>
            <started>14:11:12.042</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Validate insuredSince is converted to 0D] OK: took 0 ms
 -> Script-result:    SUCCESS : null value was converted to '0D'</message>
            <name>Then : Validate insuredSince is converted to 0D</name>
            <order>6</order>
            <started>14:11:12.043</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a quote number and a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince is converted to 0D</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:11:12</startTime>
        <status>FINISHED</status>
        <testCaseId>22951eba-517c-4907-a038-160782a24e75</testCaseId>
        <testCaseName>TE Insured since</testCaseName>
        <timeTaken>11991</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : InsuredSince] OK: took 33 ms</message>
            <name>DataSource : InsuredSince</name>
            <order>2</order>
            <started>14:11:12.056</started>
            <status>OK</status>
            <timeTaken>33</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:11:12.090</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2013 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:11:12.091</started>
            <status>UNKNOWN</status>
            <timeTaken>2013</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>5</order>
            <started>14:11:14.109</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:11:14.110</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1D insuredSince ( Less than one year ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>7</order>
            <started>14:11:14.111</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>8</order>
            <started>14:11:14.111</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:11:14.112</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1886 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:11:14.113</started>
            <status>UNKNOWN</status>
            <timeTaken>1886</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>11</order>
            <started>14:11:16.005</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:11:16.005</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 395D insuredSince ( 1 year ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>13</order>
            <started>14:11:16.006</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>14</order>
            <started>14:11:16.006</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:11:16.007</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2019 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:11:16.008</started>
            <status>UNKNOWN</status>
            <timeTaken>2019</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>17</order>
            <started>14:11:18.032</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:11:18.033</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 760D insuredSince ( 2 years ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>19</order>
            <started>14:11:18.034</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>20</order>
            <started>14:11:18.034</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:11:18.035</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2428 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:11:18.036</started>
            <status>UNKNOWN</status>
            <timeTaken>2428</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>23</order>
            <started>14:11:20.468</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:11:20.469</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1125D insuredSince ( 3 years ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>25</order>
            <started>14:11:20.470</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>26</order>
            <started>14:11:20.471</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:11:20.471</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1735 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>14:11:20.472</started>
            <status>UNKNOWN</status>
            <timeTaken>1735</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>29</order>
            <started>14:11:22.213</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>30</order>
            <started>14:11:22.214</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1490D insuredSince ( 4 years ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>31</order>
            <started>14:11:22.214</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>32</order>
            <started>14:11:22.215</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:11:22.215</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1877 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>14:11:22.216</started>
            <status>UNKNOWN</status>
            <timeTaken>1877</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK &amp; no errors if insuredSince is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</name>
            <order>35</order>
            <started>14:11:24.099</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>36</order>
            <started>14:11:24.100</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate insuredSince] OK: took 0 ms
 -> Script-result:    SUCCESS : 1856D insuredSince ( 5 years or more ) value was accepted</message>
            <name>Then : Validate insuredSince</name>
            <order>37</order>
            <started>14:11:24.101</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : InsuredSince] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : InsuredSince</name>
            <order>38</order>
            <started>14:11:24.101</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if insuredSince is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : InsuredSince</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:11:24</startTime>
        <status>FINISHED</status>
        <testCaseId>e757d047-e45d-4024-b505-889fec427b32</testCaseId>
        <testCaseName>TE Insured since is mandatory</testCaseName>
        <timeTaken>2103</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>2</order>
            <started>14:11:24.115</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 2 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2103 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>3</order>
            <started>14:11:24.116</started>
            <status>UNKNOWN</status>
            <timeTaken>2103</timeTaken>
          </result>
          <result>
            <message>Step 3 [When : Verify that Http status is OK] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK</name>
            <order>4</order>
            <started>14:11:26.224</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 4 [Then : Verify that we have a quote number and a price] OK: took 0 ms</message>
            <name>Then : Verify that we have a quote number and a price</name>
            <order>5</order>
            <started>14:11:26.225</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Validate insuredSince is converted to 0D] OK: took 0 ms
 -> Script-result:    SUCCESS : null value was converted to '0D'</message>
            <name>Then : Validate insuredSince is converted to 0D</name>
            <order>6</order>
            <started>14:11:26.226</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a quote number and a price</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate insuredSince is converted to 0D</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:11:26</startTime>
    <status>FINISHED</status>
    <testSuiteName>MovedInDate</testSuiteName>
    <timeTaken>79282</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:11:26</startTime>
        <status>FINISHED</status>
        <testCaseId>2ede7cc8-9b56-43c0-bb0f-7a8957b8b1e1</testCaseId>
        <testCaseName>HO Moved in date</testCaseName>
        <timeTaken>32926</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : MovedInDate] OK: took 39 ms</message>
            <name>DataSource : MovedInDate</name>
            <order>2</order>
            <started>14:11:26.251</started>
            <status>OK</status>
            <timeTaken>39</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:11:26.291</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2512 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:11:26.292</started>
            <status>UNKNOWN</status>
            <timeTaken>2512</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>5</order>
            <started>14:11:28.810</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:11:28.810</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 0D movedInDate ( Not moved in yet ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>7</order>
            <started>14:11:28.811</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>8</order>
            <started>14:11:28.812</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:11:28.812</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 3063 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:11:28.813</started>
            <status>UNKNOWN</status>
            <timeTaken>3063</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>11</order>
            <started>14:11:31.882</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:11:31.882</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1D movedInDate ( Less than 6 month ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>13</order>
            <started>14:11:31.883</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>14</order>
            <started>14:11:31.884</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:11:31.884</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2285 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:11:31.885</started>
            <status>UNKNOWN</status>
            <timeTaken>2285</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>17</order>
            <started>14:11:34.177</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:11:34.177</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 183D movedInDate ( Less than 1 year ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>19</order>
            <started>14:11:34.178</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>20</order>
            <started>14:11:34.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:11:34.179</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2488 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:11:34.180</started>
            <status>UNKNOWN</status>
            <timeTaken>2488</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>23</order>
            <started>14:11:36.673</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:11:36.673</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 395D movedInDate ( Less than 2 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>25</order>
            <started>14:11:36.674</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>26</order>
            <started>14:11:36.675</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:11:36.675</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2469 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>14:11:36.676</started>
            <status>UNKNOWN</status>
            <timeTaken>2469</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>29</order>
            <started>14:11:39.152</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>30</order>
            <started>14:11:39.152</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 760D movedInDate ( Less than 3 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>31</order>
            <started>14:11:39.153</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>32</order>
            <started>14:11:39.154</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:11:39.154</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2606 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>14:11:39.155</started>
            <status>UNKNOWN</status>
            <timeTaken>2606</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>35</order>
            <started>14:11:41.767</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>36</order>
            <started>14:11:41.767</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1125D movedInDate ( Less than 4 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>37</order>
            <started>14:11:41.768</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>38</order>
            <started>14:11:41.768</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>39</order>
            <started>14:11:41.769</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2585 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>40</order>
            <started>14:11:41.770</started>
            <status>UNKNOWN</status>
            <timeTaken>2585</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>41</order>
            <started>14:11:44.361</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>42</order>
            <started>14:11:44.361</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1490D movedInDate ( Less than 5 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>43</order>
            <started>14:11:44.365</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 7</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>44</order>
            <started>14:11:44.366</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>45</order>
            <started>14:11:44.367</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2383 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>46</order>
            <started>14:11:44.368</started>
            <status>UNKNOWN</status>
            <timeTaken>2383</timeTaken>
          </result>
          <result>
            <message>Step 46 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>47</order>
            <started>14:11:46.756</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>48</order>
            <started>14:11:46.757</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1855D movedInDate ( Less than 6 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>49</order>
            <started>14:11:46.757</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 8</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>50</order>
            <started>14:11:46.758</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>51</order>
            <started>14:11:46.758</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2328 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>52</order>
            <started>14:11:46.759</started>
            <status>UNKNOWN</status>
            <timeTaken>2328</timeTaken>
          </result>
          <result>
            <message>Step 52 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>53</order>
            <started>14:11:49.093</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 53 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>54</order>
            <started>14:11:49.094</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 54 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 2220D movedInDate ( Less than 7 year ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>55</order>
            <started>14:11:49.094</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 55 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 9</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>56</order>
            <started>14:11:49.095</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 56 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>57</order>
            <started>14:11:49.096</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 57 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2292 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>58</order>
            <started>14:11:49.097</started>
            <status>UNKNOWN</status>
            <timeTaken>2292</timeTaken>
          </result>
          <result>
            <message>Step 58 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>59</order>
            <started>14:11:51.394</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 59 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>60</order>
            <started>14:11:51.394</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 60 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 2585D movedInDate ( Less than 8 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>61</order>
            <started>14:11:51.395</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 61 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 10</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>62</order>
            <started>14:11:51.395</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 62 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>63</order>
            <started>14:11:51.396</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 63 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2372 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>64</order>
            <started>14:11:51.397</started>
            <status>UNKNOWN</status>
            <timeTaken>2372</timeTaken>
          </result>
          <result>
            <message>Step 64 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>65</order>
            <started>14:11:53.776</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 65 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>66</order>
            <started>14:11:53.776</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 66 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 2950D movedInDate ( Less than 9 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>67</order>
            <started>14:11:53.777</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 67 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 11</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>68</order>
            <started>14:11:53.777</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 68 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>69</order>
            <started>14:11:53.778</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 69 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2651 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>70</order>
            <started>14:11:53.779</started>
            <status>UNKNOWN</status>
            <timeTaken>2651</timeTaken>
          </result>
          <result>
            <message>Step 70 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>71</order>
            <started>14:11:56.434</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 71 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>72</order>
            <started>14:11:56.435</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 72 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 3315D movedInDate ( Less than 10 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>73</order>
            <started>14:11:56.435</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 73 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 12</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>74</order>
            <started>14:11:56.436</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 74 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>75</order>
            <started>14:11:56.437</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 75 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2853 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>76</order>
            <started>14:11:56.438</started>
            <status>UNKNOWN</status>
            <timeTaken>2853</timeTaken>
          </result>
          <result>
            <message>Step 76 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>77</order>
            <started>14:11:59.296</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 77 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>78</order>
            <started>14:11:59.297</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 78 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 3681D movedInDate ( 10 years or more ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>79</order>
            <started>14:11:59.298</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 79 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 13</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>80</order>
            <started>14:11:59.298</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:11:59</startTime>
        <status>FINISHED</status>
        <testCaseId>99be9d76-98e1-49dd-af6a-c2a5a8e995be</testCaseId>
        <testCaseName>CO Moved in date</testCaseName>
        <timeTaken>16490</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : MovedInDate] OK: took 40 ms</message>
            <name>DataSource : MovedInDate</name>
            <order>2</order>
            <started>14:11:59.313</started>
            <status>OK</status>
            <timeTaken>40</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:11:59.354</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2319 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:11:59.355</started>
            <status>UNKNOWN</status>
            <timeTaken>2319</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>5</order>
            <started>14:12:01.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:12:01.681</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 0D movedInDate ( Not moved in yet ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>7</order>
            <started>14:12:01.682</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>8</order>
            <started>14:12:01.683</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:12:01.683</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2069 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:12:01.684</started>
            <status>UNKNOWN</status>
            <timeTaken>2069</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>11</order>
            <started>14:12:03.759</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:12:03.760</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1D movedInDate ( Less than 6 month ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>13</order>
            <started>14:12:03.760</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>14</order>
            <started>14:12:03.761</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:12:03.761</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1951 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:12:03.762</started>
            <status>UNKNOWN</status>
            <timeTaken>1951</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>17</order>
            <started>14:12:05.719</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:12:05.720</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 183D movedInDate ( Less than 1 year ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>19</order>
            <started>14:12:05.721</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>20</order>
            <started>14:12:05.721</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:12:05.722</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2166 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:12:05.723</started>
            <status>UNKNOWN</status>
            <timeTaken>2166</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>23</order>
            <started>14:12:07.998</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:12:07.999</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 395D movedInDate ( Less than 2 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>25</order>
            <started>14:12:08.000</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>26</order>
            <started>14:12:08.000</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:12:08.001</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2305 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>14:12:08.002</started>
            <status>UNKNOWN</status>
            <timeTaken>2305</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>29</order>
            <started>14:12:10.314</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>30</order>
            <started>14:12:10.314</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 760D movedInDate ( Less than 3 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>31</order>
            <started>14:12:10.315</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>32</order>
            <started>14:12:10.316</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:12:10.316</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1889 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>14:12:10.317</started>
            <status>UNKNOWN</status>
            <timeTaken>1889</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>35</order>
            <started>14:12:12.212</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>36</order>
            <started>14:12:12.213</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1125D movedInDate ( Less than 4 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>37</order>
            <started>14:12:12.213</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>38</order>
            <started>14:12:12.214</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>39</order>
            <started>14:12:12.214</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1856 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>40</order>
            <started>14:12:12.215</started>
            <status>UNKNOWN</status>
            <timeTaken>1856</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>41</order>
            <started>14:12:14.078</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>42</order>
            <started>14:12:14.079</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1490D movedInDate ( Less than 5 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>43</order>
            <started>14:12:14.080</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 7</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>44</order>
            <started>14:12:14.081</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>45</order>
            <started>14:12:14.081</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1895 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>46</order>
            <started>14:12:14.082</started>
            <status>UNKNOWN</status>
            <timeTaken>1895</timeTaken>
          </result>
          <result>
            <message>Step 46 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>47</order>
            <started>14:12:15.982</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>48</order>
            <started>14:12:15.983</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1856D movedInDate ( 5 years or more ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>49</order>
            <started>14:12:15.984</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 8</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>50</order>
            <started>14:12:15.984</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:12:15</startTime>
        <status>FINISHED</status>
        <testCaseId>46c4a1b5-2f87-4ab7-8f9f-1f2977236640</testCaseId>
        <testCaseName>TE Moved in date</testCaseName>
        <timeTaken>29400</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : MovedInDate] OK: took 35 ms</message>
            <name>DataSource : MovedInDate</name>
            <order>2</order>
            <started>14:12:15.998</started>
            <status>OK</status>
            <timeTaken>35</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:12:16.034</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1904 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:12:16.036</started>
            <status>UNKNOWN</status>
            <timeTaken>1904</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>5</order>
            <started>14:12:17.945</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:12:17.946</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 0D movedInDate ( Not moved in yet ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>7</order>
            <started>14:12:17.947</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>8</order>
            <started>14:12:17.947</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:12:17.948</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1835 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:12:17.949</started>
            <status>UNKNOWN</status>
            <timeTaken>1835</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>11</order>
            <started>14:12:19.788</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:12:19.789</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1D movedInDate ( Less than 6 month ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>13</order>
            <started>14:12:19.789</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>14</order>
            <started>14:12:19.790</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 14 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>15</order>
            <started>14:12:19.790</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 15 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1874 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>16</order>
            <started>14:12:19.791</started>
            <status>UNKNOWN</status>
            <timeTaken>1874</timeTaken>
          </result>
          <result>
            <message>Step 16 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>17</order>
            <started>14:12:21.671</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 17 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>18</order>
            <started>14:12:21.672</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 18 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 183D movedInDate ( Less than 1 year ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>19</order>
            <started>14:12:21.672</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 19 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 3</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>20</order>
            <started>14:12:21.673</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 20 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>21</order>
            <started>14:12:21.673</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 21 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1959 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>22</order>
            <started>14:12:21.674</started>
            <status>UNKNOWN</status>
            <timeTaken>1959</timeTaken>
          </result>
          <result>
            <message>Step 22 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>23</order>
            <started>14:12:23.638</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 23 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>24</order>
            <started>14:12:23.639</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 24 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 395D movedInDate ( Less than 2 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>25</order>
            <started>14:12:23.640</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 25 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 4</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>26</order>
            <started>14:12:23.640</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 26 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>27</order>
            <started>14:12:23.641</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 27 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2376 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>28</order>
            <started>14:12:23.642</started>
            <status>UNKNOWN</status>
            <timeTaken>2376</timeTaken>
          </result>
          <result>
            <message>Step 28 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>29</order>
            <started>14:12:26.023</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 29 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>30</order>
            <started>14:12:26.023</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 30 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 760D movedInDate ( Less than 3 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>31</order>
            <started>14:12:26.024</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 31 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 5</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>32</order>
            <started>14:12:26.025</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 32 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>33</order>
            <started>14:12:26.025</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 33 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 1996 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>34</order>
            <started>14:12:26.026</started>
            <status>UNKNOWN</status>
            <timeTaken>1996</timeTaken>
          </result>
          <result>
            <message>Step 34 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>35</order>
            <started>14:12:28.027</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 35 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>36</order>
            <started>14:12:28.028</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 36 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1125D movedInDate ( Less than 4 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>37</order>
            <started>14:12:28.028</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 37 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 6</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>38</order>
            <started>14:12:28.029</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 38 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>39</order>
            <started>14:12:28.030</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 39 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2063 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>40</order>
            <started>14:12:28.031</started>
            <status>UNKNOWN</status>
            <timeTaken>2063</timeTaken>
          </result>
          <result>
            <message>Step 40 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>41</order>
            <started>14:12:30.099</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 41 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>42</order>
            <started>14:12:30.099</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 42 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1490D movedInDate ( Less than 5 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>43</order>
            <started>14:12:30.100</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 43 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 7</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>44</order>
            <started>14:12:30.101</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 44 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>45</order>
            <started>14:12:30.101</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 45 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2074 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>46</order>
            <started>14:12:30.102</started>
            <status>UNKNOWN</status>
            <timeTaken>2074</timeTaken>
          </result>
          <result>
            <message>Step 46 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>47</order>
            <started>14:12:32.182</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 47 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>48</order>
            <started>14:12:32.182</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 48 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 1855D movedInDate ( Less than 6 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>49</order>
            <started>14:12:32.183</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 49 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 8</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>50</order>
            <started>14:12:32.183</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 50 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>51</order>
            <started>14:12:32.184</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 51 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2471 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>52</order>
            <started>14:12:32.185</started>
            <status>UNKNOWN</status>
            <timeTaken>2471</timeTaken>
          </result>
          <result>
            <message>Step 52 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>53</order>
            <started>14:12:34.661</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 53 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>54</order>
            <started>14:12:34.661</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 54 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 2220D movedInDate ( Less than 7 year ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>55</order>
            <started>14:12:34.662</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 55 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 9</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>56</order>
            <started>14:12:34.662</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 56 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>57</order>
            <started>14:12:34.663</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 57 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2437 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>58</order>
            <started>14:12:34.664</started>
            <status>UNKNOWN</status>
            <timeTaken>2437</timeTaken>
          </result>
          <result>
            <message>Step 58 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>59</order>
            <started>14:12:37.106</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 59 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>60</order>
            <started>14:12:37.107</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 60 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 2585D movedInDate ( Less than 8 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>61</order>
            <started>14:12:37.107</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 61 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 10</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>62</order>
            <started>14:12:37.108</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 62 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>63</order>
            <started>14:12:37.108</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 63 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2078 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>64</order>
            <started>14:12:37.109</started>
            <status>UNKNOWN</status>
            <timeTaken>2078</timeTaken>
          </result>
          <result>
            <message>Step 64 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>65</order>
            <started>14:12:39.192</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 65 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>66</order>
            <started>14:12:39.193</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 66 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 2950D movedInDate ( Less than 9 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>67</order>
            <started>14:12:39.193</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 67 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 11</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>68</order>
            <started>14:12:39.194</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 68 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>69</order>
            <started>14:12:39.194</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 69 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2229 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>70</order>
            <started>14:12:39.195</started>
            <status>UNKNOWN</status>
            <timeTaken>2229</timeTaken>
          </result>
          <result>
            <message>Step 70 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>71</order>
            <started>14:12:41.430</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 71 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>72</order>
            <started>14:12:41.431</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 72 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 3315D movedInDate ( Less than 10 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>73</order>
            <started>14:12:41.431</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 73 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 12</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>74</order>
            <started>14:12:41.432</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 74 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>75</order>
            <started>14:12:41.432</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 75 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2036 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>76</order>
            <started>14:12:41.433</started>
            <status>UNKNOWN</status>
            <timeTaken>2036</timeTaken>
          </result>
          <result>
            <message>Step 76 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>77</order>
            <started>14:12:43.474</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 77 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>78</order>
            <started>14:12:43.475</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 78 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 3680D movedInDate ( Less than 11 years ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>79</order>
            <started>14:12:43.475</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 79 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 13</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>80</order>
            <started>14:12:43.476</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 80 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>81</order>
            <started>14:12:43.476</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 81 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2033 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>82</order>
            <started>14:12:43.477</started>
            <status>UNKNOWN</status>
            <timeTaken>2033</timeTaken>
          </result>
          <result>
            <message>Step 82 [When : Verify that Http status is OK &amp; no errors if moveInDate is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</name>
            <order>83</order>
            <started>14:12:45.515</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 83 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>84</order>
            <started>14:12:45.516</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 84 [Then : Validate moveInDate] OK: took 0 ms
 -> Script-result:    SUCCESS : 4046D movedInDate ( 11 years or more ) value was accepted</message>
            <name>Then : Validate moveInDate</name>
            <order>85</order>
            <started>14:12:45.516</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 85 [DataSource Loop : MovedInDate] OK: took 0 ms
 -> Data Row 14</message>
            <name>DataSource Loop : MovedInDate</name>
            <order>86</order>
            <started>14:12:45.517</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if moveInDate is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate moveInDate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : MovedInDate</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:12:45</startTime>
    <status>FINISHED</status>
    <testSuiteName>Mortgages</testSuiteName>
    <timeTaken>5510</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:12:45</startTime>
        <status>FINISHED</status>
        <testCaseId>8bb64218-4cac-4384-b7b4-368649aba987</testCaseId>
        <testCaseName>HO Mortgages</testCaseName>
        <timeTaken>5475</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [DataSource : Mortgages] OK: took 38 ms</message>
            <name>DataSource : Mortgages</name>
            <order>2</order>
            <started>14:12:45.544</started>
            <status>OK</status>
            <timeTaken>38</timeTaken>
          </result>
          <result>
            <message>Step 2 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>3</order>
            <started>14:12:45.583</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2894 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>4</order>
            <started>14:12:45.584</started>
            <status>UNKNOWN</status>
            <timeTaken>2894</timeTaken>
          </result>
          <result>
            <message>Step 4 [When : Verify that Http status is OK &amp; no errors if mortgagesOnHome is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if mortgagesOnHome is valid</name>
            <order>5</order>
            <started>14:12:48.484</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 5 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>6</order>
            <started>14:12:48.485</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 6 [Then : Validate mortgagesOnHome] OK: took 0 ms
 -> Script-result:    SUCCESS : 0 movedInDate ( No mortgage ) value was accepted</message>
            <name>Then : Validate mortgagesOnHome</name>
            <order>7</order>
            <started>14:12:48.485</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 7 [DataSource Loop : Mortgages] OK: took 0 ms
 -> Data Row 1</message>
            <name>DataSource Loop : Mortgages</name>
            <order>8</order>
            <started>14:12:48.486</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 8 [Setup : Set the riskType to calculate] OK: took 0 ms</message>
            <name>Setup : Set the riskType to calculate</name>
            <order>9</order>
            <started>14:12:48.487</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 9 [Given : I have send Calculate request to get a price hit] UNKNOWN: took 2543 ms</message>
            <name>Given : I have send Calculate request to get a price hit</name>
            <order>10</order>
            <started>14:12:48.488</started>
            <status>UNKNOWN</status>
            <timeTaken>2543</timeTaken>
          </result>
          <result>
            <message>Step 10 [When : Verify that Http status is OK &amp; no errors if mortgagesOnHome is valid] OK: took 0 ms</message>
            <name>When : Verify that Http status is OK &amp; no errors if mortgagesOnHome is valid</name>
            <order>11</order>
            <started>14:12:51.036</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 11 [Then : Verify that we have a price &amp; A quote number] OK: took 0 ms</message>
            <name>Then : Verify that we have a price &amp; A quote number</name>
            <order>12</order>
            <started>14:12:51.037</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 12 [Then : Validate mortgagesOnHome] OK: took 0 ms
 -> Script-result:    SUCCESS : 1 movedInDate ( 1 mortgage or line of credit ) value was accepted</message>
            <name>Then : Validate mortgagesOnHome</name>
            <order>13</order>
            <started>14:12:51.038</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 13 [DataSource Loop : Mortgages] OK: took 0 ms
 -> Data Row 2</message>
            <name>DataSource Loop : Mortgages</name>
            <order>14</order>
            <started>14:12:51.038</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource : Mortgages</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if mortgagesOnHome is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate mortgagesOnHome</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Mortgages</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Setup : Set the riskType to calculate</testStepName>
          </parameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : I have send Calculate request to get a price hit</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>When : Verify that Http status is OK &amp; no errors if mortgagesOnHome is valid</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Verify that we have a price &amp; A quote number</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate mortgagesOnHome</testStepName>
          </parameters>
          <parameters>
            <iconPath>/teststeps.gif</iconPath>
            <testStepName>DataSource Loop : Mortgages</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
  <testSuite>
    <startTime>14:12:51</startTime>
    <status>FINISHED</status>
    <testSuiteName>Distributors</testSuiteName>
    <timeTaken>679</timeTaken>
    <testRunnerResults>
      <testCase>
        <startTime>14:12:51</startTime>
        <status>FINISHED</status>
        <testCaseId>1779e924-efde-4a31-bc49-3acbeb65a245</testCaseId>
        <testCaseName>Distributor_0584</testCaseName>
        <timeTaken>134</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Given : Sent a request for distributor informations] UNKNOWN: took 129 ms</message>
            <name>Given : Sent a request for distributor informations</name>
            <order>2</order>
            <started>14:12:51.066</started>
            <status>UNKNOWN</status>
            <timeTaken>129</timeTaken>
          </result>
          <result>
            <message>Step 2 [Then : setup the parameters for validations] OK: took 0 ms</message>
            <name>Then : setup the parameters for validations</name>
            <order>3</order>
            <started>14:12:51.200</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Run Function : Validate informations] OK: took 5 ms
 -> Then : Validate Http status is OK - OK - 0
 -> Then : Validate distributor informations - OK - 0
 -> - Script-result:    SUCCESS : Informations are matching for distributor 0584</message>
            <name>Run Function : Validate informations</name>
            <order>4</order>
            <started>14:12:51.200</started>
            <status>OK</status>
            <timeTaken>5</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : Sent a request for distributor informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : setup the parameters for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/run_test_case_step.png</iconPath>
            <testStepName>Run Function : Validate informations</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:12:51</startTime>
        <status>FINISHED</status>
        <testCaseId>397df2fd-8f07-40bd-9149-aa79cccc5884</testCaseId>
        <testCaseName>Distributor_0060</testCaseName>
        <timeTaken>102</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Given : Sent a request for distributor informations] UNKNOWN: took 98 ms</message>
            <name>Given : Sent a request for distributor informations</name>
            <order>2</order>
            <started>14:12:51.320</started>
            <status>UNKNOWN</status>
            <timeTaken>98</timeTaken>
          </result>
          <result>
            <message>Step 2 [Then : setup the parameters for validations] OK: took 0 ms</message>
            <name>Then : setup the parameters for validations</name>
            <order>3</order>
            <started>14:12:51.421</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Run Function : Validate informations] OK: took 4 ms
 -> Then : Validate Http status is OK - OK - 0
 -> Then : Validate distributor informations - OK - 0
 -> - Script-result:    SUCCESS : Informations are matching for distributor 0060</message>
            <name>Run Function : Validate informations</name>
            <order>4</order>
            <started>14:12:51.422</started>
            <status>OK</status>
            <timeTaken>4</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : Sent a request for distributor informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : setup the parameters for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/run_test_case_step.png</iconPath>
            <testStepName>Run Function : Validate informations</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:12:51</startTime>
        <status>FINISHED</status>
        <testCaseId>e7610544-c3a4-480c-a65a-a07faf3658de</testCaseId>
        <testCaseName>Distributor_0050</testCaseName>
        <timeTaken>93</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Given : Sent a request for distributor informations] UNKNOWN: took 89 ms</message>
            <name>Given : Sent a request for distributor informations</name>
            <order>2</order>
            <started>14:12:51.494</started>
            <status>UNKNOWN</status>
            <timeTaken>89</timeTaken>
          </result>
          <result>
            <message>Step 2 [Then : setup the parameters for validations] OK: took 0 ms</message>
            <name>Then : setup the parameters for validations</name>
            <order>3</order>
            <started>14:12:51.588</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
          <result>
            <message>Step 3 [Run Function : Validate informations] OK: took 4 ms
 -> Then : Validate Http status is OK - OK - 0
 -> Then : Validate distributor informations - OK - 0
 -> - Script-result:    SUCCESS : Informations are matching for distributor 0060</message>
            <name>Run Function : Validate informations</name>
            <order>4</order>
            <started>14:12:51.589</started>
            <status>OK</status>
            <timeTaken>4</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : Sent a request for distributor informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : setup the parameters for validations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/run_test_case_step.png</iconPath>
            <testStepName>Run Function : Validate informations</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
      <testCase>
        <startTime>14:12:51</startTime>
        <status>FINISHED</status>
        <testCaseId>fc5298f1-5d10-4e49-a96d-a7da8485bf84</testCaseId>
        <testCaseName>Distributor_invalid</testCaseName>
        <timeTaken>66</timeTaken>
        <testStepResults>
          <result>
            <message>Step 1 [Given : Sent a request for distributor informations] UNKNOWN: took 66 ms</message>
            <name>Given : Sent a request for distributor informations</name>
            <order>2</order>
            <started>14:12:51.659</started>
            <status>UNKNOWN</status>
            <timeTaken>66</timeTaken>
          </result>
          <result>
            <message>Step 2 [Then : Validate response code is 400] OK: took 0 ms</message>
            <name>Then : Validate response code is 400</name>
            <order>3</order>
            <started>14:12:51.729</started>
            <status>OK</status>
            <timeTaken>0</timeTaken>
          </result>
        </testStepResults>
        <testStepParameters>
          <parameters>
            <iconPath>/rest_request_step.png</iconPath>
            <testStepName>Given : Sent a request for distributor informations</testStepName>
          </parameters>
          <parameters>
            <iconPath>/groovy_script_step.png</iconPath>
            <testStepName>Then : Validate response code is 400</testStepName>
          </parameters>
        </testStepParameters>
        <failedTestSteps/>
      </testCase>
    </testRunnerResults>
  </testSuite>
</testSuiteResults>